Types
AcceptNegotiableQuoteTemplateInput
Description

Specifies the quote template id to accept quote template.
Fields
Input Field 	Description
template_id - ID! 	The unique ID of a NegotiableQuoteTemplate object.
Example

{"template_id": "4"}

back to top
Types
AddBundleProductsToCartInput
Description

Defines the bundle products to add to the cart.
Fields
Input Field 	Description
cart_id - String! 	The ID of the cart.
cart_items - [BundleProductCartItemInput]! 	An array of bundle products to add.
Example

{
  "cart_id": "abc123",
  "cart_items": [BundleProductCartItemInput]
}

back to top
Types
AddBundleProductsToCartOutput
Description

Contains details about the cart after adding bundle products.
Fields
Field Name 	Description
cart - Cart! 	The cart after adding products.
Example

{"cart": Cart}

back to top
Types
AddConfigurableProductsToCartInput
Description

Defines the configurable products to add to the cart.
Fields
Input Field 	Description
cart_id - String! 	The ID of the cart.
cart_items - [ConfigurableProductCartItemInput]! 	An array of configurable products to add.
Example

{
  "cart_id": "abc123",
  "cart_items": [ConfigurableProductCartItemInput]
}

back to top
Types
AddConfigurableProductsToCartOutput
Description

Contains details about the cart after adding configurable products.
Fields
Field Name 	Description
cart - Cart! 	The cart after adding products.
Example

{"cart": Cart}

back to top
Types
AddDownloadableProductsToCartInput
Fields
Input Field 	Description
cart_id - String! 	The ID of the cart.
cart_items - [DownloadableProductCartItemInput]! 	An array of downloadable products to add.
Example

{
  "cart_id": "abc123",
  "cart_items": [DownloadableProductCartItemInput]
}

back to top
Types
AddDownloadableProductsToCartOutput
Description

Contains details about the cart after adding downloadable products.
Fields
Field Name 	Description
cart - Cart! 	The cart after adding products.
Example

{"cart": Cart}

back to top
Types
AddGiftRegistryRegistrantInput
Description

Defines a new registrant.
Fields
Input Field 	Description
dynamic_attributes - [GiftRegistryDynamicAttributeInput] 	Additional attributes specified as a code-value pair.
email - String! 	The email address of the registrant.
firstname - String! 	The first name of the registrant.
lastname - String! 	The last name of the registrant.
Example

{
  "dynamic_attributes": [
    GiftRegistryDynamicAttributeInput
  ],
  "email": "xyz789",
  "firstname": "xyz789",
  "lastname": "xyz789"
}

back to top
Types
AddGiftRegistryRegistrantsOutput
Description

Contains the results of a request to add registrants.
Fields
Field Name 	Description
gift_registry - GiftRegistry 	The gift registry after adding registrants.
Example

{"gift_registry": GiftRegistry}

back to top
Types
AddProductsToCartOutput
Description

Contains details about the cart after adding products to it.
Fields
Field Name 	Description
cart - Cart! 	The cart after products have been added.
user_errors - [Error]! 	Contains errors encountered while adding an item to the cart.
Example

{
  "cart": Cart,
  "user_errors": [Error]
}

back to top
Types
AddProductsToCompareListInput
Description

Contains products to add to an existing compare list.
Fields
Input Field 	Description
products - [ID]! 	An array of product IDs to add to the compare list.
uid - ID! 	The unique identifier of the compare list to modify.
Example

{
  "products": ["4"],
  "uid": "4"
}

back to top
Types
AddProductsToRequisitionListOutput
Description

Output of the request to add products to a requisition list.
Fields
Field Name 	Description
requisition_list - RequisitionList 	The requisition list after adding products.
Example

{"requisition_list": RequisitionList}

back to top
Types
AddProductsToWishlistOutput
Description

Contains the customer's wish list and any errors encountered.
Fields
Field Name 	Description
user_errors - [WishListUserInputError]! 	An array of errors encountered while adding products to a wish list.
wishlist - Wishlist! 	Contains the wish list with all items that were successfully added.
Example

{
  "user_errors": [WishListUserInputError],
  "wishlist": Wishlist
}

back to top
Types
AddPurchaseOrderCommentInput
Description

Contains the comment to be added to a purchase order.
Fields
Input Field 	Description
comment - String! 	Comment text.
purchase_order_uid - ID! 	The unique ID of a purchase order.
Example

{
  "comment": "xyz789",
  "purchase_order_uid": "4"
}

back to top
Types
AddPurchaseOrderCommentOutput
Description

Contains the successfully added comment.
Fields
Field Name 	Description
comment - PurchaseOrderComment! 	The purchase order comment.
Example

{"comment": PurchaseOrderComment}

back to top
Types
AddPurchaseOrderItemsToCartInput
Description

Defines the purchase order and cart to act on.
Fields
Input Field 	Description
cart_id - String! 	The ID to assign to the cart.
purchase_order_uid - ID! 	Purchase order unique ID.
replace_existing_cart_items - Boolean! 	Replace existing cart or merge items.
Example

{
  "cart_id": "abc123",
  "purchase_order_uid": "4",
  "replace_existing_cart_items": false
}

back to top
Types
AddRequisitionListItemToCartUserError
Description

Contains details about why an attempt to add items to the requistion list failed.
Fields
Field Name 	Description
message - String! 	A description of the error.
type - AddRequisitionListItemToCartUserErrorType! 	The type of error that occurred.
Example

{
  "message": "xyz789",
  "type": "OUT_OF_STOCK"
}

back to top
Types
AddRequisitionListItemToCartUserErrorType
Values
Enum Value 	Description

OUT_OF_STOCK


UNAVAILABLE_SKU


OPTIONS_UPDATED


LOW_QUANTITY

Example

"OUT_OF_STOCK"

back to top
Types
AddRequisitionListItemsToCartOutput
Description

Output of the request to add items in a requisition list to the cart.
Fields
Field Name 	Description
add_requisition_list_items_to_cart_user_errors - [AddRequisitionListItemToCartUserError]! 	Details about why the attempt to add items to the requistion list was not successful.
cart - Cart 	The cart after adding requisition list items.
status - Boolean! 	Indicates whether the attempt to add items to the requisition list was successful.
Example

{
  "add_requisition_list_items_to_cart_user_errors": [
    AddRequisitionListItemToCartUserError
  ],
  "cart": Cart,
  "status": true
}

back to top
Types
AddReturnCommentInput
Description

Defines a return comment.
Fields
Input Field 	Description
comment_text - String! 	The text added to the return request.
return_uid - ID! 	The unique ID for a Return object.
Example

{"comment_text": "abc123", "return_uid": 4}

back to top
Types
AddReturnCommentOutput
Description

Contains details about the return request.
Fields
Field Name 	Description
return - Return 	The modified return.
Example

{"return": Return}

back to top
Types
AddReturnTrackingInput
Description

Defines tracking information to be added to the return.
Fields
Input Field 	Description
carrier_uid - ID! 	The unique ID for a ReturnShippingCarrier object.
return_uid - ID! 	The unique ID for a Returns object.
tracking_number - String! 	The shipping tracking number for this return request.
Example

{
  "carrier_uid": 4,
  "return_uid": 4,
  "tracking_number": "abc123"
}

back to top
Types
AddReturnTrackingOutput
Description

Contains the response after adding tracking information.
Fields
Field Name 	Description
return - Return 	Details about the modified return.
return_shipping_tracking - ReturnShippingTracking 	Details about shipping for a return.
Example

{
  "return": Return,
  "return_shipping_tracking": ReturnShippingTracking
}

back to top
Types
AddSimpleProductsToCartInput
Description

Defines the simple and group products to add to the cart.
Fields
Input Field 	Description
cart_id - String! 	The unique ID of a Cart object.
cart_items - [SimpleProductCartItemInput]! 	An array of simple and group items to add.
Example

{
  "cart_id": "abc123",
  "cart_items": [SimpleProductCartItemInput]
}

back to top
Types
AddSimpleProductsToCartOutput
Description

Contains details about the cart after adding simple or group products.
Fields
Field Name 	Description
cart - Cart! 	The cart after adding products.
Example

{"cart": Cart}

back to top
Types
AddVirtualProductsToCartInput
Description

Defines the virtual products to add to the cart.
Fields
Input Field 	Description
cart_id - String! 	The unique ID of a Cart object.
cart_items - [VirtualProductCartItemInput]! 	An array of virtual products to add.
Example

{
  "cart_id": "xyz789",
  "cart_items": [VirtualProductCartItemInput]
}

back to top
Types
AddVirtualProductsToCartOutput
Description

Contains details about the cart after adding virtual products.
Fields
Field Name 	Description
cart - Cart! 	The cart after adding products.
Example

{"cart": Cart}

back to top
Types
AddWishlistItemsToCartOutput
Description

Contains the resultant wish list and any error information.
Fields
Field Name 	Description
add_wishlist_items_to_cart_user_errors - [WishlistCartUserInputError]! 	An array of errors encountered while adding products to the customer's cart.
status - Boolean! 	Indicates whether the attempt to add items to the customer's cart was successful.
wishlist - Wishlist! 	Contains the wish list with all items that were successfully added.
Example

{
  "add_wishlist_items_to_cart_user_errors": [
    WishlistCartUserInputError
  ],
  "status": false,
  "wishlist": Wishlist
}

back to top
Types
Aggregation
Description

Contains information for each filterable option (such as price, category UID, and custom attributes).
Fields
Field Name 	Description
attribute_code - String! 	Attribute code of the aggregation group.
count - Int 	The number of options in the aggregation group.
label - String 	The aggregation display name.
options - [AggregationOption] 	Array of options for the aggregation.
position - Int 	The relative position of the attribute in a layered navigation block.
Example

{
  "attribute_code": "xyz789",
  "count": 123,
  "label": "abc123",
  "options": [AggregationOption],
  "position": 987
}

back to top
Types
AggregationOption
Description

An implementation of AggregationOptionInterface.
Fields
Field Name 	Description
count - Int 	The number of items that match the aggregation option.
label - String 	The display label for an aggregation option.
value - String! 	The internal ID that represents the value of the option.
Example

{
  "count": 123,
  "label": "abc123",
  "value": "abc123"
}

back to top
Types
AggregationOptionInterface
Description

Defines aggregation option fields.
Fields
Field Name 	Description
count - Int 	The number of items that match the aggregation option.
label - String 	The display label for an aggregation option.
value - String! 	The internal ID that represents the value of the option.
Possible Types
AggregationOptionInterface Types

AggregationOption
Example

{
  "count": 987,
  "label": "abc123",
  "value": "xyz789"
}

back to top
Types
AggregationsCategoryFilterInput
Description

Filter category aggregations in layered navigation.
Fields
Input Field 	Description
includeDirectChildrenOnly - Boolean 	Indicates whether to include only direct subcategories or all children categories at all levels.
Example

{"includeDirectChildrenOnly": false}

back to top
Types
AggregationsFilterInput
Description

An input object that specifies the filters used in product aggregations.
Fields
Input Field 	Description
category - AggregationsCategoryFilterInput 	Filter category aggregations in layered navigation.
Example

{"category": AggregationsCategoryFilterInput}

back to top
Types
ApplePayConfig
Fields
Field Name 	Description
button_styles - ButtonStyles 	The styles for the ApplePay Smart Button configuration
code - String 	The payment method code as defined in the payment gateway
is_visible - Boolean 	Indicates whether the payment method is displayed
payment_intent - String 	Defines the payment intent (Authorize or Capture
payment_source - String 	The payment source for the payment method
sdk_params - [SDKParams] 	The PayPal parameters required to load the JS SDK
sort_order - String 	The relative order the payment method is displayed on the checkout page
title - String 	The name displayed for the payment method
Example

{
  "button_styles": ButtonStyles,
  "code": "abc123",
  "is_visible": true,
  "payment_intent": "abc123",
  "payment_source": "abc123",
  "sdk_params": [SDKParams],
  "sort_order": "abc123",
  "title": "abc123"
}

back to top
Types
ApplePayMethodInput
Description

Apple Pay inputs
Fields
Input Field 	Description
payment_source - String 	The payment source for the payment method
payments_order_id - String 	The payment services order ID
paypal_order_id - String 	PayPal order ID
Example

{
  "payment_source": "xyz789",
  "payments_order_id": "abc123",
  "paypal_order_id": "xyz789"
}

back to top
Types
AppliedCoupon
Description

Contains the applied coupon code.
Fields
Field Name 	Description
code - String! 	The coupon code the shopper applied to the card.
Example

{"code": "abc123"}

back to top
Types
AppliedGiftCard
Description

Contains an applied gift card with applied and remaining balance.
Fields
Field Name 	Description
applied_balance - Money 	The amount applied to the current cart.
code - String 	The gift card account code.
current_balance - Money 	The remaining balance on the gift card.
expiration_date - String 	The expiration date of the gift card.
Example

{
  "applied_balance": Money,
  "code": "abc123",
  "current_balance": Money,
  "expiration_date": "xyz789"
}

back to top
Types
AppliedStoreCredit
Description

Contains the applied and current balances.
Fields
Field Name 	Description
applied_balance - Money 	The applied store credit balance to the current cart.
current_balance - Money 	The current balance remaining on store credit.
enabled - Boolean 	Indicates whether store credits are enabled. If the feature is disabled, then the current balance will not be returned.
Example

{
  "applied_balance": Money,
  "current_balance": Money,
  "enabled": true
}

back to top
Types
ApplyCouponToCartInput
Description

Specifies the coupon code to apply to the cart.
Fields
Input Field 	Description
cart_id - String! 	The unique ID of a Cart object.
coupon_code - String! 	A valid coupon code.
Example

{
  "cart_id": "xyz789",
  "coupon_code": "xyz789"
}

back to top
Types
ApplyCouponToCartOutput
Description

Contains details about the cart after applying a coupon.
Fields
Field Name 	Description
cart - Cart! 	The cart after applying a coupon.
Example

{"cart": Cart}

back to top
Types
ApplyCouponsStrategy
Description

The strategy to apply coupons to the cart.
Values
Enum Value 	Description

APPEND
	Append new coupons keeping the coupons that have been applied before.

REPLACE
	Remove all the coupons from the cart and apply only new provided coupons.
Example

"APPEND"

back to top
Types
ApplyCouponsToCartInput
Description

Apply coupons to the cart.
Fields
Input Field 	Description
cart_id - String! 	The unique ID of a Cart object.
coupon_codes - [String]! 	An array of valid coupon codes.
type - ApplyCouponsStrategy 	replace to replace the existing coupon(s) or append to add the coupon to the coupon(s) list.
Example

{
  "cart_id": "xyz789",
  "coupon_codes": ["abc123"],
  "type": "APPEND"
}

back to top
Types
ApplyGiftCardToCartInput
Description

Defines the input required to run the applyGiftCardToCart mutation.
Fields
Input Field 	Description
cart_id - String! 	The unique ID that identifies the customer's cart.
gift_card_code - String! 	The gift card code to be applied to the cart.
Example

{
  "cart_id": "xyz789",
  "gift_card_code": "xyz789"
}

back to top
Types
ApplyGiftCardToCartOutput
Description

Defines the possible output for the applyGiftCardToCart mutation.
Fields
Field Name 	Description
cart - Cart! 	Describes the contents of the specified shopping cart.
Example

{"cart": Cart}

back to top
Types
ApplyGiftCardToOrder
Description

Contains applied gift cards with gift card code and amount.
Fields
Field Name 	Description
applied_balance - Money! 	The gift card amount applied to the current order.
code - String! 	The gift card account code.
Example

{
  "applied_balance": Money,
  "code": "xyz789"
}

back to top
Types
ApplyRewardPointsToCartOutput
Description

Contains the customer cart.
Fields
Field Name 	Description
cart - Cart! 	The customer cart after reward points are applied.
Example

{"cart": Cart}

back to top
Types
ApplyStoreCreditToCartInput
Description

Defines the input required to run the applyStoreCreditToCart mutation.
Fields
Input Field 	Description
cart_id - String! 	The unique ID that identifies the customer's cart.
Example

{"cart_id": "abc123"}

back to top
Types
ApplyStoreCreditToCartOutput
Description

Defines the possible output for the applyStoreCreditToCart mutation.
Fields
Field Name 	Description
cart - Cart! 	The contents of the specified shopping cart.
Example

{"cart": Cart}

back to top
Types
AreaInput
Description

AreaInput defines the parameters which will be used for filter by specified location.
Fields
Input Field 	Description
radius - Int! 	The radius for the search in KM.
search_term - String! 	The country code where search must be performed. Required parameter together with region, city or postcode.
Example

{"radius": 123, "search_term": "abc123"}

back to top
Types
AssignCompareListToCustomerOutput
Description

Contains the results of the request to assign a compare list.
Fields
Field Name 	Description
compare_list - CompareList 	The contents of the customer's compare list.
result - Boolean! 	Indicates whether the compare list was successfully assigned to the customer.
Example

{"compare_list": CompareList, "result": true}

back to top
Types
Attribute
Description

Contains details about the attribute, including the code and type.
Fields
Field Name 	Description
attribute_code - String 	The unique identifier for an attribute code. This value should be in lowercase letters without spaces.
attribute_options - [AttributeOption] 	Attribute options list.
attribute_type - String 	The data type of the attribute.
entity_type - String 	The type of entity that defines the attribute.
input_type - String 	The frontend input type of the attribute.
storefront_properties - StorefrontProperties 	Details about the storefront properties configured for the attribute.
Example

{
  "attribute_code": "xyz789",
  "attribute_options": [AttributeOption],
  "attribute_type": "abc123",
  "entity_type": "abc123",
  "input_type": "abc123",
  "storefront_properties": StorefrontProperties
}

back to top
Types
AttributeEntityTypeEnum
Description

List of all entity types. Populated by the modules introducing EAV entities.
Values
Enum Value 	Description

CATALOG_PRODUCT


CATALOG_CATEGORY


CUSTOMER


CUSTOMER_ADDRESS


RMA_ITEM

Example

"CATALOG_PRODUCT"

back to top
Types
AttributeFilterInput
Description

An input object that specifies the filters used for attributes.
Fields
Input Field 	Description
is_comparable - Boolean 	Whether a product or category attribute can be compared against another or not.
is_filterable - Boolean 	Whether a product or category attribute can be filtered or not.
is_filterable_in_search - Boolean 	Whether a product or category attribute can be filtered in search or not.
is_html_allowed_on_front - Boolean 	Whether a product or category attribute can use HTML on front or not.
is_searchable - Boolean 	Whether a product or category attribute can be searched or not.
is_used_for_customer_segment - Boolean 	Whether a customer or customer address attribute is used for customer segment or not.
is_used_for_price_rules - Boolean 	Whether a product or category attribute can be used for price rules or not.
is_used_for_promo_rules - Boolean 	Whether a product or category attribute is used for promo rules or not.
is_visible_in_advanced_search - Boolean 	Whether a product or category attribute is visible in advanced search or not.
is_visible_on_front - Boolean 	Whether a product or category attribute is visible on front or not.
is_wysiwyg_enabled - Boolean 	Whether a product or category attribute has WYSIWYG enabled or not.
used_in_product_listing - Boolean 	Whether a product or category attribute is used in product listing or not.
Example

{
  "is_comparable": true,
  "is_filterable": false,
  "is_filterable_in_search": true,
  "is_html_allowed_on_front": true,
  "is_searchable": true,
  "is_used_for_customer_segment": true,
  "is_used_for_price_rules": false,
  "is_used_for_promo_rules": true,
  "is_visible_in_advanced_search": true,
  "is_visible_on_front": true,
  "is_wysiwyg_enabled": false,
  "used_in_product_listing": false
}

back to top
Types
AttributeFrontendInputEnum
Description

EAV attribute frontend input types.
Values
Enum Value 	Description

BOOLEAN


DATE


DATETIME


FILE


GALLERY


HIDDEN


IMAGE


MEDIA_IMAGE


MULTILINE


MULTISELECT


PRICE


SELECT


TEXT


TEXTAREA


WEIGHT


UNDEFINED

Example

"BOOLEAN"

back to top
Types
AttributeInput
Description

Defines the attribute characteristics to search for the attribute_code and entity_type to search.
Fields
Input Field 	Description
attribute_code - String 	The unique identifier for an attribute code. This value should be in lowercase letters without spaces.
entity_type - String 	The type of entity that defines the attribute.
Example

{
  "attribute_code": "xyz789",
  "entity_type": "abc123"
}

back to top
Types
AttributeInputSelectedOption
Description

Specifies selected option for a select or multiselect attribute value.
Fields
Input Field 	Description
value - String! 	The attribute option value.
Example

{"value": "xyz789"}

back to top
Types
AttributeMetadata
Description

Base EAV implementation of CustomAttributeMetadataInterface.
Fields
Field Name 	Description
code - ID! 	The unique identifier for an attribute code. This value should be in lowercase letters without spaces.
default_value - String 	Default attribute value.
entity_type - AttributeEntityTypeEnum! 	The type of entity that defines the attribute.
frontend_class - String 	The frontend class of the attribute.
frontend_input - AttributeFrontendInputEnum 	The frontend input type of the attribute.
is_required - Boolean! 	Whether the attribute value is required.
is_unique - Boolean! 	Whether the attribute value must be unique.
label - String 	The label assigned to the attribute.
options - [CustomAttributeOptionInterface]! 	Attribute options.
Example

{
  "code": 4,
  "default_value": "xyz789",
  "entity_type": "CATALOG_PRODUCT",
  "frontend_class": "xyz789",
  "frontend_input": "BOOLEAN",
  "is_required": false,
  "is_unique": true,
  "label": "xyz789",
  "options": [CustomAttributeOptionInterface]
}

back to top
Types
AttributeMetadataError
Description

Attribute metadata retrieval error.
Fields
Field Name 	Description
message - String! 	Attribute metadata retrieval error message.
type - AttributeMetadataErrorType! 	Attribute metadata retrieval error type.
Example

{
  "message": "abc123",
  "type": "ENTITY_NOT_FOUND"
}

back to top
Types
AttributeMetadataErrorType
Description

Attribute metadata retrieval error types.
Values
Enum Value 	Description

ENTITY_NOT_FOUND
	The requested entity was not found.

ATTRIBUTE_NOT_FOUND
	The requested attribute was not found.

FILTER_NOT_FOUND
	The filter cannot be applied as it does not belong to the entity

UNDEFINED
	Not categorized error, see the error message.
Example

"ENTITY_NOT_FOUND"

back to top
Types
AttributeOption
Description

Defines an attribute option.
Fields
Field Name 	Description
label - String 	The label assigned to the attribute option.
value - String 	The attribute option value.
Example

{
  "label": "xyz789",
  "value": "xyz789"
}

back to top
Types
AttributeOptionMetadata
Description

Base EAV implementation of CustomAttributeOptionInterface.
Fields
Field Name 	Description
is_default - Boolean! 	Is the option value default.
label - String! 	The label assigned to the attribute option.
value - String! 	The attribute option value.
Example

{
  "is_default": false,
  "label": "abc123",
  "value": "xyz789"
}

back to top
Types
AttributeSelectedOption
Fields
Field Name 	Description
label - String! 	The attribute selected option label.
value - String! 	The attribute selected option value.
Example

{
  "label": "abc123",
  "value": "abc123"
}

back to top
Types
AttributeSelectedOptionInterface
Fields
Field Name 	Description
label - String! 	The attribute selected option label.
value - String! 	The attribute selected option value.
Possible Types
AttributeSelectedOptionInterface Types

AttributeSelectedOption
Example

{
  "label": "xyz789",
  "value": "abc123"
}

back to top
Types
AttributeSelectedOptions
Fields
Field Name 	Description
code - ID! 	The attribute code.
selected_options - [AttributeSelectedOptionInterface]!
Example

{
  "code": 4,
  "selected_options": [AttributeSelectedOptionInterface]
}

back to top
Types
AttributeValue
Fields
Field Name 	Description
code - ID! 	The attribute code.
value - String! 	The attribute value.
Example

{
  "code": "4",
  "value": "abc123"
}

back to top
Types
AttributeValueInput
Description

Specifies the value for attribute.
Fields
Input Field 	Description
attribute_code - String! 	The code of the attribute.
selected_options - [AttributeInputSelectedOption] 	An array containing selected options for a select or multiselect attribute.
value - String 	The value assigned to the attribute.
Example

{
  "attribute_code": "xyz789",
  "selected_options": [AttributeInputSelectedOption],
  "value": "abc123"
}

back to top
Types
AttributeValueInterface
Fields
Field Name 	Description
code - ID! 	The attribute code.
Possible Types
AttributeValueInterface Types

AttributeValue

AttributeSelectedOptions
Example

{"code": "4"}

back to top
Types
AttributesFormOutput
Description

Metadata of EAV attributes associated to form
Fields
Field Name 	Description
errors - [AttributeMetadataError]! 	Errors of retrieving certain attributes metadata.
items - [CustomAttributeMetadataInterface]! 	Requested attributes metadata.
Example

{
  "errors": [AttributeMetadataError],
  "items": [CustomAttributeMetadataInterface]
}

back to top
Types
AttributesMetadataOutput
Description

Metadata of EAV attributes.
Fields
Field Name 	Description
errors - [AttributeMetadataError]! 	Errors of retrieving certain attributes metadata.
items - [CustomAttributeMetadataInterface]! 	Requested attributes metadata.
Example

{
  "errors": [AttributeMetadataError],
  "items": [CustomAttributeMetadataInterface]
}

back to top
Types
AvailableCurrency
Description

Defines the code and symbol of a currency that can be used for purchase orders.
Fields
Field Name 	Description
code - CurrencyEnum! 	3-letter currency code, for example USD.
symbol - String! 	Currency symbol, for example $.
Example

{"code": "AFN", "symbol": "xyz789"}

back to top
Types
AvailablePaymentMethod
Description

Describes a payment method that the shopper can use to pay for the order.
Fields
Field Name 	Description
code - String! 	The payment method code.
is_deferred - Boolean! 	If the payment method is an online integration
title - String! 	The payment method title.
Example

{
  "code": "abc123",
  "is_deferred": true,
  "title": "abc123"
}

back to top
Types
AvailableShippingMethod
Description

Contains details about the possible shipping methods and carriers.
Fields
Field Name 	Description
amount - Money! 	The cost of shipping using this shipping method.
available - Boolean! 	Indicates whether this shipping method can be applied to the cart.
base_amount - Money 	Deprecated The field should not be used on the storefront.
carrier_code - String! 	A string that identifies a commercial carrier or an offline shipping method.
carrier_title - String! 	The label for the carrier code.
error_message - String 	Describes an error condition.
method_code - String 	A shipping method code associated with a carrier. The value could be null if no method is available.
method_title - String 	The label for the shipping method code. The value could be null if no method is available.
price_excl_tax - Money! 	The cost of shipping using this shipping method, excluding tax.
price_incl_tax - Money! 	The cost of shipping using this shipping method, including tax.
Example

{
  "amount": Money,
  "available": false,
  "base_amount": Money,
  "carrier_code": "abc123",
  "carrier_title": "abc123",
  "error_message": "xyz789",
  "method_code": "abc123",
  "method_title": "xyz789",
  "price_excl_tax": Money,
  "price_incl_tax": Money
}

back to top
Types
BatchMutationStatus
Values
Enum Value 	Description

SUCCESS


FAILURE


MIXED_RESULTS

Example

"SUCCESS"

back to top
Types
BillingAddressInput
Description

Defines the billing address.
Fields
Input Field 	Description
address - CartAddressInput 	Defines a billing address.
customer_address_id - Int 	An ID from the customer's address book that uniquely identifies the address to be used for billing.
same_as_shipping - Boolean 	Indicates whether to set the billing address to be the same as the existing shipping address on the cart.
use_for_shipping - Boolean 	Indicates whether to set the shipping address to be the same as this billing address.
Example

{
  "address": CartAddressInput,
  "customer_address_id": 987,
  "same_as_shipping": true,
  "use_for_shipping": false
}

back to top
Types
BillingAddressPaymentSourceInput
Description

The billing address information
Fields
Input Field 	Description
address_line_1 - String 	The first line of the address
address_line_2 - String 	The second line of the address
city - String 	The city of the address
country_code - String! 	The country of the address
postal_code - String 	The postal code of the address
region - String 	The region of the address
Example

{
  "address_line_1": "abc123",
  "address_line_2": "abc123",
  "city": "xyz789",
  "country_code": "xyz789",
  "postal_code": "abc123",
  "region": "xyz789"
}

back to top
Types
BillingCartAddress
Description

Contains details about the billing address.
Fields
Field Name 	Description
city - String! 	The city specified for the billing or shipping address.
company - String 	The company specified for the billing or shipping address.
country - CartAddressCountry! 	An object containing the country label and code.
custom_attributes - [AttributeValueInterface]! 	The custom attribute values of the billing or shipping address.
customer_notes - String 	Deprecated The field is used only in shipping address.
fax - String 	The customer's fax number.
firstname - String! 	The first name of the customer or guest.
id - Int 	Id of the customer address.
lastname - String! 	The last name of the customer or guest.
middlename - String 	The middle name of the person associated with the billing/shipping address.
postcode - String 	The ZIP or postal code of the billing or shipping address.
prefix - String 	An honorific, such as Dr., Mr., or Mrs.
region - CartAddressRegion 	An object containing the region label and code.
street - [String]! 	An array containing the street for the billing or shipping address.
suffix - String 	A value such as Sr., Jr., or III.
telephone - String 	The telephone number for the billing or shipping address.
uid - String! 	The unique id of the customer address.
vat_id - String 	The VAT company number for billing or shipping address.
Example

{
  "city": "abc123",
  "company": "xyz789",
  "country": CartAddressCountry,
  "custom_attributes": [AttributeValueInterface],
  "customer_notes": "abc123",
  "fax": "xyz789",
  "firstname": "xyz789",
  "id": 987,
  "lastname": "abc123",
  "middlename": "abc123",
  "postcode": "abc123",
  "prefix": "xyz789",
  "region": CartAddressRegion,
  "street": ["xyz789"],
  "suffix": "xyz789",
  "telephone": "xyz789",
  "uid": "xyz789",
  "vat_id": "abc123"
}

back to top
Types
Boolean
Description

The Boolean scalar type represents true or false.
Example

true

back to top
Types
BraintreeCcVaultInput
Fields
Input Field 	Description
device_data - String
public_hash - String!
Example

{
  "device_data": "xyz789",
  "public_hash": "abc123"
}

back to top
Types
BraintreeInput
Fields
Input Field 	Description
device_data - String 	Contains a fingerprint provided by Braintree JS SDK and should be sent with sale transaction details to the Braintree payment gateway.
is_active_payment_token_enabler - Boolean! 	States whether the payment details (Credit/Debit Card, PayPal Account) entered by a customer should be tokenized for later usage. Required only if Vault is enabled for the relevant Braintree payment integration.
payment_method_nonce - String! 	The one-time payment token generated by Braintree payment gateway based on payment details (Card, PayPal). Required field to make sale transaction.
Example

{
  "device_data": "xyz789",
  "is_active_payment_token_enabler": true,
  "payment_method_nonce": "abc123"
}

back to top
Types
BraintreeVaultInput
Fields
Input Field 	Description
device_data - String
public_hash - String!
Example

{
  "device_data": "xyz789",
  "public_hash": "xyz789"
}

back to top
Types
Breadcrumb
Description

Contains details about an individual category that comprises a breadcrumb.
Fields
Field Name 	Description
category_id - Int 	Deprecated The ID of the category. Use category_uid instead.
category_level - Int 	The category level.
category_name - String 	The display name of the category.
category_uid - ID! 	The unique ID for a Breadcrumb object.
category_url_key - String 	The URL key of the category.
category_url_path - String 	The URL path of the category.
Example

{
  "category_id": 987,
  "category_level": 987,
  "category_name": "abc123",
  "category_uid": "4",
  "category_url_key": "xyz789",
  "category_url_path": "abc123"
}

back to top
Types
BundleCartItem
Description

An implementation for bundle product cart items.
Fields
Field Name 	Description
available_gift_wrapping - [GiftWrapping]! 	The list of available gift wrapping options for the cart item.
bundle_options - [SelectedBundleOption]! 	An array containing the bundle options the shopper selected.
customizable_options - [SelectedCustomizableOption]! 	An array containing the customizable options the shopper selected.
discount - [Discount] 	Contains discount for quote line item.
errors - [CartItemError] 	An array of errors encountered while loading the cart item
gift_message - GiftMessage 	The entered gift message for the cart item
gift_wrapping - GiftWrapping 	The selected gift wrapping for the cart item.
id - String! 	Deprecated Use uid instead.
is_available - Boolean! 	True if requested quantity is less than available stock, false otherwise.
max_qty - Float 	Line item max qty in quote template
min_qty - Float 	Line item min qty in quote template
not_available_message - String 	Message to display when the product is not available with this selected option.
note_from_buyer - [ItemNote] 	The buyer's quote line item note.
note_from_seller - [ItemNote] 	The seller's quote line item note.
prices - CartItemPrices 	Contains details about the price of the item, including taxes and discounts.
product - ProductInterface! 	Details about an item in the cart.
quantity - Float! 	The quantity of this item in the cart.
uid - ID! 	The unique ID for a CartItemInterface object.
Example

{
  "available_gift_wrapping": [GiftWrapping],
  "bundle_options": [SelectedBundleOption],
  "customizable_options": [SelectedCustomizableOption],
  "discount": [Discount],
  "errors": [CartItemError],
  "gift_message": GiftMessage,
  "gift_wrapping": GiftWrapping,
  "id": "xyz789",
  "is_available": false,
  "max_qty": 987.65,
  "min_qty": 987.65,
  "not_available_message": "xyz789",
  "note_from_buyer": [ItemNote],
  "note_from_seller": [ItemNote],
  "prices": CartItemPrices,
  "product": ProductInterface,
  "quantity": 123.45,
  "uid": 4
}

back to top
Types
BundleCreditMemoItem
Description

Defines bundle product options for CreditMemoItemInterface.
Fields
Field Name 	Description
bundle_options - [ItemSelectedBundleOption] 	A list of bundle options that are assigned to a bundle product that is part of a credit memo.
discounts - [Discount] 	Details about the final discount amount for the base product, including discounts on options.
id - ID! 	The unique ID for a CreditMemoItemInterface object.
order_item - OrderItemInterface 	The order item the credit memo is applied to.
product_name - String 	The name of the base product.
product_sale_price - Money! 	The sale price for the base product, including selected options.
product_sku - String! 	The SKU of the base product.
quantity_refunded - Float 	The number of refunded items.
Example

{
  "bundle_options": [ItemSelectedBundleOption],
  "discounts": [Discount],
  "id": 4,
  "order_item": OrderItemInterface,
  "product_name": "abc123",
  "product_sale_price": Money,
  "product_sku": "abc123",
  "quantity_refunded": 987.65
}

back to top
Types
BundleInvoiceItem
Description

Defines bundle product options for InvoiceItemInterface.
Fields
Field Name 	Description
bundle_options - [ItemSelectedBundleOption] 	A list of bundle options that are assigned to an invoiced bundle product.
discounts - [Discount] 	Information about the final discount amount for the base product, including discounts on options.
id - ID! 	The unique ID for an InvoiceItemInterface object.
order_item - OrderItemInterface 	Details about an individual order item.
product_name - String 	The name of the base product.
product_sale_price - Money! 	The sale price for the base product including selected options.
product_sku - String! 	The SKU of the base product.
quantity_invoiced - Float 	The number of invoiced items.
Example

{
  "bundle_options": [ItemSelectedBundleOption],
  "discounts": [Discount],
  "id": "4",
  "order_item": OrderItemInterface,
  "product_name": "abc123",
  "product_sale_price": Money,
  "product_sku": "abc123",
  "quantity_invoiced": 987.65
}

back to top
Types
BundleItem
Description

Defines an individual item within a bundle product.
Fields
Field Name 	Description
option_id - Int 	Deprecated An ID assigned to each type of item in a bundle product. Use uid instead
options - [BundleItemOption] 	An array of additional options for this bundle item.
position - Int 	A number indicating the sequence order of this item compared to the other bundle items.
price_range - PriceRange! 	The range of prices for the product
required - Boolean 	Indicates whether the item must be included in the bundle.
sku - String 	The SKU of the bundle product.
title - String 	The display name of the item.
type - String 	The input type that the customer uses to select the item. Examples include radio button and checkbox.
uid - ID 	The unique ID for a BundleItem object.
Example

{
  "option_id": 987,
  "options": [BundleItemOption],
  "position": 123,
  "price_range": PriceRange,
  "required": false,
  "sku": "xyz789",
  "title": "abc123",
  "type": "abc123",
  "uid": 4
}

back to top
Types
BundleItemOption
Description

Defines the characteristics that comprise a specific bundle item and its options.
Fields
Field Name 	Description
can_change_quantity - Boolean 	Indicates whether the customer can change the number of items for this option.
id - Int 	Deprecated The ID assigned to the bundled item option. Use uid instead
is_default - Boolean 	Indicates whether this option is the default option.
label - String 	The text that identifies the bundled item option.
position - Int 	When a bundle item contains multiple options, the relative position of this option compared to the other options.
price - Float 	The price of the selected option.
price_type - PriceTypeEnum 	One of FIXED, PERCENT, or DYNAMIC.
product - ProductInterface 	Contains details about this product option.
qty - Float 	Deprecated Indicates the quantity of this specific bundle item. Use quantity instead.
quantity - Float 	The quantity of this specific bundle item.
uid - ID! 	The unique ID for a BundleItemOption object.
Example

{
  "can_change_quantity": true,
  "id": 123,
  "is_default": false,
  "label": "xyz789",
  "position": 987,
  "price": 123.45,
  "price_type": "FIXED",
  "product": ProductInterface,
  "qty": 987.65,
  "quantity": 987.65,
  "uid": 4
}

back to top
Types
BundleOptionInput
Description

Defines the input for a bundle option.
Fields
Input Field 	Description
id - Int! 	The ID of the option.
quantity - Float! 	The number of the selected item to add to the cart.
value - [String]! 	An array with the chosen value of the option.
Example

{
  "id": 987,
  "quantity": 987.65,
  "value": ["abc123"]
}

back to top
Types
BundleOrderItem
Description

Defines bundle product options for OrderItemInterface.
Fields
Field Name 	Description
bundle_options - [ItemSelectedBundleOption] 	A list of bundle options that are assigned to the bundle product.
discounts - [Discount] 	The final discount information for the product.
eligible_for_return - Boolean 	Indicates whether the order item is eligible to be in a return request.
entered_options - [OrderItemOption] 	The entered option for the base product, such as a logo or image.
gift_message - GiftMessage 	The selected gift message for the order item
gift_wrapping - GiftWrapping 	The selected gift wrapping for the order item.
id - ID! 	The unique ID for an OrderItemInterface object.
parent_sku - String 	The SKU of parent product.
prices - OrderItemPrices 	Contains details about the price of the item, including taxes and discounts.
product - ProductInterface 	The ProductInterface object, which contains details about the base product
product_name - String 	The name of the base product.
product_sale_price - Money! 	The sale price of the base product, including selected options.
product_sku - String! 	The SKU of the base product.
product_type - String 	The type of product, such as simple, configurable, etc.
product_url_key - String 	URL key of the base product.
quantity_canceled - Float 	The number of canceled items.
quantity_invoiced - Float 	The number of invoiced items.
quantity_ordered - Float 	The number of units ordered for this item.
quantity_refunded - Float 	The number of refunded items.
quantity_return_requested - Float 	The requested return quantity of the item.
quantity_returned - Float 	The number of returned items.
quantity_shipped - Float 	The number of shipped items.
selected_options - [OrderItemOption] 	The selected options for the base product, such as color or size.
status - String 	The status of the order item.
Example

{
  "bundle_options": [ItemSelectedBundleOption],
  "discounts": [Discount],
  "eligible_for_return": false,
  "entered_options": [OrderItemOption],
  "gift_message": GiftMessage,
  "gift_wrapping": GiftWrapping,
  "id": "4",
  "parent_sku": "abc123",
  "prices": OrderItemPrices,
  "product": ProductInterface,
  "product_name": "xyz789",
  "product_sale_price": Money,
  "product_sku": "abc123",
  "product_type": "abc123",
  "product_url_key": "abc123",
  "quantity_canceled": 987.65,
  "quantity_invoiced": 123.45,
  "quantity_ordered": 123.45,
  "quantity_refunded": 987.65,
  "quantity_return_requested": 987.65,
  "quantity_returned": 987.65,
  "quantity_shipped": 123.45,
  "selected_options": [OrderItemOption],
  "status": "abc123"
}

back to top
Types
BundleProduct
Description

Defines basic features of a bundle product and contains multiple BundleItems.
Fields
Field Name 	Description
activity - String 	Use the custom_attributes field instead. Deprecated
attribute_set_id - Int 	The attribute set assigned to the product. The field should not be used on the storefront. Deprecated
canonical_url - String 	The relative canonical URL. This value is returned only if the system setting 'Use Canonical Link Meta Tag For Products' is enabled.
categories - [CategoryInterface] 	The categories assigned to a product.
category_gear - String 	Use the custom_attributes field instead. Deprecated
climate - String 	Use the custom_attributes field instead. Deprecated
collar - String 	Use the custom_attributes field instead. Deprecated
color - Int 	Use the custom_attributes field instead. Deprecated
country_of_manufacture - String 	The product's country of origin.
created_at - String 	Timestamp indicating when the product was created. The field should not be used on the storefront. Deprecated
crosssell_products - [ProductInterface] 	An array of cross-sell products.
custom_attributesV2 - ProductCustomAttributes 	Product custom attributes.
Arguments filters - AttributeFilterInput
description - ComplexTextValue 	Detailed information about the product. The value can include simple HTML tags.
dynamic_price - Boolean 	Indicates whether the bundle product has a dynamic price.
dynamic_sku - Boolean 	Indicates whether the bundle product has a dynamic SKU.
dynamic_weight - Boolean 	Indicates whether the bundle product has a dynamically calculated weight.
eco_collection - Int 	Use the custom_attributes field instead. Deprecated
erin_recommends - Int 	Use the custom_attributes field instead. Deprecated
features_bags - String 	Use the custom_attributes field instead. Deprecated
format - Int 	Use the custom_attributes field instead. Deprecated
gender - String 	Use the custom_attributes field instead. Deprecated
gift_message_available - Boolean! 	Returns a value indicating gift message availability for the product.
gift_wrapping_available - Boolean! 	Returns a value indicating gift wrapping availability for the product.
gift_wrapping_price - Money 	Returns value and currency indicating gift wrapping price for the product.
id - Int 	The ID number assigned to the product. Use the uid field instead. Deprecated
image - ProductImage 	The relative path to the main image on the product page.
is_returnable - String 	Indicates whether the product can be returned.
items - [BundleItem] 	An array containing information about individual bundle items.
manufacturer - Int 	A number representing the product's manufacturer. Use the custom_attributes field instead. Deprecated
material - String 	Use the custom_attributes field instead. Deprecated
max_sale_qty - Float 	Maximum Qty Allowed in Shopping Cart
media_gallery - [MediaGalleryInterface] 	An array of media gallery objects.
media_gallery_entries - [MediaGalleryEntry] 	An array of MediaGalleryEntry objects. Use media_gallery instead. Deprecated
meta_description - String 	A brief overview of the product for search results listings, maximum 255 characters.
meta_keyword - String 	A comma-separated list of keywords that are visible only to search engines.
meta_title - String 	A string that is displayed in the title bar and tab of the browser and in search results lists.
min_sale_qty - Float 	Minimum Qty Allowed in Shopping Cart
name - String 	The product name. Customers use this name to identify the product.
new - Int 	Use the custom_attributes field instead. Deprecated
new_from_date - String 	The beginning date for new product listings, and determines if the product is featured as a new product.
new_to_date - String 	The end date for new product listings.
only_x_left_in_stock - Float 	Product stock only x left count
options - [CustomizableOptionInterface] 	An array of options for a customizable product.
options_container - String 	If the product has multiple options, determines where they appear on the product page.
pattern - String 	Use the custom_attributes field instead. Deprecated
performance_fabric - Int 	Use the custom_attributes field instead. Deprecated
price - ProductPrices 	Indicates the price of an item. Use price_range for product price information. Deprecated
price_details - PriceDetails 	The price details of the main product
price_range - PriceRange! 	The range of prices for the product
price_tiers - [TierPrice] 	An array of TierPrice objects.
price_view - PriceViewEnum 	One of PRICE_RANGE or AS_LOW_AS.
product_links - [ProductLinksInterface] 	An array of ProductLinks objects.
purpose - Int 	Use the custom_attributes field instead. Deprecated
quantity - Float 	Amount of available stock
rating_summary - Float! 	The average of all the ratings given to the product.
redirect_code - Int! 	Contains 0 when there is no redirect error. A value of 301 indicates the URL of the requested resource has been changed permanently, while a value of 302 indicates a temporary redirect.
related_products - [ProductInterface] 	An array of related products.
relative_url - String 	The internal relative URL. If the specified URL is a redirect, the query returns the redirected URL, not the original.
review_count - Int! 	The total count of all the reviews given to the product.
reviews - ProductReviews! 	The list of products reviews.
rules - [CatalogRule] 	Provides applied catalog rules in the current active cart
sale - Int 	Use the custom_attributes field instead. Deprecated
ship_bundle_items - ShipBundleItemsEnum 	Indicates whether to ship bundle items together or individually.
short_description - ComplexTextValue 	A short description of the product. Its use depends on the theme.
size - Int 	Use the custom_attributes field instead. Deprecated
sku - String 	A number or code assigned to a product to identify the product, options, price, and manufacturer.
sleeve - String 	Use the custom_attributes field instead. Deprecated
small_image - ProductImage 	The relative path to the small image, which is used on catalog pages.
special_from_date - String 	The beginning date that a product has a special price. The field should not be used on the storefront. Deprecated
special_price - Float 	The discounted price of the product.
special_to_date - String 	The end date for a product with a special price.
staged - Boolean! 	Indicates whether the product is staged for a future campaign.
stock_status - ProductStockStatus 	Stock status of the product
strap_bags - String 	Use the custom_attributes field instead. Deprecated
style_bags - String 	Use the custom_attributes field instead. Deprecated
style_bottom - String 	Use the custom_attributes field instead. Deprecated
style_general - String 	Use the custom_attributes field instead. Deprecated
swatch_image - String 	The file name of a swatch image.
thumbnail - ProductImage 	The relative path to the product's thumbnail image.
tier_price - Float 	The price when tier pricing is in effect and the items purchased threshold has been reached. Use price_tiers for product tier price information. Deprecated
tier_prices - [ProductTierPrices] 	An array of ProductTierPrices objects. Use price_tiers for product tier price information. Deprecated
type - UrlRewriteEntityTypeEnum 	One of PRODUCT, CATEGORY, or CMS_PAGE.
type_id - String 	One of simple, virtual, bundle, downloadable, grouped, or configurable. Use __typename instead. Deprecated
uid - ID! 	The unique ID for a ProductInterface object.
updated_at - String 	Timestamp indicating when the product was updated. The field should not be used on the storefront. Deprecated
upsell_products - [ProductInterface] 	An array of up-sell products.
url_key - String 	The part of the URL that identifies the product
url_path - String 	Use product's canonical_url or url rewrites instead Deprecated
url_rewrites - [UrlRewrite] 	URL rewrites list
url_suffix - String 	The part of the product URL that is appended after the url key
websites - [Website] 	An array of websites in which the product is available. The field should not be used on the storefront. Deprecated
weight - Float 	The weight of the item, in units defined by the store.
Example

{
  "activity": "abc123",
  "attribute_set_id": 123,
  "canonical_url": "xyz789",
  "categories": [CategoryInterface],
  "category_gear": "abc123",
  "climate": "abc123",
  "collar": "abc123",
  "color": 987,
  "country_of_manufacture": "abc123",
  "created_at": "xyz789",
  "crosssell_products": [ProductInterface],
  "custom_attributesV2": ProductCustomAttributes,
  "description": ComplexTextValue,
  "dynamic_price": true,
  "dynamic_sku": true,
  "dynamic_weight": true,
  "eco_collection": 987,
  "erin_recommends": 123,
  "features_bags": "xyz789",
  "format": 123,
  "gender": "xyz789",
  "gift_message_available": true,
  "gift_wrapping_available": false,
  "gift_wrapping_price": Money,
  "id": 987,
  "image": ProductImage,
  "is_returnable": "abc123",
  "items": [BundleItem],
  "manufacturer": 123,
  "material": "xyz789",
  "max_sale_qty": 987.65,
  "media_gallery": [MediaGalleryInterface],
  "media_gallery_entries": [MediaGalleryEntry],
  "meta_description": "xyz789",
  "meta_keyword": "xyz789",
  "meta_title": "abc123",
  "min_sale_qty": 123.45,
  "name": "xyz789",
  "new": 123,
  "new_from_date": "abc123",
  "new_to_date": "xyz789",
  "only_x_left_in_stock": 987.65,
  "options": [CustomizableOptionInterface],
  "options_container": "xyz789",
  "pattern": "abc123",
  "performance_fabric": 987,
  "price": ProductPrices,
  "price_details": PriceDetails,
  "price_range": PriceRange,
  "price_tiers": [TierPrice],
  "price_view": "PRICE_RANGE",
  "product_links": [ProductLinksInterface],
  "purpose": 123,
  "quantity": 987.65,
  "rating_summary": 123.45,
  "redirect_code": 123,
  "related_products": [ProductInterface],
  "relative_url": "xyz789",
  "review_count": 123,
  "reviews": ProductReviews,
  "rules": [CatalogRule],
  "sale": 987,
  "ship_bundle_items": "TOGETHER",
  "short_description": ComplexTextValue,
  "size": 123,
  "sku": "abc123",
  "sleeve": "abc123",
  "small_image": ProductImage,
  "special_from_date": "abc123",
  "special_price": 123.45,
  "special_to_date": "abc123",
  "staged": false,
  "stock_status": "IN_STOCK",
  "strap_bags": "abc123",
  "style_bags": "xyz789",
  "style_bottom": "xyz789",
  "style_general": "xyz789",
  "swatch_image": "xyz789",
  "thumbnail": ProductImage,
  "tier_price": 987.65,
  "tier_prices": [ProductTierPrices],
  "type": "CMS_PAGE",
  "type_id": "abc123",
  "uid": 4,
  "updated_at": "abc123",
  "upsell_products": [ProductInterface],
  "url_key": "xyz789",
  "url_path": "abc123",
  "url_rewrites": [UrlRewrite],
  "url_suffix": "xyz789",
  "websites": [Website],
  "weight": 987.65
}

back to top
Types
BundleProductCartItemInput
Description

Defines a single bundle product.
Fields
Input Field 	Description
bundle_options - [BundleOptionInput]! 	A mandatory array of options for the bundle product, including each chosen option and specified quantity.
customizable_options - [CustomizableOptionInput] 	The ID and value of the option.
data - CartItemInput! 	The quantity and SKU of the bundle product.
Example

{
  "bundle_options": [BundleOptionInput],
  "customizable_options": [CustomizableOptionInput],
  "data": CartItemInput
}

back to top
Types
BundleRequisitionListItem
Description

Contains details about bundle products added to a requisition list.
Fields
Field Name 	Description
bundle_options - [SelectedBundleOption]! 	An array of selected options for a bundle product.
customizable_options - [SelectedCustomizableOption]! 	Selected custom options for an item in the requisition list.
product - ProductInterface! 	Details about a requisition list item.
quantity - Float! 	The quantity of the product added to the requisition list.
uid - ID! 	The unique ID of an item in a requisition list.
Example

{
  "bundle_options": [SelectedBundleOption],
  "customizable_options": [SelectedCustomizableOption],
  "product": ProductInterface,
  "quantity": 987.65,
  "uid": "4"
}

back to top
Types
BundleShipmentItem
Description

Defines bundle product options for ShipmentItemInterface.
Fields
Field Name 	Description
bundle_options - [ItemSelectedBundleOption] 	A list of bundle options that are assigned to a shipped product.
id - ID! 	The unique ID for a ShipmentItemInterface object.
order_item - OrderItemInterface 	The order item associated with the shipment item.
product_name - String 	The name of the base product.
product_sale_price - Money! 	The sale price for the base product.
product_sku - String! 	The SKU of the base product.
quantity_shipped - Float! 	The number of shipped items.
Example

{
  "bundle_options": [ItemSelectedBundleOption],
  "id": "4",
  "order_item": OrderItemInterface,
  "product_name": "abc123",
  "product_sale_price": Money,
  "product_sku": "xyz789",
  "quantity_shipped": 987.65
}

back to top
Types
BundleWishlistItem
Description

Defines bundle product options for WishlistItemInterface.
Fields
Field Name 	Description
added_at - String! 	The date and time the item was added to the wish list.
bundle_options - [SelectedBundleOption] 	An array containing information about the selected bundle items.
customizable_options - [SelectedCustomizableOption]! 	Custom options selected for the wish list item.
description - String 	The description of the item.
id - ID! 	The unique ID for a WishlistItemInterface object.
product - ProductInterface 	Product details of the wish list item.
quantity - Float! 	The quantity of this wish list item.
Example

{
  "added_at": "abc123",
  "bundle_options": [SelectedBundleOption],
  "customizable_options": [SelectedCustomizableOption],
  "description": "abc123",
  "id": "4",
  "product": ProductInterface,
  "quantity": 123.45
}

back to top
Types
ButtonStyles
Fields
Field Name 	Description
color - String 	The button color
height - Int 	The button height in pixels
label - String 	The button label
layout - String 	The button layout
shape - String 	The button shape
tagline - Boolean 	Indicates whether the tagline is displayed
use_default_height - Boolean 	Defines if the button uses default height. If the value is false, the value of height is used
Example

{
  "color": "xyz789",
  "height": 987,
  "label": "abc123",
  "layout": "xyz789",
  "shape": "xyz789",
  "tagline": true,
  "use_default_height": false
}

back to top
Types
CancelNegotiableQuoteTemplateInput
Description

Specifies the quote template id of the quote template to cancel
Fields
Input Field 	Description
cancellation_comment - String 	A comment to provide reason of cancellation.
template_id - ID! 	The unique ID of a NegotiableQuoteTemplate object.
Example

{
  "cancellation_comment": "abc123",
  "template_id": "4"
}

back to top
Types
CancelOrderError
Fields
Field Name 	Description
code - CancelOrderErrorCode! 	An error code that is specific to cancel order.
message - String! 	A localized error message.
Example

{
  "code": "ORDER_CANCELLATION_DISABLED",
  "message": "xyz789"
}

back to top
Types
CancelOrderErrorCode
Values
Enum Value 	Description

ORDER_CANCELLATION_DISABLED


UNDEFINED


UNAUTHORISED


ORDER_NOT_FOUND


PARTIAL_ORDER_ITEM_SHIPPED


INVALID_ORDER_STATUS

Example

"ORDER_CANCELLATION_DISABLED"

back to top
Types
CancelOrderInput
Description

Defines the order to cancel.
Fields
Input Field 	Description
order_id - ID! 	The unique ID of an Order type.
reason - String! 	Cancellation reason.
Example

{
  "order_id": "4",
  "reason": "xyz789"
}

back to top
Types
CancelOrderOutput
Description

Contains the updated customer order and error message if any.
Fields
Field Name 	Description
error - String 	Error encountered while cancelling the order.
errorV2 - CancelOrderError
order - CustomerOrder 	Updated customer order.
Example

{
  "error": "xyz789",
  "errorV2": CancelOrderError,
  "order": CustomerOrder
}

back to top
Types
CancellationReason
Fields
Field Name 	Description
description - String!
Example

{"description": "xyz789"}

back to top
Types
Card
Fields
Field Name 	Description
bin_details - CardBin 	Card bin details
card_expiry_month - String 	Expiration month of the card
card_expiry_year - String 	Expiration year of the card
last_digits - String 	Last four digits of the card
name - String 	Name on the card
Example

{
  "bin_details": CardBin,
  "card_expiry_month": "abc123",
  "card_expiry_year": "xyz789",
  "last_digits": "xyz789",
  "name": "xyz789"
}

back to top
Types
CardBin
Fields
Field Name 	Description
bin - String 	Card bin number
Example

{"bin": "abc123"}

back to top
Types
CardPaymentSourceInput
Description

The card payment source information
Fields
Input Field 	Description
billing_address - BillingAddressPaymentSourceInput! 	The billing address of the card
name - String 	The name on the cardholder
Example

{
  "billing_address": BillingAddressPaymentSourceInput,
  "name": "abc123"
}

back to top
Types
CardPaymentSourceOutput
Description

The card payment source information
Fields
Field Name 	Description
brand - String 	The brand of the card
expiry - String 	The expiry of the card
last_digits - String 	The last digits of the card
Example

{
  "brand": "abc123",
  "expiry": "abc123",
  "last_digits": "xyz789"
}

back to top
Types
Cart
Description

Contains the contents and other details about a guest or customer cart.
Fields
Field Name 	Description
applied_coupon - AppliedCoupon 	Use applied_coupons instead. Deprecated
applied_coupons - [AppliedCoupon] 	An array of AppliedCoupon objects. Each object contains the code text attribute, which specifies the coupon code.
applied_gift_cards - [AppliedGiftCard] 	An array of gift card items applied to the cart.
applied_reward_points - RewardPointsAmount 	The amount of reward points applied to the cart.
applied_store_credit - AppliedStoreCredit 	Store credit information applied to the cart.
available_gift_wrappings - [GiftWrapping]! 	The list of available gift wrapping options for the cart.
available_payment_methods - [AvailablePaymentMethod] 	An array of available payment methods.
billing_address - BillingCartAddress 	The billing address assigned to the cart.
email - String 	The email address of the guest or customer.
gift_message - GiftMessage 	The entered gift message for the cart
gift_receipt_included - Boolean! 	Indicates whether the shopper requested gift receipt for the cart.
gift_wrapping - GiftWrapping 	The selected gift wrapping for the cart.
id - ID! 	The unique ID for a Cart object.
is_virtual - Boolean! 	Indicates whether the cart contains only virtual products.
items - [CartItemInterface] 	An array of products that have been added to the cart. Use itemsV2 instead. Deprecated
itemsV2 - CartItems
prices - CartPrices 	Pricing details for the quote.
printed_card_included - Boolean! 	Indicates whether the shopper requested a printed card for the cart.
rules - [CartRule] 	Provides applied cart rules in the current active cart
selected_payment_method - SelectedPaymentMethod 	Indicates which payment method was applied to the cart.
shipping_addresses - [ShippingCartAddress]! 	An array of shipping addresses assigned to the cart.
total_quantity - Float! 	The total number of items in the cart.
Example

{
  "applied_coupon": AppliedCoupon,
  "applied_coupons": [AppliedCoupon],
  "applied_gift_cards": [AppliedGiftCard],
  "applied_reward_points": RewardPointsAmount,
  "applied_store_credit": AppliedStoreCredit,
  "available_gift_wrappings": [GiftWrapping],
  "available_payment_methods": [AvailablePaymentMethod],
  "billing_address": BillingCartAddress,
  "email": "xyz789",
  "gift_message": GiftMessage,
  "gift_receipt_included": true,
  "gift_wrapping": GiftWrapping,
  "id": 4,
  "is_virtual": true,
  "items": [CartItemInterface],
  "itemsV2": CartItems,
  "prices": CartPrices,
  "printed_card_included": true,
  "rules": [CartRule],
  "selected_payment_method": SelectedPaymentMethod,
  "shipping_addresses": [ShippingCartAddress],
  "total_quantity": 123.45
}

back to top
Types
CartAddressCountry
Description

Contains details the country in a billing or shipping address.
Fields
Field Name 	Description
code - String! 	The country code.
label - String! 	The display label for the country.
Example

{
  "code": "abc123",
  "label": "abc123"
}

back to top
Types
CartAddressInput
Description

Defines the billing or shipping address to be applied to the cart.
Fields
Input Field 	Description
city - String! 	The city specified for the billing or shipping address.
company - String 	The company specified for the billing or shipping address.
country_code - String! 	The country code and label for the billing or shipping address.
custom_attributes - [AttributeValueInput] 	The custom attribute values of the billing or shipping address.
fax - String 	The customer's fax number.
firstname - String! 	The first name of the customer or guest.
lastname - String! 	The last name of the customer or guest.
middlename - String 	The middle name of the person associated with the billing/shipping address.
postcode - String 	The ZIP or postal code of the billing or shipping address.
prefix - String 	An honorific, such as Dr., Mr., or Mrs.
region - String 	A string that defines the state or province of the billing or shipping address.
region_id - Int 	An integer that defines the state or province of the billing or shipping address.
save_in_address_book - Boolean 	Determines whether to save the address in the customer's address book. The default value is true.
street - [String]! 	An array containing the street for the billing or shipping address.
suffix - String 	A value such as Sr., Jr., or III.
telephone - String 	The telephone number for the billing or shipping address.
vat_id - String 	The VAT company number for billing or shipping address.
Example

{
  "city": "xyz789",
  "company": "abc123",
  "country_code": "xyz789",
  "custom_attributes": [AttributeValueInput],
  "fax": "abc123",
  "firstname": "xyz789",
  "lastname": "abc123",
  "middlename": "abc123",
  "postcode": "abc123",
  "prefix": "xyz789",
  "region": "xyz789",
  "region_id": 123,
  "save_in_address_book": false,
  "street": ["abc123"],
  "suffix": "abc123",
  "telephone": "xyz789",
  "vat_id": "xyz789"
}

back to top
Types
CartAddressInterface
Fields
Field Name 	Description
city - String! 	The city specified for the billing or shipping address.
company - String 	The company specified for the billing or shipping address.
country - CartAddressCountry! 	An object containing the country label and code.
custom_attributes - [AttributeValueInterface]! 	The custom attribute values of the billing or shipping address.
fax - String 	The customer's fax number.
firstname - String! 	The first name of the customer or guest.
id - Int 	Id of the customer address.
lastname - String! 	The last name of the customer or guest.
middlename - String 	The middle name of the person associated with the billing/shipping address.
postcode - String 	The ZIP or postal code of the billing or shipping address.
prefix - String 	An honorific, such as Dr., Mr., or Mrs.
region - CartAddressRegion 	An object containing the region label and code.
street - [String]! 	An array containing the street for the billing or shipping address.
suffix - String 	A value such as Sr., Jr., or III.
telephone - String 	The telephone number for the billing or shipping address.
uid - String! 	The unique id of the customer address.
vat_id - String 	The VAT company number for billing or shipping address.
Possible Types
CartAddressInterface Types

ShippingCartAddress

BillingCartAddress
Example

{
  "city": "abc123",
  "company": "xyz789",
  "country": CartAddressCountry,
  "custom_attributes": [AttributeValueInterface],
  "fax": "abc123",
  "firstname": "xyz789",
  "id": 123,
  "lastname": "xyz789",
  "middlename": "xyz789",
  "postcode": "xyz789",
  "prefix": "abc123",
  "region": CartAddressRegion,
  "street": ["xyz789"],
  "suffix": "abc123",
  "telephone": "xyz789",
  "uid": "abc123",
  "vat_id": "xyz789"
}

back to top
Types
CartAddressRegion
Description

Contains details about the region in a billing or shipping address.
Fields
Field Name 	Description
code - String 	The state or province code.
label - String 	The display label for the region.
region_id - Int 	The unique ID for a pre-defined region.
Example

{
  "code": "abc123",
  "label": "xyz789",
  "region_id": 987
}

back to top
Types
CartDiscount
Description

Contains information about discounts applied to the cart.
Fields
Field Name 	Description
amount - Money! 	The amount of the discount applied to the item.
label - [String]! 	The description of the discount.
Example

{
  "amount": Money,
  "label": ["xyz789"]
}

back to top
Types
CartDiscountType
Values
Enum Value 	Description

ITEM


SHIPPING

Example

"ITEM"

back to top
Types
CartItemError
Fields
Field Name 	Description
code - CartItemErrorType! 	An error code that describes the error encountered
message - String! 	A localized error message
Example

{"code": "UNDEFINED", "message": "xyz789"}

back to top
Types
CartItemErrorType
Values
Enum Value 	Description

UNDEFINED


ITEM_QTY


ITEM_INCREMENTS

Example

"UNDEFINED"

back to top
Types
CartItemInput
Description

Defines an item to be added to the cart.
Fields
Input Field 	Description
entered_options - [EnteredOptionInput] 	An array of entered options for the base product, such as personalization text.
parent_sku - String 	For a child product, the SKU of its parent product.
quantity - Float! 	The amount or number of an item to add.
selected_options - [ID] 	The selected options for the base product, such as color or size, using the unique ID for an object such as CustomizableRadioOption, CustomizableDropDownOption, or ConfigurableProductOptionsValues.
sku - String! 	The SKU of the product.
Example

{
  "entered_options": [EnteredOptionInput],
  "parent_sku": "abc123",
  "quantity": 123.45,
  "selected_options": ["4"],
  "sku": "xyz789"
}

back to top
Types
CartItemInterface
Description

An interface for products in a cart.
Fields
Field Name 	Description
discount - [Discount] 	Contains discount for quote line item.
errors - [CartItemError] 	An array of errors encountered while loading the cart item
id - String! 	Use uid instead. Deprecated
is_available - Boolean! 	True if requested quantity is less than available stock, false otherwise.
max_qty - Float 	Line item max qty in quote template
min_qty - Float 	Line item min qty in quote template
not_available_message - String 	Message to display when the product is not available with this selected option.
note_from_buyer - [ItemNote] 	The buyer's quote line item note.
note_from_seller - [ItemNote] 	The seller's quote line item note.
prices - CartItemPrices 	Contains details about the price of the item, including taxes and discounts.
product - ProductInterface! 	Details about an item in the cart.
quantity - Float! 	The quantity of this item in the cart.
uid - ID! 	The unique ID for a CartItemInterface object.
Possible Types
CartItemInterface Types

SimpleCartItem

VirtualCartItem

ConfigurableCartItem

BundleCartItem

DownloadableCartItem

GiftCardCartItem
Example

{
  "discount": [Discount],
  "errors": [CartItemError],
  "id": "abc123",
  "is_available": false,
  "max_qty": 123.45,
  "min_qty": 987.65,
  "not_available_message": "xyz789",
  "note_from_buyer": [ItemNote],
  "note_from_seller": [ItemNote],
  "prices": CartItemPrices,
  "product": ProductInterface,
  "quantity": 987.65,
  "uid": 4
}

back to top
Types
CartItemPrices
Description

Contains details about the price of the item, including taxes and discounts.
Fields
Field Name 	Description
catalog_discount - ProductDiscount 	The price discount for the unit price of the item represents the difference between its regular price and final price.
discounts - [Discount] 	An array of discounts to be applied to the cart item.
fixed_product_taxes - [FixedProductTax] 	An array of FPTs applied to the cart item.
original_item_price - Money! 	The value of the original unit price for the item, including discounts.
original_row_total - Money! 	The value of the original price multiplied by the quantity of the item.
price - Money! 	The price of the item before any discounts were applied. The price that might include tax, depending on the configured display settings for cart.
price_including_tax - Money! 	The price of the item before any discounts were applied. The price that might include tax, depending on the configured display settings for cart.
row_catalog_discount - ProductDiscount 	The price discount multiplied by the item quantity represents the total difference between the regular price and the final price for the entire quote item.
row_total - Money! 	The value of the price multiplied by the quantity of the item.
row_total_including_tax - Money! 	The value of row_total plus the tax applied to the item.
total_item_discount - Money 	The total of all discounts applied to the item.
Example

{
  "catalog_discount": ProductDiscount,
  "discounts": [Discount],
  "fixed_product_taxes": [FixedProductTax],
  "original_item_price": Money,
  "original_row_total": Money,
  "price": Money,
  "price_including_tax": Money,
  "row_catalog_discount": ProductDiscount,
  "row_total": Money,
  "row_total_including_tax": Money,
  "total_item_discount": Money
}

back to top
Types
CartItemQuantity
Description

Deprecated: The ShippingCartAddress.cart_items field now returns CartItemInterface.
Fields
Field Name 	Description
cart_item_id - Int! 	The ShippingCartAddress.cart_items field now returns CartItemInterface. Deprecated
quantity - Float! 	The ShippingCartAddress.cart_items field now returns CartItemInterface. Deprecated
Example

{"cart_item_id": 123, "quantity": 123.45}

back to top
Types
CartItemSelectedOptionValuePrice
Description

Contains details about the price of a selected customizable value.
Fields
Field Name 	Description
type - PriceTypeEnum! 	Indicates whether the price type is fixed, percent, or dynamic.
units - String! 	A string that describes the unit of the value.
value - Float! 	A price value.
Example

{
  "type": "FIXED",
  "units": "xyz789",
  "value": 123.45
}

back to top
Types
CartItemUpdateInput
Description

A single item to be updated.
Fields
Input Field 	Description
cart_item_id - Int 	Deprecated. Use cart_item_uid instead.
cart_item_uid - ID 	The unique ID for a CartItemInterface object.
customizable_options - [CustomizableOptionInput] 	An array that defines customizable options for the product.
gift_message - GiftMessageInput 	Gift message details for the cart item
gift_wrapping_id - ID 	The unique ID for a GiftWrapping object to be used for the cart item.
quantity - Float 	The new quantity of the item.
Example

{
  "cart_item_id": 987,
  "cart_item_uid": 4,
  "customizable_options": [CustomizableOptionInput],
  "gift_message": GiftMessageInput,
  "gift_wrapping_id": "4",
  "quantity": 987.65
}

back to top
Types
CartItems
Fields
Field Name 	Description
items - [CartItemInterface]! 	An array of products that have been added to the cart.
page_info - SearchResultPageInfo 	Metadata for pagination rendering.
total_count - Int! 	The number of returned cart items.
Example

{
  "items": [CartItemInterface],
  "page_info": SearchResultPageInfo,
  "total_count": 987
}

back to top
Types
CartPrices
Description

Contains details about the final price of items in the cart, including discount and tax information.
Fields
Field Name 	Description
applied_taxes - [CartTaxItem] 	An array containing the names and amounts of taxes applied to each item in the cart.
discount - CartDiscount 	Use discounts instead. Deprecated
discounts - [Discount] 	An array containing cart rule discounts, store credit and gift cards applied to the cart.
gift_options - GiftOptionsPrices 	The list of prices for the selected gift options.
grand_total - Money 	The total, including discounts, taxes, shipping, and other fees.
grand_total_excluding_tax - Money 	The total of the cart, including discounts, shipping, and other fees without tax.
subtotal_excluding_tax - Money 	The subtotal without any applied taxes.
subtotal_including_tax - Money 	The subtotal including any applied taxes.
subtotal_with_discount_excluding_tax - Money 	The subtotal with any discounts applied, but not taxes.
Example

{
  "applied_taxes": [CartTaxItem],
  "discount": CartDiscount,
  "discounts": [Discount],
  "gift_options": GiftOptionsPrices,
  "grand_total": Money,
  "grand_total_excluding_tax": Money,
  "subtotal_excluding_tax": Money,
  "subtotal_including_tax": Money,
  "subtotal_with_discount_excluding_tax": Money
}

back to top
Types
CartRule
Fields
Field Name 	Description
name - String! 	Name of the cart price rule
Example

{"name": "abc123"}

back to top
Types
CartTaxItem
Description

Contains tax information about an item in the cart.
Fields
Field Name 	Description
amount - Money! 	The amount of tax applied to the item.
label - String! 	The description of the tax.
Example

{
  "amount": Money,
  "label": "abc123"
}

back to top
Types
CartUserInputError
Fields
Field Name 	Description
code - CartUserInputErrorType! 	A cart-specific error code.
message - String! 	A localized error message.
Example

{
  "code": "PRODUCT_NOT_FOUND",
  "message": "abc123"
}

back to top
Types
CartUserInputErrorType
Values
Enum Value 	Description

PRODUCT_NOT_FOUND


NOT_SALABLE


INSUFFICIENT_STOCK


COULD_NOT_FIND_CART_ITEM


REQUIRED_PARAMETER_MISSING


INVALID_PARAMETER_VALUE


UNDEFINED


PERMISSION_DENIED

Example

"PRODUCT_NOT_FOUND"

back to top
Types
CatalogAttributeApplyToEnum
Values
Enum Value 	Description

SIMPLE


VIRTUAL


BUNDLE


DOWNLOADABLE


CONFIGURABLE


GROUPED


CATEGORY

Example

"SIMPLE"

back to top
Types
CatalogAttributeMetadata
Description

Swatch attribute metadata.
Fields
Field Name 	Description
apply_to - [CatalogAttributeApplyToEnum] 	To which catalog types an attribute can be applied.
code - ID! 	The unique identifier for an attribute code. This value should be in lowercase letters without spaces.
default_value - String 	Default attribute value.
entity_type - AttributeEntityTypeEnum! 	The type of entity that defines the attribute.
frontend_class - String 	The frontend class of the attribute.
frontend_input - AttributeFrontendInputEnum 	The frontend input type of the attribute.
is_comparable - Boolean 	Whether a product or category attribute can be compared against another or not.
is_filterable - Boolean 	Whether a product or category attribute can be filtered or not.
is_filterable_in_search - Boolean 	Whether a product or category attribute can be filtered in search or not.
is_html_allowed_on_front - Boolean 	Whether a product or category attribute can use HTML on front or not.
is_required - Boolean! 	Whether the attribute value is required.
is_searchable - Boolean 	Whether a product or category attribute can be searched or not.
is_unique - Boolean! 	Whether the attribute value must be unique.
is_used_for_price_rules - Boolean 	Whether a product or category attribute can be used for price rules or not.
is_used_for_promo_rules - Boolean 	Whether a product or category attribute is used for promo rules or not.
is_visible_in_advanced_search - Boolean 	Whether a product or category attribute is visible in advanced search or not.
is_visible_on_front - Boolean 	Whether a product or category attribute is visible on front or not.
is_wysiwyg_enabled - Boolean 	Whether a product or category attribute has WYSIWYG enabled or not.
label - String 	The label assigned to the attribute.
options - [CustomAttributeOptionInterface]! 	Attribute options.
swatch_input_type - SwatchInputTypeEnum 	Input type of the swatch attribute option.
update_product_preview_image - Boolean 	Whether update product preview image or not.
use_product_image_for_swatch - Boolean 	Whether use product image for swatch or not.
used_in_product_listing - Boolean 	Whether a product or category attribute is used in product listing or not.
Example

{
  "apply_to": ["SIMPLE"],
  "code": "4",
  "default_value": "abc123",
  "entity_type": "CATALOG_PRODUCT",
  "frontend_class": "abc123",
  "frontend_input": "BOOLEAN",
  "is_comparable": false,
  "is_filterable": false,
  "is_filterable_in_search": true,
  "is_html_allowed_on_front": false,
  "is_required": true,
  "is_searchable": false,
  "is_unique": true,
  "is_used_for_price_rules": true,
  "is_used_for_promo_rules": true,
  "is_visible_in_advanced_search": false,
  "is_visible_on_front": false,
  "is_wysiwyg_enabled": true,
  "label": "abc123",
  "options": [CustomAttributeOptionInterface],
  "swatch_input_type": "BOOLEAN",
  "update_product_preview_image": true,
  "use_product_image_for_swatch": false,
  "used_in_product_listing": true
}

back to top
Types
CatalogRule
Fields
Field Name 	Description
name - String! 	Name of the catalog rule
Example

{"name": "abc123"}

back to top
Types
CategoryFilterInput
Description

Defines the filters to be used in the search. A filter contains at least one attribute, a comparison operator, and the value that is being searched for.
Fields
Input Field 	Description
category_uid - FilterEqualTypeInput 	Filter by the unique category ID for a CategoryInterface object.
ids - FilterEqualTypeInput 	Deprecated: use 'category_uid' to filter uniquely identifiers of categories.
name - FilterMatchTypeInput 	Filter by the display name of the category.
parent_category_uid - FilterEqualTypeInput 	Filter by the unique parent category ID for a CategoryInterface object.
parent_id - FilterEqualTypeInput 	Filter by the unique parent category ID for a CategoryInterface object.
url_key - FilterEqualTypeInput 	Filter by the part of the URL that identifies the category.
url_path - FilterEqualTypeInput 	Filter by the URL path for the category.
Example

{
  "category_uid": FilterEqualTypeInput,
  "ids": FilterEqualTypeInput,
  "name": FilterMatchTypeInput,
  "parent_category_uid": FilterEqualTypeInput,
  "parent_id": FilterEqualTypeInput,
  "url_key": FilterEqualTypeInput,
  "url_path": FilterEqualTypeInput
}

back to top
Types
CategoryInterface
Description

Contains the full set of attributes that can be returned in a category search.
Fields
Field Name 	Description
automatic_sorting - String
available_sort_by - [String]
breadcrumbs - [Breadcrumb] 	An array of breadcrumb items.
canonical_url - String 	The relative canonical URL. This value is returned only if the system setting 'Use Canonical Link Meta Tag For Categories' is enabled.
children_count - String
cms_block - CmsBlock 	Contains a category CMS block.
created_at - String 	The timestamp indicating when the category was created. The field should not be used on the storefront. Deprecated
custom_layout_update_file - String
default_sort_by - String 	The attribute to use for sorting.
description - String 	An optional description of the category.
display_mode - String
filter_price_range - Float
id - Int 	An ID that uniquely identifies the category. Use uid instead. Deprecated
image - String
include_in_menu - Int
is_anchor - Int
landing_page - Int
level - Int 	The depth of the category within the tree.
meta_description - String
meta_keywords - String
meta_title - String
name - String 	The display name of the category.
path - String 	The full category path.
path_in_store - String 	The category path within the store.
position - Int 	The position of the category relative to other categories at the same level in tree.
product_count - Int 	The number of products in the category that are marked as visible. By default, in complex products, parent products are visible, but their child products are not.
products - CategoryProducts 	The list of products assigned to the category.
staged - Boolean! 	Indicates whether the category is staged for a future campaign.
uid - ID! 	The unique ID for a CategoryInterface object.
updated_at - String 	The timestamp indicating when the category was updated. The field should not be used on the storefront. Deprecated
url_key - String 	The URL key assigned to the category.
url_path - String 	The URL path assigned to the category.
url_suffix - String 	The part of the category URL that is appended after the url key
Possible Types
CategoryInterface Types

CategoryTree
Example

{
  "automatic_sorting": "abc123",
  "available_sort_by": ["abc123"],
  "breadcrumbs": [Breadcrumb],
  "canonical_url": "abc123",
  "children_count": "xyz789",
  "cms_block": CmsBlock,
  "created_at": "xyz789",
  "custom_layout_update_file": "xyz789",
  "default_sort_by": "xyz789",
  "description": "xyz789",
  "display_mode": "xyz789",
  "filter_price_range": 987.65,
  "id": 123,
  "image": "abc123",
  "include_in_menu": 987,
  "is_anchor": 123,
  "landing_page": 987,
  "level": 123,
  "meta_description": "xyz789",
  "meta_keywords": "abc123",
  "meta_title": "abc123",
  "name": "abc123",
  "path": "abc123",
  "path_in_store": "xyz789",
  "position": 987,
  "product_count": 123,
  "products": CategoryProducts,
  "staged": false,
  "uid": "4",
  "updated_at": "abc123",
  "url_key": "abc123",
  "url_path": "xyz789",
  "url_suffix": "abc123"
}

back to top
Types
CategoryProducts
Description

Contains details about the products assigned to a category.
Fields
Field Name 	Description
items - [ProductInterface] 	An array of products that are assigned to the category.
page_info - SearchResultPageInfo 	Pagination metadata.
total_count - Int 	The number of products in the category that are marked as visible. By default, in complex products, parent products are visible, but their child products are not.
Example

{
  "items": [ProductInterface],
  "page_info": SearchResultPageInfo,
  "total_count": 123
}

back to top
Types
CategoryResult
Description

Contains a collection of CategoryTree objects and pagination information.
Fields
Field Name 	Description
items - [CategoryTree] 	A list of categories that match the filter criteria.
page_info - SearchResultPageInfo 	An object that includes the page_info and currentPage values specified in the query.
total_count - Int 	The total number of categories that match the criteria.
Example

{
  "items": [CategoryTree],
  "page_info": SearchResultPageInfo,
  "total_count": 123
}

back to top
Types
CategoryTree
Description

Contains the hierarchy of categories.
Fields
Field Name 	Description
automatic_sorting - String
available_sort_by - [String]
breadcrumbs - [Breadcrumb] 	An array of breadcrumb items.
canonical_url - String 	The relative canonical URL. This value is returned only if the system setting 'Use Canonical Link Meta Tag For Categories' is enabled.
children - [CategoryTree] 	A tree of child categories.
children_count - String
cms_block - CmsBlock 	Contains a category CMS block.
created_at - String 	The timestamp indicating when the category was created. The field should not be used on the storefront. Deprecated
custom_layout_update_file - String
default_sort_by - String 	The attribute to use for sorting.
description - String 	An optional description of the category.
display_mode - String
filter_price_range - Float
id - Int 	An ID that uniquely identifies the category. Use uid instead. Deprecated
image - String
include_in_menu - Int
is_anchor - Int
landing_page - Int
level - Int 	The depth of the category within the tree.
meta_description - String
meta_keywords - String
meta_title - String
name - String 	The display name of the category.
path - String 	The full category path.
path_in_store - String 	The category path within the store.
position - Int 	The position of the category relative to other categories at the same level in tree.
product_count - Int 	The number of products in the category that are marked as visible. By default, in complex products, parent products are visible, but their child products are not.
products - CategoryProducts 	The list of products assigned to the category.
redirect_code - Int! 	Contains 0 when there is no redirect error. A value of 301 indicates the URL of the requested resource has been changed permanently, while a value of 302 indicates a temporary redirect.
relative_url - String 	The internal relative URL. If the specified URL is a redirect, the query returns the redirected URL, not the original.
staged - Boolean! 	Indicates whether the category is staged for a future campaign.
type - UrlRewriteEntityTypeEnum 	One of PRODUCT, CATEGORY, or CMS_PAGE.
uid - ID! 	The unique ID for a CategoryInterface object.
updated_at - String 	The timestamp indicating when the category was updated. The field should not be used on the storefront. Deprecated
url_key - String 	The URL key assigned to the category.
url_path - String 	The URL path assigned to the category.
url_suffix - String 	The part of the category URL that is appended after the url key
Example

{
  "automatic_sorting": "xyz789",
  "available_sort_by": ["xyz789"],
  "breadcrumbs": [Breadcrumb],
  "canonical_url": "abc123",
  "children": [CategoryTree],
  "children_count": "xyz789",
  "cms_block": CmsBlock,
  "created_at": "abc123",
  "custom_layout_update_file": "xyz789",
  "default_sort_by": "abc123",
  "description": "xyz789",
  "display_mode": "abc123",
  "filter_price_range": 987.65,
  "id": 123,
  "image": "xyz789",
  "include_in_menu": 123,
  "is_anchor": 123,
  "landing_page": 123,
  "level": 123,
  "meta_description": "xyz789",
  "meta_keywords": "xyz789",
  "meta_title": "xyz789",
  "name": "abc123",
  "path": "abc123",
  "path_in_store": "abc123",
  "position": 123,
  "product_count": 987,
  "products": CategoryProducts,
  "redirect_code": 123,
  "relative_url": "abc123",
  "staged": true,
  "type": "CMS_PAGE",
  "uid": 4,
  "updated_at": "abc123",
  "url_key": "xyz789",
  "url_path": "abc123",
  "url_suffix": "abc123"
}

back to top
Types
CheckoutAgreement
Description

Defines details about an individual checkout agreement.
Fields
Field Name 	Description
agreement_id - Int! 	The ID for a checkout agreement.
checkbox_text - String! 	The checkbox text for the checkout agreement.
content - String! 	Required. The text of the agreement.
content_height - String 	The height of the text box where the Terms and Conditions statement appears during checkout.
is_html - Boolean! 	Indicates whether the content text is in HTML format.
mode - CheckoutAgreementMode! 	Indicates whether agreements are accepted automatically or manually.
name - String! 	The name given to the condition.
Example

{
  "agreement_id": 123,
  "checkbox_text": "abc123",
  "content": "abc123",
  "content_height": "xyz789",
  "is_html": true,
  "mode": "AUTO",
  "name": "xyz789"
}

back to top
Types
CheckoutAgreementMode
Description

Indicates how agreements are accepted.
Values
Enum Value 	Description

AUTO
	Conditions are automatically accepted upon checkout.

MANUAL
	Shoppers must manually accept the conditions to place an order.
Example

"AUTO"

back to top
Types
CheckoutUserInputError
Description

An error encountered while adding an item to the cart.
Fields
Field Name 	Description
code - CheckoutUserInputErrorCodes! 	An error code that is specific to Checkout.
message - String! 	A localized error message.
path - [String]! 	The path to the input field that caused an error. See the GraphQL specification about path errors for details: http://spec.graphql.org/draft/#sec-Errors
Example

{
  "code": "REORDER_NOT_AVAILABLE",
  "message": "xyz789",
  "path": ["abc123"]
}

back to top
Types
CheckoutUserInputErrorCodes
Values
Enum Value 	Description

REORDER_NOT_AVAILABLE


PRODUCT_NOT_FOUND


NOT_SALABLE


INSUFFICIENT_STOCK


UNDEFINED

Example

"REORDER_NOT_AVAILABLE"

back to top
Types
ClearCartError
Description

Contains details about errors encountered when a customer clear cart.
Fields
Field Name 	Description
message - String! 	A localized error message
type - ClearCartErrorType! 	A cart-specific error type.
Example

{"message": "abc123", "type": "NOT_FOUND"}

back to top
Types
ClearCartErrorType
Values
Enum Value 	Description

NOT_FOUND


UNAUTHORISED


INACTIVE


UNDEFINED

Example

"NOT_FOUND"

back to top
Types
ClearCartInput
Description

Assigns a specific cart_id to the empty cart.
Fields
Input Field 	Description
uid - ID! 	The unique ID of a Cart object.
Example

{"uid": 4}

back to top
Types
ClearCartOutput
Description

Output of the request to clear the customer cart.
Fields
Field Name 	Description
cart - Cart 	The cart after clear cart items.
errors - [ClearCartError] 	An array of errors encountered while clearing the cart item
Example

{
  "cart": Cart,
  "errors": [ClearCartError]
}

back to top
Types
ClearCustomerCartOutput
Description

Output of the request to clear the customer cart.
Fields
Field Name 	Description
cart - Cart 	The cart after clearing items.
status - Boolean! 	Indicates whether cart was cleared.
Example

{"cart": Cart, "status": false}

back to top
Types
CloseNegotiableQuoteError
Union Types

NegotiableQuoteInvalidStateError

NoSuchEntityUidError

InternalError
Example

NegotiableQuoteInvalidStateError

back to top
Types
CloseNegotiableQuoteOperationFailure
Description

Contains details about a failed close operation on a negotiable quote.
Fields
Field Name 	Description
errors - [CloseNegotiableQuoteError]! 	An array of errors encountered while attempting close the negotiable quote.
quote_uid - ID! 	The unique ID of a NegotiableQuote object.
Example

{
  "errors": [NegotiableQuoteInvalidStateError],
  "quote_uid": "4"
}

back to top
Types
CloseNegotiableQuoteOperationResult
Union Types

NegotiableQuoteUidOperationSuccess

CloseNegotiableQuoteOperationFailure
Example

NegotiableQuoteUidOperationSuccess

back to top
Types
CloseNegotiableQuotesInput
Description

Defines the negotiable quotes to mark as closed.
Fields
Input Field 	Description
quote_uids - [ID]! 	A list of unique IDs from NegotiableQuote objects.
Example

{"quote_uids": ["4"]}

back to top
Types
CloseNegotiableQuotesOutput
Description

Contains the closed negotiable quotes and other negotiable quotes the company user can view.
Fields
Field Name 	Description
closed_quotes - [NegotiableQuote] 	An array containing the negotiable quotes that were just closed. Use operation_results instead. Deprecated
negotiable_quotes - NegotiableQuotesOutput 	A list of negotiable quotes that can be viewed by the logged-in customer
operation_results - [CloseNegotiableQuoteOperationResult]! 	An array of closed negotiable quote UIDs and details about any errors.
result_status - BatchMutationStatus! 	The status of the request to close one or more negotiable quotes.
Example

{
  "closed_quotes": [NegotiableQuote],
  "negotiable_quotes": NegotiableQuotesOutput,
  "operation_results": [
    NegotiableQuoteUidOperationSuccess
  ],
  "result_status": "SUCCESS"
}

back to top
Types
CmsBlock
Description

Contains details about a specific CMS block.
Fields
Field Name 	Description
content - String 	The content of the CMS block in raw HTML.
identifier - String 	The CMS block identifier.
title - String 	The title assigned to the CMS block.
Example

{
  "content": "abc123",
  "identifier": "xyz789",
  "title": "abc123"
}

back to top
Types
CmsBlocks
Description

Contains an array CMS block items.
Fields
Field Name 	Description
items - [CmsBlock] 	An array of CMS blocks.
Example

{"items": [CmsBlock]}

back to top
Types
CmsPage
Description

Contains details about a CMS page.
Fields
Field Name 	Description
content - String 	The content of the CMS page in raw HTML.
content_heading - String 	The heading that displays at the top of the CMS page.
identifier - String 	The ID of a CMS page.
meta_description - String 	A brief description of the page for search results listings.
meta_keywords - String 	A brief description of the page for search results listings.
meta_title - String 	A page title that is indexed by search engines and appears in search results listings.
page_layout - String 	The design layout of the page, indicating the number of columns and navigation features used on the page.
redirect_code - Int! 	Contains 0 when there is no redirect error. A value of 301 indicates the URL of the requested resource has been changed permanently, while a value of 302 indicates a temporary redirect.
relative_url - String 	The internal relative URL. If the specified URL is a redirect, the query returns the redirected URL, not the original.
title - String 	The name that appears in the breadcrumb trail navigation and in the browser title bar and tab.
type - UrlRewriteEntityTypeEnum 	One of PRODUCT, CATEGORY, or CMS_PAGE.
url_key - String 	The URL key of the CMS page, which is often based on the content_heading.
Example

{
  "content": "abc123",
  "content_heading": "abc123",
  "identifier": "abc123",
  "meta_description": "xyz789",
  "meta_keywords": "xyz789",
  "meta_title": "xyz789",
  "page_layout": "abc123",
  "redirect_code": 987,
  "relative_url": "xyz789",
  "title": "xyz789",
  "type": "CMS_PAGE",
  "url_key": "abc123"
}

back to top
Types
ColorSwatchData
Fields
Field Name 	Description
value - String 	The value can be represented as color (HEX code), image link, or text.
Example

{"value": "xyz789"}

back to top
Types
CompaniesSortFieldEnum
Description

The fields available for sorting the customer companies.
Values
Enum Value 	Description

NAME
	The name of the company.
Example

"NAME"

back to top
Types
CompaniesSortInput
Description

Specifies which field to sort on, and whether to return the results in ascending or descending order.
Fields
Input Field 	Description
field - CompaniesSortFieldEnum! 	The field for sorting the results.
order - SortEnum! 	Indicates whether to return results in ascending or descending order.
Example

{"field": "NAME", "order": "ASC"}

back to top
Types
Company
Description

Contains the output schema for a company.
Fields
Field Name 	Description
acl_resources - [CompanyAclResource] 	The list of all resources defined within the company.
company_admin - Customer 	An object containing information about the company administrator.
credit - CompanyCredit! 	Company credit balances and limits.
credit_history - CompanyCreditHistory! 	Details about the history of company credit operations.
email - String 	The email address of the company contact.
id - ID! 	The unique ID of a Company object.
legal_address - CompanyLegalAddress 	The address where the company is registered to conduct business.
legal_name - String 	The full legal name of the company.
name - String 	The name of the company.
payment_methods - [String] 	The list of payment methods available to a company.
reseller_id - String 	The resale number that is assigned to the company for tax reporting purposes.
role - CompanyRole 	A company role filtered by the unique ID of a CompanyRole object.
roles - CompanyRoles! 	An object that contains a list of company roles.
sales_representative - CompanySalesRepresentative 	An object containing information about the company sales representative.
structure - CompanyStructure 	The company structure of teams and customers in depth-first order.
team - CompanyTeam 	The company team data filtered by the unique ID for a CompanyTeam object.
user - Customer 	A company user filtered by the unique ID of a Customer object.
users - CompanyUsers 	An object that contains a list of company users based on activity status.
vat_tax_id - String 	The value-added tax number that is assigned to the company by some jurisdictions for tax reporting purposes.
Example

{
  "acl_resources": [CompanyAclResource],
  "company_admin": Customer,
  "credit": CompanyCredit,
  "credit_history": CompanyCreditHistory,
  "email": "xyz789",
  "id": "4",
  "legal_address": CompanyLegalAddress,
  "legal_name": "abc123",
  "name": "abc123",
  "payment_methods": ["xyz789"],
  "reseller_id": "xyz789",
  "role": CompanyRole,
  "roles": CompanyRoles,
  "sales_representative": CompanySalesRepresentative,
  "structure": CompanyStructure,
  "team": CompanyTeam,
  "user": Customer,
  "users": CompanyUsers,
  "vat_tax_id": "xyz789"
}

back to top
Types
CompanyAclResource
Description

Contains details about the access control list settings of a resource.
Fields
Field Name 	Description
children - [CompanyAclResource] 	An array of sub-resources.
id - ID! 	The unique ID for a CompanyAclResource object.
sort_order - Int 	The sort order of an ACL resource.
text - String 	The label assigned to the ACL resource.
Example

{
  "children": [CompanyAclResource],
  "id": "4",
  "sort_order": 123,
  "text": "xyz789"
}

back to top
Types
CompanyAdminInput
Description

Defines the input schema for creating a company administrator.
Fields
Input Field 	Description
custom_attributes - [AttributeValueInput] 	The company administrator's custom attributes.
email - String! 	The email address of the company administrator.
firstname - String! 	The company administrator's first name.
gender - Int 	The company administrator's gender (Male - 1, Female - 2, Not Specified - 3).
job_title - String 	The job title of the company administrator.
lastname - String! 	The company administrator's last name.
telephone - String 	The phone number of the company administrator.
Example

{
  "custom_attributes": [AttributeValueInput],
  "email": "xyz789",
  "firstname": "abc123",
  "gender": 123,
  "job_title": "xyz789",
  "lastname": "abc123",
  "telephone": "abc123"
}

back to top
Types
CompanyBasicInfo
Description

The minimal required information to identify and display the company.
Fields
Field Name 	Description
id - ID! 	The unique ID of a Company object.
legal_name - String 	The full legal name of the company.
name - String 	The name of the company.
Example

{
  "id": "4",
  "legal_name": "xyz789",
  "name": "abc123"
}

back to top
Types
CompanyCreateInput
Description

Defines the input schema for creating a new company.
Fields
Input Field 	Description
company_admin - CompanyAdminInput! 	Defines the company administrator.
company_email - String! 	The email address of the company contact.
company_name - String! 	The name of the company to create.
legal_address - CompanyLegalAddressCreateInput! 	Defines legal address data of the company.
legal_name - String 	The full legal name of the company.
reseller_id - String 	The resale number that is assigned to the company for tax reporting purposes.
vat_tax_id - String 	The value-added tax number that is assigned to the company by some jurisdictions for tax reporting purposes.
Example

{
  "company_admin": CompanyAdminInput,
  "company_email": "abc123",
  "company_name": "xyz789",
  "legal_address": CompanyLegalAddressCreateInput,
  "legal_name": "xyz789",
  "reseller_id": "abc123",
  "vat_tax_id": "abc123"
}

back to top
Types
CompanyCredit
Description

Contains company credit balances and limits.
Fields
Field Name 	Description
available_credit - Money! 	The sum of the credit limit and the outstanding balance. If the company has exceeded the credit limit, the amount is as a negative value.
credit_limit - Money! 	The amount of credit extended to the company.
outstanding_balance - Money! 	The amount reimbursed, less the total due from all orders placed using the Payment on Account payment method. The amount can be a positive or negative value.
Example

{
  "available_credit": Money,
  "credit_limit": Money,
  "outstanding_balance": Money
}

back to top
Types
CompanyCreditHistory
Description

Contains details about prior company credit operations.
Fields
Field Name 	Description
items - [CompanyCreditOperation]! 	An array of company credit operations.
page_info - SearchResultPageInfo! 	Metadata for pagination rendering.
total_count - Int 	The number of the company credit operations matching the specified filter.
Example

{
  "items": [CompanyCreditOperation],
  "page_info": SearchResultPageInfo,
  "total_count": 123
}

back to top
Types
CompanyCreditHistoryFilterInput
Description

Defines a filter for narrowing the results of a credit history search.
Fields
Input Field 	Description
custom_reference_number - String 	The purchase order number associated with the company credit operation.
operation_type - CompanyCreditOperationType 	The type of the company credit operation.
updated_by - String 	The name of the person submitting the company credit operation.
Example

{
  "custom_reference_number": "abc123",
  "operation_type": "ALLOCATION",
  "updated_by": "abc123"
}

back to top
Types
CompanyCreditOperation
Description

Contains details about a single company credit operation.
Fields
Field Name 	Description
amount - Money 	The amount of the company credit operation.
balance - CompanyCredit! 	The credit balance as a result of the operation.
custom_reference_number - String 	The purchase order number associated with the company credit operation.
date - String! 	The date the operation occurred.
type - CompanyCreditOperationType! 	The type of the company credit operation.
updated_by - CompanyCreditOperationUser! 	The company user that submitted the company credit operation.
Example

{
  "amount": Money,
  "balance": CompanyCredit,
  "custom_reference_number": "abc123",
  "date": "xyz789",
  "type": "ALLOCATION",
  "updated_by": CompanyCreditOperationUser
}

back to top
Types
CompanyCreditOperationType
Values
Enum Value 	Description

ALLOCATION


UPDATE


PURCHASE


REIMBURSEMENT


REFUND


REVERT

Example

"ALLOCATION"

back to top
Types
CompanyCreditOperationUser
Description

Defines the administrator or company user that submitted a company credit operation.
Fields
Field Name 	Description
name - String! 	The name of the company user submitting the company credit operation.
type - CompanyCreditOperationUserType! 	The type of the company user submitting the company credit operation.
Example

{"name": "xyz789", "type": "CUSTOMER"}

back to top
Types
CompanyCreditOperationUserType
Values
Enum Value 	Description

CUSTOMER


ADMIN

Example

"CUSTOMER"

back to top
Types
CompanyInvitationInput
Description

Defines the input schema for accepting the company invitation.
Fields
Input Field 	Description
code - String! 	The invitation code.
role_id - ID 	The company role id.
user - CompanyInvitationUserInput! 	Company user attributes in the invitation.
Example

{
  "code": "abc123",
  "role_id": 4,
  "user": CompanyInvitationUserInput
}

back to top
Types
CompanyInvitationOutput
Description

The result of accepting the company invitation.
Fields
Field Name 	Description
success - Boolean 	Indicates whether the customer was added to the company successfully.
Example

{"success": true}

back to top
Types
CompanyInvitationUserInput
Description

Company user attributes in the invitation.
Fields
Input Field 	Description
company_id - ID! 	The company unique identifier.
customer_id - ID! 	The customer unique identifier.
job_title - String 	The job title of a company user.
status - CompanyUserStatusEnum 	Indicates whether the company user is ACTIVE or INACTIVE.
telephone - String 	The phone number of the company user.
Example

{
  "company_id": 4,
  "customer_id": 4,
  "job_title": "abc123",
  "status": "ACTIVE",
  "telephone": "xyz789"
}

back to top
Types
CompanyLegalAddress
Description

Contains details about the address where the company is registered to conduct business.
Fields
Field Name 	Description
city - String 	The city where the company is registered to conduct business.
country_code - CountryCodeEnum 	The country code of the company's legal address.
postcode - String 	The company's postal code.
region - CustomerAddressRegion 	An object containing region data for the company.
street - [String] 	An array of strings that define the company's street address.
telephone - String 	The company's phone number.
Example

{
  "city": "xyz789",
  "country_code": "AF",
  "postcode": "xyz789",
  "region": CustomerAddressRegion,
  "street": ["abc123"],
  "telephone": "xyz789"
}

back to top
Types
CompanyLegalAddressCreateInput
Description

Defines the input schema for defining a company's legal address.
Fields
Input Field 	Description
city - String! 	The city where the company is registered to conduct business.
country_id - CountryCodeEnum! 	The company's country ID. Use the countries query to get this value.
postcode - String! 	The postal code of the company.
region - CustomerAddressRegionInput! 	An object containing the region name and/or region ID where the company is registered to conduct business.
street - [String]! 	An array of strings that define the street address where the company is registered to conduct business.
telephone - String! 	The primary phone number of the company.
Example

{
  "city": "abc123",
  "country_id": "AF",
  "postcode": "xyz789",
  "region": CustomerAddressRegionInput,
  "street": ["abc123"],
  "telephone": "abc123"
}

back to top
Types
CompanyLegalAddressUpdateInput
Description

Defines the input schema for updating a company's legal address.
Fields
Input Field 	Description
city - String 	The city where the company is registered to conduct business.
country_id - CountryCodeEnum 	The unique ID for a Country object.
postcode - String 	The postal code of the company.
region - CustomerAddressRegionInput 	An object containing the region name and/or region ID where the company is registered to conduct business.
street - [String] 	An array of strings that define the street address where the company is registered to conduct business.
telephone - String 	The primary phone number of the company.
Example

{
  "city": "xyz789",
  "country_id": "AF",
  "postcode": "xyz789",
  "region": CustomerAddressRegionInput,
  "street": ["abc123"],
  "telephone": "abc123"
}

back to top
Types
CompanyRole
Description

Contails details about a single role.
Fields
Field Name 	Description
id - ID! 	The unique ID for a CompanyRole object.
name - String 	The name assigned to the role.
permissions - [CompanyAclResource] 	A list of permission resources defined for a role.
users_count - Int 	The total number of users assigned the specified role.
Example

{
  "id": "4",
  "name": "abc123",
  "permissions": [CompanyAclResource],
  "users_count": 123
}

back to top
Types
CompanyRoleCreateInput
Description

Defines the input schema for creating a company role.
Fields
Input Field 	Description
name - String! 	The name of the role to create.
permissions - [String]! 	A list of resources the role can access.
Example

{
  "name": "abc123",
  "permissions": ["abc123"]
}

back to top
Types
CompanyRoleUpdateInput
Description

Defines the input schema for updating a company role.
Fields
Input Field 	Description
id - ID! 	The unique ID for a CompanyRole object.
name - String 	The name of the role to update.
permissions - [String] 	A list of resources the role can access.
Example

{
  "id": 4,
  "name": "abc123",
  "permissions": ["abc123"]
}

back to top
Types
CompanyRoles
Description

Contains an array of roles.
Fields
Field Name 	Description
items - [CompanyRole]! 	A list of company roles that match the specified filter criteria.
page_info - SearchResultPageInfo 	Pagination metadata.
total_count - Int! 	The total number of objects matching the specified filter.
Example

{
  "items": [CompanyRole],
  "page_info": SearchResultPageInfo,
  "total_count": 987
}

back to top
Types
CompanySalesRepresentative
Description

Contains details about a company sales representative.
Fields
Field Name 	Description
email - String 	The email address of the company sales representative.
firstname - String 	The company sales representative's first name.
lastname - String 	The company sales representative's last name.
Example

{
  "email": "abc123",
  "firstname": "abc123",
  "lastname": "xyz789"
}

back to top
Types
CompanyStructure
Description

Contains an array of the individual nodes that comprise the company structure.
Fields
Field Name 	Description
items - [CompanyStructureItem] 	An array of elements in a company structure.
Example

{"items": [CompanyStructureItem]}

back to top
Types
CompanyStructureEntity
Union Types

CompanyTeam

Customer
Example

CompanyTeam

back to top
Types
CompanyStructureItem
Description

Defines an individual node in the company structure.
Fields
Field Name 	Description
entity - CompanyStructureEntity 	A union of CompanyTeam and Customer objects.
id - ID! 	The unique ID for a CompanyStructureItem object.
parent_id - ID 	The ID of the parent item in the company hierarchy.
Example

{
  "entity": CompanyTeam,
  "id": 4,
  "parent_id": "4"
}

back to top
Types
CompanyStructureUpdateInput
Description

Defines the input schema for updating the company structure.
Fields
Input Field 	Description
parent_tree_id - ID! 	The ID of a company that will be the new parent.
tree_id - ID! 	The ID of the company team that is being moved to another parent.
Example

{"parent_tree_id": "4", "tree_id": 4}

back to top
Types
CompanyTeam
Description

Describes a company team.
Fields
Field Name 	Description
description - String 	An optional description of the team.
id - ID! 	The unique ID for a CompanyTeam object.
name - String 	The display name of the team.
structure_id - ID! 	ID of the company structure
Example

{
  "description": "abc123",
  "id": "4",
  "name": "xyz789",
  "structure_id": 4
}

back to top
Types
CompanyTeamCreateInput
Description

Defines the input schema for creating a company team.
Fields
Input Field 	Description
description - String 	An optional description of the team.
name - String! 	The display name of the team.
target_id - ID 	The ID of a node within a company's structure. This ID will be the parent of the created team.
Example

{
  "description": "abc123",
  "name": "abc123",
  "target_id": "4"
}

back to top
Types
CompanyTeamUpdateInput
Description

Defines the input schema for updating a company team.
Fields
Input Field 	Description
description - String 	An optional description of the team.
id - ID! 	The unique ID of the CompanyTeam object to update.
name - String 	The display name of the team.
Example

{
  "description": "abc123",
  "id": "4",
  "name": "abc123"
}

back to top
Types
CompanyUpdateInput
Description

Defines the input schema for updating a company.
Fields
Input Field 	Description
company_email - String 	The email address of the company contact.
company_name - String 	The name of the company to update.
legal_address - CompanyLegalAddressUpdateInput 	The legal address data of the company.
legal_name - String 	The full legal name of the company.
reseller_id - String 	The resale number that is assigned to the company for tax reporting purposes.
vat_tax_id - String 	The value-added tax number that is assigned to the company by some jurisdictions for tax reporting purposes.
Example

{
  "company_email": "abc123",
  "company_name": "abc123",
  "legal_address": CompanyLegalAddressUpdateInput,
  "legal_name": "abc123",
  "reseller_id": "abc123",
  "vat_tax_id": "xyz789"
}

back to top
Types
CompanyUserCreateInput
Description

Defines the input schema for creating a company user.
Fields
Input Field 	Description
email - String! 	The company user's email address
firstname - String! 	The company user's first name.
job_title - String! 	The company user's job title or function.
lastname - String! 	The company user's last name.
role_id - ID! 	The unique ID for a CompanyRole object.
status - CompanyUserStatusEnum! 	Indicates whether the company user is ACTIVE or INACTIVE.
target_id - ID 	The ID of a node within a company's structure. This ID will be the parent of the created company user.
telephone - String! 	The company user's phone number.
Example

{
  "email": "xyz789",
  "firstname": "abc123",
  "job_title": "xyz789",
  "lastname": "xyz789",
  "role_id": "4",
  "status": "ACTIVE",
  "target_id": "4",
  "telephone": "xyz789"
}

back to top
Types
CompanyUserStatusEnum
Description

Defines the list of company user status values.
Values
Enum Value 	Description

ACTIVE
	Only active users.

INACTIVE
	Only inactive users.
Example

"ACTIVE"

back to top
Types
CompanyUserUpdateInput
Description

Defines the input schema for updating a company user.
Fields
Input Field 	Description
email - String 	The company user's email address.
firstname - String 	The company user's first name.
id - ID! 	The unique ID of a Customer object.
job_title - String 	The company user's job title or function.
lastname - String 	The company user's last name.
role_id - ID 	The unique ID for a CompanyRole object.
status - CompanyUserStatusEnum 	Indicates whether the company user is ACTIVE or INACTIVE.
telephone - String 	The company user's phone number.
Example

{
  "email": "xyz789",
  "firstname": "abc123",
  "id": "4",
  "job_title": "abc123",
  "lastname": "xyz789",
  "role_id": "4",
  "status": "ACTIVE",
  "telephone": "xyz789"
}

back to top
Types
CompanyUsers
Description

Contains details about company users.
Fields
Field Name 	Description
items - [Customer]! 	An array of CompanyUser objects that match the specified filter criteria.
page_info - SearchResultPageInfo 	Pagination metadata.
total_count - Int! 	The number of objects returned.
Example

{
  "items": [Customer],
  "page_info": SearchResultPageInfo,
  "total_count": 987
}

back to top
Types
CompanyUsersFilterInput
Description

Defines the filter for returning a list of company users.
Fields
Input Field 	Description
status - CompanyUserStatusEnum 	The activity status to filter on.
Example

{"status": "ACTIVE"}

back to top
Types
ComparableAttribute
Description

Contains an attribute code that is used for product comparisons.
Fields
Field Name 	Description
code - String! 	An attribute code that is enabled for product comparisons.
label - String! 	The label of the attribute code.
Example

{
  "code": "abc123",
  "label": "abc123"
}

back to top
Types
ComparableItem
Description

Defines an object used to iterate through items for product comparisons.
Fields
Field Name 	Description
attributes - [ProductAttribute]! 	An array of product attributes that can be used to compare products.
product - ProductInterface! 	Details about a product in a compare list.
uid - ID! 	The unique ID of an item in a compare list.
Example

{
  "attributes": [ProductAttribute],
  "product": ProductInterface,
  "uid": 4
}

back to top
Types
CompareList
Description

Contains iterable information such as the array of items, the count, and attributes that represent the compare list.
Fields
Field Name 	Description
attributes - [ComparableAttribute] 	An array of attributes that can be used for comparing products.
item_count - Int! 	The number of items in the compare list.
items - [ComparableItem] 	An array of products to compare.
uid - ID! 	The unique ID assigned to the compare list.
Example

{
  "attributes": [ComparableAttribute],
  "item_count": 123,
  "items": [ComparableItem],
  "uid": 4
}

back to top
Types
ComplexTextValue
Fields
Field Name 	Description
html - String! 	Text that can contain HTML tags.
Example

{"html": "xyz789"}

back to top
Types
ConfigurableAttributeOption
Description

Contains details about a configurable product attribute option.
Fields
Field Name 	Description
code - String 	The ID assigned to the attribute.
label - String 	A string that describes the configurable attribute option.
uid - ID! 	The unique ID for a ConfigurableAttributeOption object.
value_index - Int 	A unique index number assigned to the configurable product option.
Example

{
  "code": "abc123",
  "label": "xyz789",
  "uid": 4,
  "value_index": 987
}

back to top
Types
ConfigurableCartItem
Description

An implementation for configurable product cart items.
Fields
Field Name 	Description
available_gift_wrapping - [GiftWrapping]! 	The list of available gift wrapping options for the cart item.
configurable_options - [SelectedConfigurableOption]! 	An array containing the configuranle options the shopper selected.
configured_variant - ProductInterface! 	Product details of the cart item.
customizable_options - [SelectedCustomizableOption]! 	An array containing the customizable options the shopper selected.
discount - [Discount] 	Contains discount for quote line item.
errors - [CartItemError] 	An array of errors encountered while loading the cart item
gift_message - GiftMessage 	The entered gift message for the cart item
gift_wrapping - GiftWrapping 	The selected gift wrapping for the cart item.
id - String! 	Use uid instead. Deprecated
is_available - Boolean! 	True if requested quantity is less than available stock, false otherwise.
max_qty - Float 	Line item max qty in quote template
min_qty - Float 	Line item min qty in quote template
not_available_message - String 	Message to display when the product is not available with this selected option.
note_from_buyer - [ItemNote] 	The buyer's quote line item note.
note_from_seller - [ItemNote] 	The seller's quote line item note.
prices - CartItemPrices 	Contains details about the price of the item, including taxes and discounts.
product - ProductInterface! 	Details about an item in the cart.
quantity - Float! 	The quantity of this item in the cart.
uid - ID! 	The unique ID for a CartItemInterface object.
Example

{
  "available_gift_wrapping": [GiftWrapping],
  "configurable_options": [SelectedConfigurableOption],
  "configured_variant": ProductInterface,
  "customizable_options": [SelectedCustomizableOption],
  "discount": [Discount],
  "errors": [CartItemError],
  "gift_message": GiftMessage,
  "gift_wrapping": GiftWrapping,
  "id": "xyz789",
  "is_available": false,
  "max_qty": 987.65,
  "min_qty": 987.65,
  "not_available_message": "abc123",
  "note_from_buyer": [ItemNote],
  "note_from_seller": [ItemNote],
  "prices": CartItemPrices,
  "product": ProductInterface,
  "quantity": 987.65,
  "uid": 4
}

back to top
Types
ConfigurableOptionAvailableForSelection
Description

Describes configurable options that have been selected and can be selected as a result of the previous selections.
Fields
Field Name 	Description
attribute_code - String! 	An attribute code that uniquely identifies a configurable option.
option_value_uids - [ID]! 	An array of selectable option value IDs.
Example

{
  "attribute_code": "abc123",
  "option_value_uids": [4]
}

back to top
Types
ConfigurableOrderItem
Fields
Field Name 	Description
discounts - [Discount] 	The final discount information for the product.
eligible_for_return - Boolean 	Indicates whether the order item is eligible to be in a return request.
entered_options - [OrderItemOption] 	The entered option for the base product, such as a logo or image.
gift_message - GiftMessage 	The selected gift message for the order item
gift_wrapping - GiftWrapping 	The selected gift wrapping for the order item.
id - ID! 	The unique ID for an OrderItemInterface object.
parent_sku - String 	The SKU of parent product.
prices - OrderItemPrices 	Contains details about the price of the item, including taxes and discounts.
product - ProductInterface 	The ProductInterface object, which contains details about the base product
product_name - String 	The name of the base product.
product_sale_price - Money! 	The sale price of the base product, including selected options.
product_sku - String! 	The SKU of the base product.
product_type - String 	The type of product, such as simple, configurable, etc.
product_url_key - String 	URL key of the base product.
quantity_canceled - Float 	The number of canceled items.
quantity_invoiced - Float 	The number of invoiced items.
quantity_ordered - Float 	The number of units ordered for this item.
quantity_refunded - Float 	The number of refunded items.
quantity_return_requested - Float 	The requested return quantity of the item.
quantity_returned - Float 	The number of returned items.
quantity_shipped - Float 	The number of shipped items.
selected_options - [OrderItemOption] 	The selected options for the base product, such as color or size.
status - String 	The status of the order item.
Example

{
  "discounts": [Discount],
  "eligible_for_return": false,
  "entered_options": [OrderItemOption],
  "gift_message": GiftMessage,
  "gift_wrapping": GiftWrapping,
  "id": "4",
  "parent_sku": "xyz789",
  "prices": OrderItemPrices,
  "product": ProductInterface,
  "product_name": "abc123",
  "product_sale_price": Money,
  "product_sku": "xyz789",
  "product_type": "xyz789",
  "product_url_key": "abc123",
  "quantity_canceled": 987.65,
  "quantity_invoiced": 987.65,
  "quantity_ordered": 123.45,
  "quantity_refunded": 987.65,
  "quantity_return_requested": 987.65,
  "quantity_returned": 987.65,
  "quantity_shipped": 123.45,
  "selected_options": [OrderItemOption],
  "status": "abc123"
}

back to top
Types
ConfigurableProduct
Description

Defines basic features of a configurable product and its simple product variants.
Fields
Field Name 	Description
activity - String 	Use the custom_attributes field instead. Deprecated
attribute_set_id - Int 	The attribute set assigned to the product. The field should not be used on the storefront. Deprecated
canonical_url - String 	The relative canonical URL. This value is returned only if the system setting 'Use Canonical Link Meta Tag For Products' is enabled.
categories - [CategoryInterface] 	The categories assigned to a product.
category_gear - String 	Use the custom_attributes field instead. Deprecated
climate - String 	Use the custom_attributes field instead. Deprecated
collar - String 	Use the custom_attributes field instead. Deprecated
color - Int 	Use the custom_attributes field instead. Deprecated
configurable_options - [ConfigurableProductOptions] 	An array of options for the configurable product.
configurable_product_options_selection - ConfigurableProductOptionsSelection 	An array of media gallery items and other details about selected configurable product options as well as details about remaining selectable options.
country_of_manufacture - String 	The product's country of origin.
created_at - String 	Timestamp indicating when the product was created. The field should not be used on the storefront. Deprecated
crosssell_products - [ProductInterface] 	An array of cross-sell products.
custom_attributesV2 - ProductCustomAttributes 	Product custom attributes.
description - ComplexTextValue 	Detailed information about the product. The value can include simple HTML tags.
eco_collection - Int 	Use the custom_attributes field instead. Deprecated
erin_recommends - Int 	Use the custom_attributes field instead. Deprecated
features_bags - String 	Use the custom_attributes field instead. Deprecated
format - Int 	Use the custom_attributes field instead. Deprecated
gender - String 	Use the custom_attributes field instead. Deprecated
gift_message_available - Boolean! 	Returns a value indicating gift message availability for the product.
gift_wrapping_available - Boolean! 	Returns a value indicating gift wrapping availability for the product.
gift_wrapping_price - Money 	Returns value and currency indicating gift wrapping price for the product.
id - Int 	The ID number assigned to the product. Use the uid field instead. Deprecated
image - ProductImage 	The relative path to the main image on the product page.
is_returnable - String 	Indicates whether the product can be returned.
manufacturer - Int 	A number representing the product's manufacturer. Use the custom_attributes field instead. Deprecated
material - String 	Use the custom_attributes field instead. Deprecated
max_sale_qty - Float 	Maximum Qty Allowed in Shopping Cart
media_gallery - [MediaGalleryInterface] 	An array of media gallery objects.
media_gallery_entries - [MediaGalleryEntry] 	An array of MediaGalleryEntry objects. Use media_gallery instead. Deprecated
meta_description - String 	A brief overview of the product for search results listings, maximum 255 characters.
meta_keyword - String 	A comma-separated list of keywords that are visible only to search engines.
meta_title - String 	A string that is displayed in the title bar and tab of the browser and in search results lists.
min_sale_qty - Float 	Minimum Qty Allowed in Shopping Cart
name - String 	The product name. Customers use this name to identify the product.
new - Int 	Use the custom_attributes field instead. Deprecated
new_from_date - String 	The beginning date for new product listings, and determines if the product is featured as a new product.
new_to_date - String 	The end date for new product listings.
only_x_left_in_stock - Float 	Product stock only x left count
options - [CustomizableOptionInterface] 	An array of options for a customizable product.
options_container - String 	If the product has multiple options, determines where they appear on the product page.
pattern - String 	Use the custom_attributes field instead. Deprecated
performance_fabric - Int 	Use the custom_attributes field instead. Deprecated
price - ProductPrices 	Indicates the price of an item. Use price_range for product price information. Deprecated
price_range - PriceRange! 	The range of prices for the product
price_tiers - [TierPrice] 	An array of TierPrice objects.
product_links - [ProductLinksInterface] 	An array of ProductLinks objects.
purpose - Int 	Use the custom_attributes field instead. Deprecated
quantity - Float 	Amount of available stock
rating_summary - Float! 	The average of all the ratings given to the product.
redirect_code - Int! 	Contains 0 when there is no redirect error. A value of 301 indicates the URL of the requested resource has been changed permanently, while a value of 302 indicates a temporary redirect.
related_products - [ProductInterface] 	An array of related products.
relative_url - String 	The internal relative URL. If the specified URL is a redirect, the query returns the redirected URL, not the original.
review_count - Int! 	The total count of all the reviews given to the product.
reviews - ProductReviews! 	The list of products reviews.
rules - [CatalogRule] 	Provides applied catalog rules in the current active cart
sale - Int 	Use the custom_attributes field instead. Deprecated
short_description - ComplexTextValue 	A short description of the product. Its use depends on the theme.
size - Int 	Use the custom_attributes field instead. Deprecated
sku - String 	A number or code assigned to a product to identify the product, options, price, and manufacturer.
sleeve - String 	Use the custom_attributes field instead. Deprecated
small_image - ProductImage 	The relative path to the small image, which is used on catalog pages.
special_from_date - String 	The beginning date that a product has a special price. The field should not be used on the storefront. Deprecated
special_price - Float 	The discounted price of the product.
special_to_date - String 	The end date for a product with a special price.
staged - Boolean! 	Indicates whether the product is staged for a future campaign.
stock_status - ProductStockStatus 	Stock status of the product
strap_bags - String 	Use the custom_attributes field instead. Deprecated
style_bags - String 	Use the custom_attributes field instead. Deprecated
style_bottom - String 	Use the custom_attributes field instead. Deprecated
style_general - String 	Use the custom_attributes field instead. Deprecated
swatch_image - String 	The file name of a swatch image.
thumbnail - ProductImage 	The relative path to the product's thumbnail image.
tier_price - Float 	The price when tier pricing is in effect and the items purchased threshold has been reached. Use price_tiers for product tier price information. Deprecated
tier_prices - [ProductTierPrices] 	An array of ProductTierPrices objects. Use price_tiers for product tier price information. Deprecated
type - UrlRewriteEntityTypeEnum 	One of PRODUCT, CATEGORY, or CMS_PAGE.
type_id - String 	One of simple, virtual, bundle, downloadable, grouped, or configurable. Use __typename instead. Deprecated
uid - ID! 	The unique ID for a ProductInterface object.
updated_at - String 	Timestamp indicating when the product was updated. The field should not be used on the storefront. Deprecated
upsell_products - [ProductInterface] 	An array of up-sell products.
url_key - String 	The part of the URL that identifies the product
url_path - String 	Use product's canonical_url or url rewrites instead Deprecated
url_rewrites - [UrlRewrite] 	URL rewrites list
url_suffix - String 	The part of the product URL that is appended after the url key
variants - [ConfigurableVariant] 	An array of simple product variants.
websites - [Website] 	An array of websites in which the product is available. The field should not be used on the storefront. Deprecated
weight - Float 	The weight of the item, in units defined by the store.
Example

{
  "activity": "abc123",
  "attribute_set_id": 987,
  "canonical_url": "abc123",
  "categories": [CategoryInterface],
  "category_gear": "xyz789",
  "climate": "abc123",
  "collar": "xyz789",
  "color": 987,
  "configurable_options": [ConfigurableProductOptions],
  "configurable_product_options_selection": ConfigurableProductOptionsSelection,
  "country_of_manufacture": "abc123",
  "created_at": "abc123",
  "crosssell_products": [ProductInterface],
  "custom_attributesV2": ProductCustomAttributes,
  "description": ComplexTextValue,
  "eco_collection": 987,
  "erin_recommends": 123,
  "features_bags": "abc123",
  "format": 123,
  "gender": "abc123",
  "gift_message_available": true,
  "gift_wrapping_available": false,
  "gift_wrapping_price": Money,
  "id": 987,
  "image": ProductImage,
  "is_returnable": "xyz789",
  "manufacturer": 987,
  "material": "abc123",
  "max_sale_qty": 123.45,
  "media_gallery": [MediaGalleryInterface],
  "media_gallery_entries": [MediaGalleryEntry],
  "meta_description": "abc123",
  "meta_keyword": "abc123",
  "meta_title": "abc123",
  "min_sale_qty": 123.45,
  "name": "abc123",
  "new": 123,
  "new_from_date": "abc123",
  "new_to_date": "xyz789",
  "only_x_left_in_stock": 123.45,
  "options": [CustomizableOptionInterface],
  "options_container": "xyz789",
  "pattern": "abc123",
  "performance_fabric": 123,
  "price": ProductPrices,
  "price_range": PriceRange,
  "price_tiers": [TierPrice],
  "product_links": [ProductLinksInterface],
  "purpose": 987,
  "quantity": 123.45,
  "rating_summary": 987.65,
  "redirect_code": 123,
  "related_products": [ProductInterface],
  "relative_url": "xyz789",
  "review_count": 987,
  "reviews": ProductReviews,
  "rules": [CatalogRule],
  "sale": 987,
  "short_description": ComplexTextValue,
  "size": 987,
  "sku": "xyz789",
  "sleeve": "abc123",
  "small_image": ProductImage,
  "special_from_date": "xyz789",
  "special_price": 987.65,
  "special_to_date": "abc123",
  "staged": true,
  "stock_status": "IN_STOCK",
  "strap_bags": "abc123",
  "style_bags": "abc123",
  "style_bottom": "abc123",
  "style_general": "abc123",
  "swatch_image": "xyz789",
  "thumbnail": ProductImage,
  "tier_price": 987.65,
  "tier_prices": [ProductTierPrices],
  "type": "CMS_PAGE",
  "type_id": "abc123",
  "uid": "4",
  "updated_at": "xyz789",
  "upsell_products": [ProductInterface],
  "url_key": "xyz789",
  "url_path": "abc123",
  "url_rewrites": [UrlRewrite],
  "url_suffix": "abc123",
  "variants": [ConfigurableVariant],
  "websites": [Website],
  "weight": 123.45
}

back to top
Types
ConfigurableProductCartItemInput
Fields
Input Field 	Description
customizable_options - [CustomizableOptionInput] 	The ID and value of the option.
data - CartItemInput! 	The quantity and SKU of the configurable product.
parent_sku - String 	The SKU of the parent configurable product.
variant_sku - String
Example

{
  "customizable_options": [CustomizableOptionInput],
  "data": CartItemInput,
  "parent_sku": "abc123",
  "variant_sku": "xyz789"
}

back to top
Types
ConfigurableProductOption
Description

Contains details about configurable product options.
Fields
Field Name 	Description
attribute_code - String! 	An attribute code that uniquely identifies a configurable option.
label - String! 	The display name of the option.
uid - ID! 	The unique ID of the configurable option.
values - [ConfigurableProductOptionValue] 	An array of values that are applicable for this option.
Example

{
  "attribute_code": "abc123",
  "label": "xyz789",
  "uid": 4,
  "values": [ConfigurableProductOptionValue]
}

back to top
Types
ConfigurableProductOptionValue
Description

Defines a value for a configurable product option.
Fields
Field Name 	Description
is_available - Boolean! 	Indicates whether the product is available with this selected option.
is_use_default - Boolean! 	Indicates whether the value is the default.
label - String! 	The display name of the value.
swatch - SwatchDataInterface 	The URL assigned to the thumbnail of the swatch image.
uid - ID! 	The unique ID of the value.
Example

{
  "is_available": true,
  "is_use_default": true,
  "label": "xyz789",
  "swatch": SwatchDataInterface,
  "uid": 4
}

back to top
Types
ConfigurableProductOptions
Description

Defines configurable attributes for the specified product.
Fields
Field Name 	Description
attribute_code - String 	A string that identifies the attribute.
attribute_id - String 	The ID assigned to the attribute. Use attribute_uid instead. Deprecated
attribute_id_v2 - Int 	The ID assigned to the attribute. Use attribute_uid instead. Deprecated
attribute_uid - ID! 	The unique ID for an Attribute object.
id - Int 	The configurable option ID number assigned by the system. Use uid instead. Deprecated
label - String 	A displayed string that describes the configurable product option.
position - Int 	A number that indicates the order in which the attribute is displayed.
product_id - Int 	This is the same as a product's id field. product_id is not needed and can be obtained from its parent. Deprecated
uid - ID! 	The unique ID for a ConfigurableProductOptions object.
use_default - Boolean 	Indicates whether the option is the default.
values - [ConfigurableProductOptionsValues] 	An array that defines the value_index codes assigned to the configurable product.
Example

{
  "attribute_code": "abc123",
  "attribute_id": "xyz789",
  "attribute_id_v2": 123,
  "attribute_uid": 4,
  "id": 123,
  "label": "xyz789",
  "position": 123,
  "product_id": 987,
  "uid": 4,
  "use_default": false,
  "values": [ConfigurableProductOptionsValues]
}

back to top
Types
ConfigurableProductOptionsSelection
Description

Contains metadata corresponding to the selected configurable options.
Fields
Field Name 	Description
configurable_options - [ConfigurableProductOption] 	An array of all possible configurable options.
media_gallery - [MediaGalleryInterface] 	Product images and videos corresponding to the specified configurable options selection.
options_available_for_selection - [ConfigurableOptionAvailableForSelection] 	The configurable options available for further selection based on the current selection.
variant - SimpleProduct 	A variant represented by the specified configurable options selection. The value is expected to be null until selections are made for each configurable option.
Example

{
  "configurable_options": [ConfigurableProductOption],
  "media_gallery": [MediaGalleryInterface],
  "options_available_for_selection": [
    ConfigurableOptionAvailableForSelection
  ],
  "variant": SimpleProduct
}

back to top
Types
ConfigurableProductOptionsValues
Description

Contains the index number assigned to a configurable product option.
Fields
Field Name 	Description
default_label - String 	The label of the product on the default store.
label - String 	The label of the product.
store_label - String 	The label of the product on the current store.
swatch_data - SwatchDataInterface 	Swatch data for a configurable product option.
uid - ID 	The unique ID for a ConfigurableProductOptionsValues object.
use_default_value - Boolean 	Indicates whether to use the default_label.
value_index - Int 	A unique index number assigned to the configurable product option. Use uid instead. Deprecated
Example

{
  "default_label": "xyz789",
  "label": "xyz789",
  "store_label": "xyz789",
  "swatch_data": SwatchDataInterface,
  "uid": "4",
  "use_default_value": false,
  "value_index": 987
}

back to top
Types
ConfigurableRequisitionListItem
Description

Contains details about configurable products added to a requisition list.
Fields
Field Name 	Description
configurable_options - [SelectedConfigurableOption] 	Selected configurable options for an item in the requisition list.
customizable_options - [SelectedCustomizableOption]! 	Selected custom options for an item in the requisition list.
product - ProductInterface! 	Details about a requisition list item.
quantity - Float! 	The quantity of the product added to the requisition list.
uid - ID! 	The unique ID of an item in a requisition list.
Example

{
  "configurable_options": [SelectedConfigurableOption],
  "customizable_options": [SelectedCustomizableOption],
  "product": ProductInterface,
  "quantity": 123.45,
  "uid": 4
}

back to top
Types
ConfigurableVariant
Description

Contains all the simple product variants of a configurable product.
Fields
Field Name 	Description
attributes - [ConfigurableAttributeOption] 	An array of configurable attribute options.
product - SimpleProduct 	An array of linked simple products.
Example

{
  "attributes": [ConfigurableAttributeOption],
  "product": SimpleProduct
}

back to top
Types
ConfigurableWishlistItem
Description

A configurable product wish list item.
Fields
Field Name 	Description
added_at - String! 	The date and time the item was added to the wish list.
child_sku - String! 	The SKU of the simple product corresponding to a set of selected configurable options. Use ConfigurableWishlistItem.configured_variant.sku instead. Deprecated
configurable_options - [SelectedConfigurableOption] 	An array of selected configurable options.
configured_variant - ProductInterface 	Product details of the selected variant. The value is null if some options are not configured.
customizable_options - [SelectedCustomizableOption]! 	Custom options selected for the wish list item.
description - String 	The description of the item.
id - ID! 	The unique ID for a WishlistItemInterface object.
product - ProductInterface 	Product details of the wish list item.
quantity - Float! 	The quantity of this wish list item.
Example

{
  "added_at": "abc123",
  "child_sku": "xyz789",
  "configurable_options": [SelectedConfigurableOption],
  "configured_variant": ProductInterface,
  "customizable_options": [SelectedCustomizableOption],
  "description": "xyz789",
  "id": 4,
  "product": ProductInterface,
  "quantity": 123.45
}

back to top
Types
ConfirmCancelOrderInput
Fields
Input Field 	Description
confirmation_key - String! 	Confirmation Key to cancel the order.
order_id - ID! 	The unique ID of an Order type.
Example

{
  "confirmation_key": "xyz789",
  "order_id": "4"
}

back to top
Types
ConfirmEmailInput
Description

Contains details about a customer email address to confirm.
Fields
Input Field 	Description
confirmation_key - String! 	The key to confirm the email address.
email - String! 	The email address to be confirmed.
Example

{
  "confirmation_key": "abc123",
  "email": "abc123"
}

back to top
Types
ConfirmReturnInput
Fields
Input Field 	Description
confirmation_key - String! 	Confirmation Key to return order.
order_id - ID! 	The unique ID of an Order type.
Example

{
  "confirmation_key": "xyz789",
  "order_id": "4"
}

back to top
Types
ConfirmationStatusEnum
Description

List of account confirmation statuses.
Values
Enum Value 	Description

ACCOUNT_CONFIRMED
	Account confirmed

ACCOUNT_CONFIRMATION_NOT_REQUIRED
	Account confirmation not required
Example

"ACCOUNT_CONFIRMED"

back to top
Types
ContactUsInput
Fields
Input Field 	Description
comment - String! 	The shopper's comment to the merchant.
email - String! 	The email address of the shopper.
name - String! 	The full name of the shopper.
telephone - String 	The shopper's telephone number.
Example

{
  "comment": "xyz789",
  "email": "xyz789",
  "name": "xyz789",
  "telephone": "xyz789"
}

back to top
Types
ContactUsOutput
Description

Contains the status of the request.
Fields
Field Name 	Description
status - Boolean! 	Indicates whether the request was successful.
Example

{"status": true}

back to top
Types
CopyItemsBetweenRequisitionListsInput
Description

An input object that defines the items in a requisition list to be copied.
Fields
Input Field 	Description
requisitionListItemUids - [ID]! 	An array of IDs representing products copied from one requisition list to another.
Example

{"requisitionListItemUids": [4]}

back to top
Types
CopyItemsFromRequisitionListsOutput
Description

Output of the request to copy items to the destination requisition list.
Fields
Field Name 	Description
requisition_list - RequisitionList 	The destination requisition list after the items were copied.
Example

{"requisition_list": RequisitionList}

back to top
Types
CopyProductsBetweenWishlistsOutput
Description

Contains the source and target wish lists after copying products.
Fields
Field Name 	Description
destination_wishlist - Wishlist! 	The destination wish list containing the copied products.
source_wishlist - Wishlist! 	The wish list that the products were copied from.
user_errors - [WishListUserInputError]! 	An array of errors encountered while copying products in a wish list.
Example

{
  "destination_wishlist": Wishlist,
  "source_wishlist": Wishlist,
  "user_errors": [WishListUserInputError]
}

back to top
Types
Country
Fields
Field Name 	Description
available_regions - [Region] 	An array of regions within a particular country.
full_name_english - String 	The name of the country in English.
full_name_locale - String 	The name of the country in the current locale.
id - String 	The unique ID for a Country object.
three_letter_abbreviation - String 	The three-letter abbreviation of the country, such as USA.
two_letter_abbreviation - String 	The two-letter abbreviation of the country, such as US.
Example

{
  "available_regions": [Region],
  "full_name_english": "abc123",
  "full_name_locale": "xyz789",
  "id": "xyz789",
  "three_letter_abbreviation": "abc123",
  "two_letter_abbreviation": "xyz789"
}

back to top
Types
CountryCodeEnum
Description

The list of country codes.
Values
Enum Value 	Description

AF
	Afghanistan

AX
	Åland Islands

AL
	Albania

DZ
	Algeria

AS
	American Samoa

AD
	Andorra

AO
	Angola

AI
	Anguilla

AQ
	Antarctica

AG
	Antigua & Barbuda

AR
	Argentina

AM
	Armenia

AW
	Aruba

AU
	Australia

AT
	Austria

AZ
	Azerbaijan

BS
	Bahamas

BH
	Bahrain

BD
	Bangladesh

BB
	Barbados

BY
	Belarus

BE
	Belgium

BZ
	Belize

BJ
	Benin

BM
	Bermuda

BT
	Bhutan

BO
	Bolivia

BA
	Bosnia & Herzegovina

BW
	Botswana

BV
	Bouvet Island

BR
	Brazil

IO
	British Indian Ocean Territory

VG
	British Virgin Islands

BN
	Brunei

BG
	Bulgaria

BF
	Burkina Faso

BI
	Burundi

KH
	Cambodia

CM
	Cameroon

CA
	Canada

CV
	Cape Verde

KY
	Cayman Islands

CF
	Central African Republic

TD
	Chad

CL
	Chile

CN
	China

CX
	Christmas Island

CC
	Cocos (Keeling) Islands

CO
	Colombia

KM
	Comoros

CG
	Congo-Brazzaville

CD
	Congo-Kinshasa

CK
	Cook Islands

CR
	Costa Rica

CI
	Côte d’Ivoire

HR
	Croatia

CU
	Cuba

CY
	Cyprus

CZ
	Czech Republic

DK
	Denmark

DJ
	Djibouti

DM
	Dominica

DO
	Dominican Republic

EC
	Ecuador

EG
	Egypt

SV
	El Salvador

GQ
	Equatorial Guinea

ER
	Eritrea

EE
	Estonia

SZ
	Eswatini

ET
	Ethiopia

FK
	Falkland Islands

FO
	Faroe Islands

FJ
	Fiji

FI
	Finland

FR
	France

GF
	French Guiana

PF
	French Polynesia

TF
	French Southern Territories

GA
	Gabon

GM
	Gambia

GE
	Georgia

DE
	Germany

GH
	Ghana

GI
	Gibraltar

GR
	Greece

GL
	Greenland

GD
	Grenada

GP
	Guadeloupe

GU
	Guam

GT
	Guatemala

GG
	Guernsey

GN
	Guinea

GW
	Guinea-Bissau

GY
	Guyana

HT
	Haiti

HM
	Heard & McDonald Islands

HN
	Honduras

HK
	Hong Kong SAR China

HU
	Hungary

IS
	Iceland

IN
	India

ID
	Indonesia

IR
	Iran

IQ
	Iraq

IE
	Ireland

IM
	Isle of Man

IL
	Israel

IT
	Italy

JM
	Jamaica

JP
	Japan

JE
	Jersey

JO
	Jordan

KZ
	Kazakhstan

KE
	Kenya

KI
	Kiribati

KW
	Kuwait

KG
	Kyrgyzstan

LA
	Laos

LV
	Latvia

LB
	Lebanon

LS
	Lesotho

LR
	Liberia

LY
	Libya

LI
	Liechtenstein

LT
	Lithuania

LU
	Luxembourg

MO
	Macau SAR China

MK
	Macedonia

MG
	Madagascar

MW
	Malawi

MY
	Malaysia

MV
	Maldives

ML
	Mali

MT
	Malta

MH
	Marshall Islands

MQ
	Martinique

MR
	Mauritania

MU
	Mauritius

YT
	Mayotte

MX
	Mexico

FM
	Micronesia

MD
	Moldova

MC
	Monaco

MN
	Mongolia

ME
	Montenegro

MS
	Montserrat

MA
	Morocco

MZ
	Mozambique

MM
	Myanmar (Burma)

NA
	Namibia

NR
	Nauru

NP
	Nepal

NL
	Netherlands

AN
	Netherlands Antilles

NC
	New Caledonia

NZ
	New Zealand

NI
	Nicaragua

NE
	Niger

NG
	Nigeria

NU
	Niue

NF
	Norfolk Island

MP
	Northern Mariana Islands

KP
	North Korea

NO
	Norway

OM
	Oman

PK
	Pakistan

PW
	Palau

PS
	Palestinian Territories

PA
	Panama

PG
	Papua New Guinea

PY
	Paraguay

PE
	Peru

PH
	Philippines

PN
	Pitcairn Islands

PL
	Poland

PT
	Portugal

QA
	Qatar

RE
	Réunion

RO
	Romania

RU
	Russia

RW
	Rwanda

WS
	Samoa

SM
	San Marino

ST
	São Tomé & Príncipe

SA
	Saudi Arabia

SN
	Senegal

RS
	Serbia

SC
	Seychelles

SL
	Sierra Leone

SG
	Singapore

SK
	Slovakia

SI
	Slovenia

SB
	Solomon Islands

SO
	Somalia

ZA
	South Africa

GS
	South Georgia & South Sandwich Islands

KR
	South Korea

ES
	Spain

LK
	Sri Lanka

BL
	St. Barthélemy

SH
	St. Helena

KN
	St. Kitts & Nevis

LC
	St. Lucia

MF
	St. Martin

PM
	St. Pierre & Miquelon

VC
	St. Vincent & Grenadines

SD
	Sudan

SR
	Suriname

SJ
	Svalbard & Jan Mayen

SE
	Sweden

CH
	Switzerland

SY
	Syria

TW
	Taiwan

TJ
	Tajikistan

TZ
	Tanzania

TH
	Thailand

TL
	Timor-Leste

TG
	Togo

TK
	Tokelau

TO
	Tonga

TT
	Trinidad & Tobago

TN
	Tunisia

TR
	Turkey

TM
	Turkmenistan

TC
	Turks & Caicos Islands

TV
	Tuvalu

UG
	Uganda

UA
	Ukraine

AE
	United Arab Emirates

GB
	United Kingdom

US
	United States

UY
	Uruguay

UM
	U.S. Outlying Islands

VI
	U.S. Virgin Islands

UZ
	Uzbekistan

VU
	Vanuatu

VA
	Vatican City

VE
	Venezuela

VN
	Vietnam

WF
	Wallis & Futuna

EH
	Western Sahara

YE
	Yemen

ZM
	Zambia

ZW
	Zimbabwe
Example

"AF"

back to top
Types
CreateCompanyOutput
Description

Contains the response to the request to create a company.
Fields
Field Name 	Description
company - Company! 	The new company instance.
Example

{"company": Company}

back to top
Types
CreateCompanyRoleOutput
Description

Contains the response to the request to create a company role.
Fields
Field Name 	Description
role - CompanyRole! 	The new company role instance.
Example

{"role": CompanyRole}

back to top
Types
CreateCompanyTeamOutput
Description

Contains the response to the request to create a company team.
Fields
Field Name 	Description
team - CompanyTeam! 	The new company team instance.
Example

{"team": CompanyTeam}

back to top
Types
CreateCompanyUserOutput
Description

Contains the response to the request to create a company user.
Fields
Field Name 	Description
user - Customer! 	The new company user instance.
Example

{"user": Customer}

back to top
Types
CreateCompareListInput
Description

Contains an array of product IDs to use for creating a compare list.
Fields
Input Field 	Description
products - [ID] 	An array of product IDs to add to the compare list.
Example

{"products": ["4"]}

back to top
Types
CreateGiftRegistryInput
Description

Defines a new gift registry.
Fields
Input Field 	Description
dynamic_attributes - [GiftRegistryDynamicAttributeInput] 	Additional attributes specified as a code-value pair.
event_name - String! 	The name of the event.
gift_registry_type_uid - ID! 	The ID of the selected event type.
message - String! 	A message describing the event.
privacy_settings - GiftRegistryPrivacySettings! 	Indicates whether the registry is PRIVATE or PUBLIC.
registrants - [AddGiftRegistryRegistrantInput]! 	The list of people who receive notifications about the registry.
shipping_address - GiftRegistryShippingAddressInput 	The shipping address for all gift registry items.
status - GiftRegistryStatus! 	Indicates whether the registry is ACTIVE or INACTIVE.
Example

{
  "dynamic_attributes": [
    GiftRegistryDynamicAttributeInput
  ],
  "event_name": "xyz789",
  "gift_registry_type_uid": "4",
  "message": "xyz789",
  "privacy_settings": "PRIVATE",
  "registrants": [AddGiftRegistryRegistrantInput],
  "shipping_address": GiftRegistryShippingAddressInput,
  "status": "ACTIVE"
}

back to top
Types
CreateGiftRegistryOutput
Description

Contains the results of a request to create a gift registry.
Fields
Field Name 	Description
gift_registry - GiftRegistry 	The newly-created gift registry.
Example

{"gift_registry": GiftRegistry}

back to top
Types
CreateGuestCartInput
Fields
Input Field 	Description
cart_uid - ID 	Optional client-generated ID
Example

{"cart_uid": "4"}

back to top
Types
CreateGuestCartOutput
Fields
Field Name 	Description
cart - Cart 	The newly created cart.
Example

{"cart": Cart}

back to top
Types
CreatePayflowProTokenOutput
Description

Contains the secure information used to authorize transaction. Applies to Payflow Pro and Payments Pro payment methods.
Fields
Field Name 	Description
response_message - String! 	The RESPMSG returned by PayPal. If the result is 0, then response_message is Approved.
result - Int! 	A non-zero value if any errors occurred.
result_code - Int! 	The RESULT returned by PayPal. A value of 0 indicates the transaction was approved.
secure_token - String! 	A secure token generated by PayPal.
secure_token_id - String! 	A secure token ID generated by PayPal.
Example

{
  "response_message": "xyz789",
  "result": 123,
  "result_code": 123,
  "secure_token": "abc123",
  "secure_token_id": "abc123"
}

back to top
Types
CreatePaymentOrderInput
Description

Contains payment order details that are used while processing the payment order
Fields
Input Field 	Description
cartId - String! 	The customer cart ID
location - PaymentLocation! 	Defines the origin location for that payment request
methodCode - String! 	The code for the payment method used in the order
paymentSource - String! 	The identifiable payment source for the payment method
vaultIntent - Boolean 	Indicates whether the payment information should be vaulted
Example

{
  "cartId": "xyz789",
  "location": "PRODUCT_DETAIL",
  "methodCode": "abc123",
  "paymentSource": "xyz789",
  "vaultIntent": false
}

back to top
Types
CreatePaymentOrderOutput
Description

Contains payment order details that are used while processing the payment order
Fields
Field Name 	Description
amount - Float 	The amount of the payment order
currency_code - String 	The currency of the payment order
id - String 	PayPal order ID
mp_order_id - String 	The order ID generated by Payment Services
status - String 	The status of the payment order
Example

{
  "amount": 123.45,
  "currency_code": "abc123",
  "id": "abc123",
  "mp_order_id": "xyz789",
  "status": "xyz789"
}

back to top
Types
CreateProductReviewInput
Description

Defines a new product review.
Fields
Input Field 	Description
nickname - String! 	The customer's nickname. Defaults to the customer name, if logged in.
ratings - [ProductReviewRatingInput]! 	The ratings details by category. For example, Price: 5 stars, Quality: 4 stars, etc.
sku - String! 	The SKU of the reviewed product.
summary - String! 	The summary (title) of the review.
text - String! 	The review text.
Example

{
  "nickname": "abc123",
  "ratings": [ProductReviewRatingInput],
  "sku": "xyz789",
  "summary": "abc123",
  "text": "xyz789"
}

back to top
Types
CreateProductReviewOutput
Description

Contains the completed product review.
Fields
Field Name 	Description
review - ProductReview! 	Product review details.
Example

{"review": ProductReview}

back to top
Types
CreatePurchaseOrderApprovalRuleConditionAmountInput
Description

Specifies the amount and currency to evaluate.
Fields
Input Field 	Description
currency - CurrencyEnum! 	Purchase order approval rule condition amount currency.
value - Float! 	Purchase order approval rule condition amount value.
Example

{"currency": "AFN", "value": 123.45}

back to top
Types
CreatePurchaseOrderApprovalRuleConditionInput
Description

Defines a set of conditions that apply to a rule.
Fields
Input Field 	Description
amount - CreatePurchaseOrderApprovalRuleConditionAmountInput 	The amount to be compared in a purchase order approval rule. This field is mutually exclusive with condition quantity.
attribute - PurchaseOrderApprovalRuleType! 	The type of approval rule.
operator - PurchaseOrderApprovalRuleConditionOperator! 	Defines how to evaluate an amount or quantity in a purchase order.
quantity - Int 	The quantity to be compared in a purchase order approval rule. This field is mutually exclusive with condition amount.
Example

{
  "amount": CreatePurchaseOrderApprovalRuleConditionAmountInput,
  "attribute": "GRAND_TOTAL",
  "operator": "MORE_THAN",
  "quantity": 123
}

back to top
Types
CreateRequisitionListInput
Description

An input object that identifies and describes a new requisition list.
Fields
Input Field 	Description
description - String 	An optional description of the requisition list.
name - String! 	The name assigned to the requisition list.
Example

{
  "description": "xyz789",
  "name": "abc123"
}

back to top
Types
CreateRequisitionListOutput
Description

Output of the request to create a requisition list.
Fields
Field Name 	Description
requisition_list - RequisitionList 	The created requisition list.
Example

{"requisition_list": RequisitionList}

back to top
Types
CreateVaultCardPaymentTokenInput
Description

Describe the variables needed to create a vault payment token
Fields
Input Field 	Description
card_description - String 	Description of the vaulted card
setup_token_id - String! 	The setup token obtained by the createVaultCardSetupToken endpoint
Example

{
  "card_description": "xyz789",
  "setup_token_id": "abc123"
}

back to top
Types
CreateVaultCardPaymentTokenOutput
Description

The vault token id and information about the payment source
Fields
Field Name 	Description
payment_source - PaymentSourceOutput! 	The payment source information
vault_token_id - String! 	The vault payment token information
Example

{
  "payment_source": PaymentSourceOutput,
  "vault_token_id": "abc123"
}

back to top
Types
CreateVaultCardSetupTokenInput
Description

Describe the variables needed to create a vault card setup token
Fields
Input Field 	Description
setup_token - VaultSetupTokenInput! 	The setup token information
three_ds_mode - ThreeDSMode 	The 3DS mode
Example

{
  "setup_token": VaultSetupTokenInput,
  "three_ds_mode": "OFF"
}

back to top
Types
CreateVaultCardSetupTokenOutput
Description

The setup token id information
Fields
Field Name 	Description
setup_token - String! 	The setup token id
Example

{"setup_token": "abc123"}

back to top
Types
CreateWishlistInput
Description

Defines the name and visibility of a new wish list.
Fields
Input Field 	Description
name - String! 	The name of the new wish list.
visibility - WishlistVisibilityEnum! 	Indicates whether the wish list is public or private.
Example

{"name": "abc123", "visibility": "PUBLIC"}

back to top
Types
CreateWishlistOutput
Description

Contains the wish list.
Fields
Field Name 	Description
wishlist - Wishlist! 	The newly-created wish list
Example

{"wishlist": Wishlist}

back to top
Types
CreditCardDetailsInput
Description

Required fields for Payflow Pro and Payments Pro credit card payments.
Fields
Input Field 	Description
cc_exp_month - Int! 	The credit card expiration month.
cc_exp_year - Int! 	The credit card expiration year.
cc_last_4 - Int! 	The last 4 digits of the credit card.
cc_type - String! 	The credit card type.
Example

{
  "cc_exp_month": 123,
  "cc_exp_year": 123,
  "cc_last_4": 123,
  "cc_type": "abc123"
}

back to top
Types
CreditMemo
Description

Contains credit memo details.
Fields
Field Name 	Description
comments - [SalesCommentItem] 	Comments on the credit memo.
id - ID! 	The unique ID for a CreditMemo object.
items - [CreditMemoItemInterface] 	An array containing details about refunded items.
number - String! 	The sequential credit memo number.
total - CreditMemoTotal 	Details about the total refunded amount.
Example

{
  "comments": [SalesCommentItem],
  "id": "4",
  "items": [CreditMemoItemInterface],
  "number": "xyz789",
  "total": CreditMemoTotal
}

back to top
Types
CreditMemoItem
Fields
Field Name 	Description
discounts - [Discount] 	Details about the final discount amount for the base product, including discounts on options.
id - ID! 	The unique ID for a CreditMemoItemInterface object.
order_item - OrderItemInterface 	The order item the credit memo is applied to.
product_name - String 	The name of the base product.
product_sale_price - Money! 	The sale price for the base product, including selected options.
product_sku - String! 	The SKU of the base product.
quantity_refunded - Float 	The number of refunded items.
Example

{
  "discounts": [Discount],
  "id": 4,
  "order_item": OrderItemInterface,
  "product_name": "abc123",
  "product_sale_price": Money,
  "product_sku": "xyz789",
  "quantity_refunded": 987.65
}

back to top
Types
CreditMemoItemInterface
Description

Credit memo item details.
Fields
Field Name 	Description
discounts - [Discount] 	Details about the final discount amount for the base product, including discounts on options.
id - ID! 	The unique ID for a CreditMemoItemInterface object.
order_item - OrderItemInterface 	The order item the credit memo is applied to.
product_name - String 	The name of the base product.
product_sale_price - Money! 	The sale price for the base product, including selected options.
product_sku - String! 	The SKU of the base product.
quantity_refunded - Float 	The number of refunded items.
Possible Types
CreditMemoItemInterface Types

BundleCreditMemoItem

DownloadableCreditMemoItem

GiftCardCreditMemoItem

CreditMemoItem
Example

{
  "discounts": [Discount],
  "id": 4,
  "order_item": OrderItemInterface,
  "product_name": "abc123",
  "product_sale_price": Money,
  "product_sku": "xyz789",
  "quantity_refunded": 987.65
}

back to top
Types
CreditMemoTotal
Description

Contains credit memo price details.
Fields
Field Name 	Description
adjustment - Money! 	An adjustment manually applied to the order.
base_grand_total - Money! 	The final base grand total amount in the base currency.
discounts - [Discount] 	The applied discounts to the credit memo.
grand_total - Money! 	The final total amount, including shipping, discounts, and taxes.
shipping_handling - ShippingHandling 	Details about the shipping and handling costs for the credit memo.
subtotal - Money! 	The subtotal of the invoice, excluding shipping, discounts, and taxes.
taxes - [TaxItem] 	The credit memo tax details.
total_shipping - Money! 	The shipping amount for the credit memo.
total_tax - Money! 	The amount of tax applied to the credit memo.
Example

{
  "adjustment": Money,
  "base_grand_total": Money,
  "discounts": [Discount],
  "grand_total": Money,
  "shipping_handling": ShippingHandling,
  "subtotal": Money,
  "taxes": [TaxItem],
  "total_shipping": Money,
  "total_tax": Money
}

back to top
Types
Currency
Fields
Field Name 	Description
available_currency_codes - [String] 	An array of three-letter currency codes accepted by the store, such as USD and EUR.
base_currency_code - String 	The base currency set for the store, such as USD.
base_currency_symbol - String 	The symbol for the specified base currency, such as $.
default_display_currecy_code - String 	Symbol was missed. Use default_display_currency_code. Deprecated
default_display_currecy_symbol - String 	Symbol was missed. Use default_display_currency_code. Deprecated
default_display_currency_code - String 	The currency that is displayed by default, such as USD.
default_display_currency_symbol - String 	The currency symbol that is displayed by default, such as $.
exchange_rates - [ExchangeRate] 	An array of exchange rates for currencies defined in the store.
Example

{
  "available_currency_codes": ["abc123"],
  "base_currency_code": "abc123",
  "base_currency_symbol": "xyz789",
  "default_display_currecy_code": "abc123",
  "default_display_currecy_symbol": "xyz789",
  "default_display_currency_code": "abc123",
  "default_display_currency_symbol": "xyz789",
  "exchange_rates": [ExchangeRate]
}

back to top
Types
CurrencyEnum
Description

The list of available currency codes.
Values
Enum Value 	Description

AFN


ALL


AZN


DZD


AOA


ARS


AMD


AWG


AUD


BSD


BHD


BDT


BBD


BYN


BZD


BMD


BTN


BOB


BAM


BWP


BRL


GBP


BND


BGN


BUK


BIF


KHR


CAD


CVE


CZK


KYD


GQE


CLP


CNY


COP


KMF


CDF


CRC


HRK


CUP


DKK


DJF


DOP


XCD


EGP


SVC


ERN


EEK


ETB


EUR


FKP


FJD


GMD


GEK


GEL


GHS


GIP


GTQ


GNF


GYD


HTG


HNL


HKD


HUF


ISK


INR


IDR


IRR


IQD


ILS


JMD


JPY


JOD


KZT


KES


KWD


KGS


LAK


LVL


LBP


LSL


LRD


LYD


LTL


MOP


MKD


MGA


MWK


MYR


MVR


LSM


MRO


MUR


MXN


MDL


MNT


MAD


MZN


MMK


NAD


NPR


ANG


YTL


NZD


NIC


NGN


KPW


NOK


OMR


PKR


PAB


PGK


PYG


PEN


PHP


PLN


QAR


RHD


RON


RUB


RWF


SHP


STD


SAR


RSD


SCR


SLL


SGD


SKK


SBD


SOS


ZAR


KRW


LKR


SDG


SRD


SZL


SEK


CHF


SYP


TWD


TJS


TZS


THB


TOP


TTD


TND


TMM


USD


UGX


UAH


AED


UYU


UZS


VUV


VEB


VEF


VND


CHE


CHW


XOF


WST


YER


ZMK


ZWD


TRY


AZM


ROL


TRL


XPF

Example

"AFN"

back to top
Types
CustomAttributeMetadata
Description

Defines an array of custom attributes.
Fields
Field Name 	Description
items - [Attribute] 	An array of attributes.
Example

{"items": [Attribute]}

back to top
Types
CustomAttributeMetadataInterface
Description

An interface containing fields that define the EAV attribute.
Fields
Field Name 	Description
code - ID! 	The unique identifier for an attribute code. This value should be in lowercase letters without spaces.
default_value - String 	Default attribute value.
entity_type - AttributeEntityTypeEnum! 	The type of entity that defines the attribute.
frontend_class - String 	The frontend class of the attribute.
frontend_input - AttributeFrontendInputEnum 	The frontend input type of the attribute.
is_required - Boolean! 	Whether the attribute value is required.
is_unique - Boolean! 	Whether the attribute value must be unique.
label - String 	The label assigned to the attribute.
options - [CustomAttributeOptionInterface]! 	Attribute options.
Possible Types
CustomAttributeMetadataInterface Types

AttributeMetadata

CatalogAttributeMetadata

CustomerAttributeMetadata

ReturnItemAttributeMetadata
Example

{
  "code": 4,
  "default_value": "abc123",
  "entity_type": "CATALOG_PRODUCT",
  "frontend_class": "xyz789",
  "frontend_input": "BOOLEAN",
  "is_required": false,
  "is_unique": true,
  "label": "abc123",
  "options": [CustomAttributeOptionInterface]
}

back to top
Types
CustomAttributeOptionInterface
Fields
Field Name 	Description
is_default - Boolean! 	Is the option value default.
label - String! 	The label assigned to the attribute option.
value - String! 	The attribute option value.
Possible Types
CustomAttributeOptionInterface Types

AttributeOptionMetadata
Example

{
  "is_default": false,
  "label": "xyz789",
  "value": "xyz789"
}

back to top
Types
Customer
Description

Defines the customer name, addresses, and other details.
Fields
Field Name 	Description
addresses - [CustomerAddress] 	An array containing the customer's shipping and billing addresses.
addressesV2 - CustomerAddresses 	An array containing the customer's shipping and billing addresses.
allow_remote_shopping_assistance - Boolean! 	Indicates whether the customer has enabled remote shopping assistance.
companies - UserCompaniesOutput! 	An object that contains a list of companies user is assigned to.
compare_list - CompareList 	The contents of the customer's compare list.
confirmation_status - ConfirmationStatusEnum! 	The customer's confirmation status.
created_at - String 	Timestamp indicating when the account was created.
custom_attributes - [AttributeValueInterface] 	Customer's custom attributes.
date_of_birth - String 	The customer's date of birth.
default_billing - String 	The ID assigned to the billing address.
default_shipping - String 	The ID assigned to the shipping address.
dob - String 	The customer's date of birth. Use date_of_birth instead. Deprecated
email - String 	The customer's email address. Required.
firstname - String 	The customer's first name.
gender - Int 	The customer's gender (Male - 1, Female - 2).
gift_registries - [GiftRegistry] 	Details about all of the customer's gift registries.
gift_registry - GiftRegistry 	Details about a specific gift registry.
group - CustomerGroup 	Name of the customer group assigned to the customer
group_id - Int 	Customer group should not be exposed in the storefront scenarios. Deprecated
id - Int 	The ID assigned to the customer. id is not needed as part of Customer, because on the server side, it can be identified based on the customer token used for authentication. There is no need to know customer ID on the client side. Deprecated
is_subscribed - Boolean 	Indicates whether the customer is subscribed to the company's newsletter.
job_title - String 	The job title of a company user.
lastname - String 	The customer's family name.
middlename - String 	The customer's middle name.
orders - CustomerOrders
prefix - String 	An honorific, such as Dr., Mr., or Mrs.
purchase_order - PurchaseOrder 	Purchase order details.
purchase_order_approval_rule - PurchaseOrderApprovalRule 	Details about a single purchase order approval rule.
purchase_order_approval_rule_metadata - PurchaseOrderApprovalRuleMetadata 	Purchase order approval rule metadata that can be used for rule edit form rendering.
purchase_order_approval_rules - PurchaseOrderApprovalRules 	A list of purchase order approval rules visible to the customer.
purchase_orders - PurchaseOrders 	A list of purchase orders visible to the customer.
purchase_orders_enabled - Boolean! 	Indicates whether purchase order functionality is enabled for the current customer. Global and company-level settings are factored into the result.
requisition_lists - RequisitionLists 	An object that contains the customer's requisition lists.
return - Return 	Details about the specified return request from the unique ID for a Return object.
returns - Returns 	Information about the customer's return requests.
reviews - ProductReviews! 	Contains the customer's product reviews.
reward_points - RewardPoints 	Customer reward points details.
role - CompanyRole 	The role name and permissions assigned to the company user.
segments - [CustomerSegment] 	Customer segments associated with the current customer
status - CompanyUserStatusEnum 	Indicates whether the company user is ACTIVE or INACTIVE.
store_credit - CustomerStoreCredit 	Store credit information applied for the logged in customer.
structure_id - ID! 	ID of the company structure
suffix - String 	A value such as Sr., Jr., or III.
taxvat - String 	The customer's Value-added tax (VAT) number (for corporate customers).
team - CompanyTeam 	The team the company user is assigned to.
telephone - String 	The phone number of the company user.
wishlist - Wishlist! 	Return a customer's wish lists. Use Customer.wishlists or Customer.wishlist_v2 instead. Deprecated
wishlist_v2 - Wishlist 	Retrieve the wish list identified by the unique ID for a Wishlist object.
wishlists - [Wishlist]! 	An array of wishlists. In Magento Open Source, customers are limited to one wish list. The number of wish lists is configurable for Adobe Commerce.
Example

{
  "addresses": [CustomerAddress],
  "addressesV2": CustomerAddresses,
  "allow_remote_shopping_assistance": false,
  "companies": UserCompaniesOutput,
  "compare_list": CompareList,
  "confirmation_status": "ACCOUNT_CONFIRMED",
  "created_at": "abc123",
  "custom_attributes": [AttributeValueInterface],
  "date_of_birth": "abc123",
  "default_billing": "xyz789",
  "default_shipping": "xyz789",
  "dob": "abc123",
  "email": "xyz789",
  "firstname": "xyz789",
  "gender": 987,
  "gift_registries": [GiftRegistry],
  "gift_registry": GiftRegistry,
  "group": CustomerGroup,
  "group_id": 123,
  "id": 987,
  "is_subscribed": false,
  "job_title": "abc123",
  "lastname": "abc123",
  "middlename": "abc123",
  "orders": CustomerOrders,
  "prefix": "abc123",
  "purchase_order": PurchaseOrder,
  "purchase_order_approval_rule": PurchaseOrderApprovalRule,
  "purchase_order_approval_rule_metadata": PurchaseOrderApprovalRuleMetadata,
  "purchase_order_approval_rules": PurchaseOrderApprovalRules,
  "purchase_orders": PurchaseOrders,
  "purchase_orders_enabled": true,
  "requisition_lists": RequisitionLists,
  "return": Return,
  "returns": Returns,
  "reviews": ProductReviews,
  "reward_points": RewardPoints,
  "role": CompanyRole,
  "segments": [CustomerSegment],
  "status": "ACTIVE",
  "store_credit": CustomerStoreCredit,
  "structure_id": 4,
  "suffix": "abc123",
  "taxvat": "xyz789",
  "team": CompanyTeam,
  "telephone": "abc123",
  "wishlist": Wishlist,
  "wishlist_v2": Wishlist,
  "wishlists": [Wishlist]
}

back to top
Types
CustomerAddress
Description

Contains detailed information about a customer's billing or shipping address.
Fields
Field Name 	Description
city - String 	The customer's city or town.
company - String 	The customer's company.
country_code - CountryCodeEnum 	The customer's country.
country_id - String 	The customer's country. Use country_code instead. Deprecated
custom_attributes - [CustomerAddressAttribute] 	Use custom_attributesV2 instead. Deprecated
custom_attributesV2 - [AttributeValueInterface]! 	Custom attributes assigned to the customer address.
customer_id - Int 	The customer ID customer_id is not needed as part of CustomerAddress. The id is a unique identifier for the addresses. Deprecated
default_billing - Boolean 	Indicates whether the address is the customer's default billing address.
default_shipping - Boolean 	Indicates whether the address is the customer's default shipping address.
extension_attributes - [CustomerAddressAttribute] 	Contains any extension attributes for the address.
fax - String 	The customer's fax number.
firstname - String 	The first name of the person associated with the shipping/billing address.
id - Int 	The ID of a CustomerAddress object.
lastname - String 	The family name of the person associated with the shipping/billing address.
middlename - String 	The middle name of the person associated with the shipping/billing address.
postcode - String 	The customer's ZIP or postal code.
prefix - String 	An honorific, such as Dr., Mr., or Mrs.
region - CustomerAddressRegion 	An object containing the region name, region code, and region ID.
region_id - Int 	The unique ID for a pre-defined region.
street - [String] 	An array of strings that define the street number and name.
suffix - String 	A value such as Sr., Jr., or III.
telephone - String 	The customer's telephone number.
vat_id - String 	The customer's Value-added tax (VAT) number (for corporate customers).
Example

{
  "city": "abc123",
  "company": "abc123",
  "country_code": "AF",
  "country_id": "xyz789",
  "custom_attributes": [CustomerAddressAttribute],
  "custom_attributesV2": [AttributeValueInterface],
  "customer_id": 987,
  "default_billing": true,
  "default_shipping": true,
  "extension_attributes": [CustomerAddressAttribute],
  "fax": "xyz789",
  "firstname": "abc123",
  "id": 123,
  "lastname": "abc123",
  "middlename": "xyz789",
  "postcode": "xyz789",
  "prefix": "abc123",
  "region": CustomerAddressRegion,
  "region_id": 123,
  "street": ["xyz789"],
  "suffix": "abc123",
  "telephone": "xyz789",
  "vat_id": "xyz789"
}

back to top
Types
CustomerAddressAttribute
Description

Specifies the attribute code and value of a customer address attribute.
Fields
Field Name 	Description
attribute_code - String 	The name assigned to the customer address attribute.
value - String 	The value assigned to the customer address attribute.
Example

{
  "attribute_code": "abc123",
  "value": "abc123"
}

back to top
Types
CustomerAddressAttributeInput
Description

Specifies the attribute code and value of a customer attribute.
Fields
Input Field 	Description
attribute_code - String! 	The name assigned to the attribute.
value - String! 	The value assigned to the attribute.
Example

{
  "attribute_code": "abc123",
  "value": "xyz789"
}

back to top
Types
CustomerAddressInput
Description

Contains details about a billing or shipping address.
Fields
Input Field 	Description
city - String 	The customer's city or town.
company - String 	The customer's company.
country_code - CountryCodeEnum 	The two-letter code representing the customer's country.
country_id - CountryCodeEnum
custom_attributes - [CustomerAddressAttributeInput]
custom_attributesV2 - [AttributeValueInput] 	Custom attributes assigned to the customer address.
default_billing - Boolean 	Indicates whether the address is the default billing address.
default_shipping - Boolean 	Indicates whether the address is the default shipping address.
fax - String 	The customer's fax number.
firstname - String 	The first name of the person associated with the billing/shipping address.
lastname - String 	The family name of the person associated with the billing/shipping address.
middlename - String 	The middle name of the person associated with the billing/shipping address.
postcode - String 	The customer's ZIP or postal code.
prefix - String 	An honorific, such as Dr., Mr., or Mrs.
region - CustomerAddressRegionInput 	An object containing the region name, region code, and region ID.
street - [String] 	An array of strings that define the street number and name.
suffix - String 	A value such as Sr., Jr., or III.
telephone - String 	The customer's telephone number.
vat_id - String 	The customer's Tax/VAT number (for corporate customers).
Example

{
  "city": "abc123",
  "company": "xyz789",
  "country_code": "AF",
  "country_id": "AF",
  "custom_attributes": [CustomerAddressAttributeInput],
  "custom_attributesV2": [AttributeValueInput],
  "default_billing": true,
  "default_shipping": true,
  "fax": "abc123",
  "firstname": "xyz789",
  "lastname": "xyz789",
  "middlename": "xyz789",
  "postcode": "abc123",
  "prefix": "abc123",
  "region": CustomerAddressRegionInput,
  "street": ["abc123"],
  "suffix": "abc123",
  "telephone": "xyz789",
  "vat_id": "xyz789"
}

back to top
Types
CustomerAddressRegion
Description

Defines the customer's state or province.
Fields
Field Name 	Description
region - String 	The state or province name.
region_code - String 	The address region code.
region_id - Int 	The unique ID for a pre-defined region.
Example

{
  "region": "xyz789",
  "region_code": "abc123",
  "region_id": 987
}

back to top
Types
CustomerAddressRegionInput
Description

Defines the customer's state or province.
Fields
Input Field 	Description
region - String 	The state or province name.
region_code - String 	The address region code.
region_id - Int 	The unique ID for a pre-defined region.
Example

{
  "region": "xyz789",
  "region_code": "abc123",
  "region_id": 123
}

back to top
Types
CustomerAddresses
Fields
Field Name 	Description
items - [CustomerAddress] 	An array containing the customer's shipping and billing addresses.
page_info - SearchResultPageInfo 	Contains pagination metadata.
total_count - Int 	The total count of customer addresses.
Example

{
  "items": [CustomerAddress],
  "page_info": SearchResultPageInfo,
  "total_count": 123
}

back to top
Types
CustomerAttributeMetadata
Description

Customer attribute metadata.
Fields
Field Name 	Description
code - ID! 	The unique identifier for an attribute code. This value should be in lowercase letters without spaces.
default_value - String 	Default attribute value.
entity_type - AttributeEntityTypeEnum! 	The type of entity that defines the attribute.
frontend_class - String 	The frontend class of the attribute.
frontend_input - AttributeFrontendInputEnum 	The frontend input type of the attribute.
input_filter - InputFilterEnum 	The template used for the input of the attribute (e.g., 'date').
is_required - Boolean! 	Whether the attribute value is required.
is_unique - Boolean! 	Whether the attribute value must be unique.
label - String 	The label assigned to the attribute.
multiline_count - Int 	The number of lines of the attribute value.
options - [CustomAttributeOptionInterface]! 	Attribute options.
sort_order - Int 	The position of the attribute in the form.
validate_rules - [ValidationRule] 	The validation rules of the attribute value.
Example

{
  "code": 4,
  "default_value": "xyz789",
  "entity_type": "CATALOG_PRODUCT",
  "frontend_class": "xyz789",
  "frontend_input": "BOOLEAN",
  "input_filter": "NONE",
  "is_required": true,
  "is_unique": false,
  "label": "xyz789",
  "multiline_count": 987,
  "options": [CustomAttributeOptionInterface],
  "sort_order": 987,
  "validate_rules": [ValidationRule]
}

back to top
Types
CustomerCreateInput
Description

An input object for creating a customer.
Fields
Input Field 	Description
allow_remote_shopping_assistance - Boolean 	Indicates whether the customer has enabled remote shopping assistance.
custom_attributes - [AttributeValueInput] 	The customer's custom attributes.
date_of_birth - String 	The customer's date of birth.
dob - String
email - String! 	The customer's email address.
firstname - String! 	The customer's first name.
gender - Int 	The customer's gender (Male - 1, Female - 2).
is_subscribed - Boolean 	Indicates whether the customer is subscribed to the company's newsletter.
lastname - String! 	The customer's family name.
middlename - String 	The customer's middle name.
password - String 	The customer's password.
prefix - String 	An honorific, such as Dr., Mr., or Mrs.
suffix - String 	A value such as Sr., Jr., or III.
taxvat - String 	The customer's Tax/VAT number (for corporate customers).
Example

{
  "allow_remote_shopping_assistance": true,
  "custom_attributes": [AttributeValueInput],
  "date_of_birth": "abc123",
  "dob": "abc123",
  "email": "xyz789",
  "firstname": "abc123",
  "gender": 987,
  "is_subscribed": false,
  "lastname": "abc123",
  "middlename": "abc123",
  "password": "xyz789",
  "prefix": "abc123",
  "suffix": "abc123",
  "taxvat": "xyz789"
}

back to top
Types
CustomerDownloadableProduct
Description

Contains details about a single downloadable product.
Fields
Field Name 	Description
date - String 	The date and time the purchase was made.
download_url - String 	The fully qualified URL to the download file.
order_increment_id - String 	The unique ID assigned to the item.
remaining_downloads - String 	The remaining number of times the customer can download the product.
status - String 	Indicates when the product becomes available for download. Options are Pending and Invoiced.
Example

{
  "date": "xyz789",
  "download_url": "xyz789",
  "order_increment_id": "abc123",
  "remaining_downloads": "abc123",
  "status": "abc123"
}

back to top
Types
CustomerDownloadableProducts
Description

Contains a list of downloadable products.
Fields
Field Name 	Description
items - [CustomerDownloadableProduct] 	An array of purchased downloadable items.
Example

{"items": [CustomerDownloadableProduct]}

back to top
Types
CustomerGroup
Description

Data of customer group.
Fields
Field Name 	Description
name - String 	The name of customer group.
Example

{"name": "abc123"}

back to top
Types
CustomerInput
Description

An input object that assigns or updates customer attributes.
Fields
Input Field 	Description
date_of_birth - String 	The customer's date of birth.
dob - String
email - String 	The customer's email address. Required when creating a customer.
firstname - String 	The customer's first name.
gender - Int 	The customer's gender (Male - 1, Female - 2).
is_subscribed - Boolean 	Indicates whether the customer is subscribed to the company's newsletter.
lastname - String 	The customer's family name.
middlename - String 	The customer's middle name.
password - String 	The customer's password.
prefix - String 	An honorific, such as Dr., Mr., or Mrs.
suffix - String 	A value such as Sr., Jr., or III.
taxvat - String 	The customer's Tax/VAT number (for corporate customers).
Example

{
  "date_of_birth": "xyz789",
  "dob": "xyz789",
  "email": "abc123",
  "firstname": "xyz789",
  "gender": 123,
  "is_subscribed": false,
  "lastname": "abc123",
  "middlename": "abc123",
  "password": "abc123",
  "prefix": "xyz789",
  "suffix": "abc123",
  "taxvat": "abc123"
}

back to top
Types
CustomerOrder
Description

Contains details about each of the customer's orders.
Fields
Field Name 	Description
applied_coupons - [AppliedCoupon]! 	Coupons applied to the order.
applied_gift_cards - [ApplyGiftCardToOrder] 	An array of gift cards applied to the order.
available_actions - [OrderActionType]! 	List of available order actions.
billing_address - OrderAddress 	The billing address for the order.
carrier - String 	The shipping carrier for the order delivery.
comments - [SalesCommentItem] 	Comments about the order.
created_at - String 	Use the order_date field instead. Deprecated
credit_memos - [CreditMemo] 	A list of credit memos.
customer_info - OrderCustomerInfo! 	Returns customer information from order.
email - String 	Order customer email.
gift_message - GiftMessage 	The entered gift message for the order
gift_receipt_included - Boolean! 	Indicates whether the customer requested a gift receipt for the order.
gift_wrapping - GiftWrapping 	The selected gift wrapping for the order.
grand_total - Float 	Use the totals.grand_total field instead. Deprecated
id - ID! 	The unique ID for a CustomerOrder object.
increment_id - String 	Use the id field instead. Deprecated
invoices - [Invoice]! 	A list of invoices for the order.
is_virtual - Boolean! 	TRUE if the order is virtual
items - [OrderItemInterface] 	An array containing the items purchased in this order.
items_eligible_for_return - [OrderItemInterface] 	A list of order items eligible to be in a return request.
number - String! 	The order number.
order_date - String! 	The date the order was placed.
order_number - String! 	Use the number field instead. Deprecated
order_status_change_date - String! 	The date the order status was last updated.
payment_methods - [OrderPaymentMethod] 	Payment details for the order.
printed_card_included - Boolean! 	Indicates whether the customer requested a printed card for the order.
returns - Returns 	Return requests associated with this order.
shipments - [OrderShipment] 	A list of shipments for the order.
shipping_address - OrderAddress 	The shipping address for the order.
shipping_method - String 	The delivery method for the order.
status - String! 	The current status of the order.
token - String! 	The token that can be used to retrieve the order using order query.
total - OrderTotal 	Details about the calculated totals for this order.
Example

{
  "applied_coupons": [AppliedCoupon],
  "applied_gift_cards": [ApplyGiftCardToOrder],
  "available_actions": ["REORDER"],
  "billing_address": OrderAddress,
  "carrier": "xyz789",
  "comments": [SalesCommentItem],
  "created_at": "abc123",
  "credit_memos": [CreditMemo],
  "customer_info": OrderCustomerInfo,
  "email": "xyz789",
  "gift_message": GiftMessage,
  "gift_receipt_included": false,
  "gift_wrapping": GiftWrapping,
  "grand_total": 123.45,
  "id": 4,
  "increment_id": "abc123",
  "invoices": [Invoice],
  "is_virtual": false,
  "items": [OrderItemInterface],
  "items_eligible_for_return": [OrderItemInterface],
  "number": "abc123",
  "order_date": "xyz789",
  "order_number": "abc123",
  "order_status_change_date": "xyz789",
  "payment_methods": [OrderPaymentMethod],
  "printed_card_included": false,
  "returns": Returns,
  "shipments": [OrderShipment],
  "shipping_address": OrderAddress,
  "shipping_method": "xyz789",
  "status": "xyz789",
  "token": "abc123",
  "total": OrderTotal
}

back to top
Types
CustomerOrderSortInput
Description

CustomerOrderSortInput specifies the field to use for sorting search results and indicates whether the results are sorted in ascending or descending order.
Fields
Input Field 	Description
sort_direction - SortEnum! 	This enumeration indicates whether to return results in ascending or descending order
sort_field - CustomerOrderSortableField! 	Specifies the field to use for sorting
Example

{"sort_direction": "ASC", "sort_field": "NUMBER"}

back to top
Types
CustomerOrderSortableField
Description

Specifies the field to use for sorting
Values
Enum Value 	Description

NUMBER
	Sorts customer orders by number

CREATED_AT
	Sorts customer orders by created_at field
Example

"NUMBER"

back to top
Types
CustomerOrders
Description

The collection of orders that match the conditions defined in the filter.
Fields
Field Name 	Description
date_of_first_order - String 	Date of the first order placed in the store
items - [CustomerOrder]! 	An array of customer orders.
page_info - SearchResultPageInfo 	Contains pagination metadata.
total_count - Int 	The total count of customer orders.
Example

{
  "date_of_first_order": "abc123",
  "items": [CustomerOrder],
  "page_info": SearchResultPageInfo,
  "total_count": 987
}

back to top
Types
CustomerOrdersFilterInput
Description

Identifies the filter to use for filtering orders.
Fields
Input Field 	Description
grand_total - FilterRangeTypeInput 	Filters by order base grand total value.
number - FilterStringTypeInput 	Filters by order number.
order_date - FilterRangeTypeInput 	Filters by order created_at time.
status - FilterEqualTypeInput 	Filters by order status.
Example

{
  "grand_total": FilterRangeTypeInput,
  "number": FilterStringTypeInput,
  "order_date": FilterRangeTypeInput,
  "status": FilterEqualTypeInput
}

back to top
Types
CustomerOutput
Description

Contains details about a newly-created or updated customer.
Fields
Field Name 	Description
customer - Customer! 	Customer details after creating or updating a customer.
Example

{"customer": Customer}

back to top
Types
CustomerPaymentTokens
Description

Contains payment tokens stored in the customer's vault.
Fields
Field Name 	Description
items - [PaymentToken]! 	An array of payment tokens.
Example

{"items": [PaymentToken]}

back to top
Types
CustomerSegment
Description

Customer segment.
Fields
Field Name 	Description
apply_to - CustomerSegmentApplyTo! 	Customer segment is applicable to visitor, registered customer or both.
description - String 	Customer segment description.
name - String! 	Customer segment name.
Example

{
  "apply_to": "BOTH",
  "description": "xyz789",
  "name": "xyz789"
}

back to top
Types
CustomerSegmentApplyTo
Description

Customer segment is applicable to visitor, registered customers or both.
Values
Enum Value 	Description

BOTH
	Customer segment is applicable to visitor and registered customers.

REGISTERED
	Customer segment is applicable to registered customers.

VISITOR
	Customer segment is applicable to visitors/guests.
Example

"BOTH"

back to top
Types
CustomerStoreCredit
Description

Contains store credit information with balance and history.
Fields
Field Name 	Description
balance_history - CustomerStoreCreditHistory 	Contains the customer's store credit balance history. If the history or store credit feature is disabled, then a null value will be returned.
current_balance - Money 	The current balance of store credit.
enabled - Boolean 	Indicates whether store credits are enabled. If the feature is disabled, then the balance will not be returned.
Example

{
  "balance_history": CustomerStoreCreditHistory,
  "current_balance": Money,
  "enabled": true
}

back to top
Types
CustomerStoreCreditHistory
Description

Lists changes to the amount of store credit available to the customer.
Fields
Field Name 	Description
items - [CustomerStoreCreditHistoryItem] 	An array containing information about changes to the store credit available to the customer.
page_info - SearchResultPageInfo 	Metadata for pagination rendering.
total_count - Int 	The number of items returned.
Example

{
  "items": [CustomerStoreCreditHistoryItem],
  "page_info": SearchResultPageInfo,
  "total_count": 987
}

back to top
Types
CustomerStoreCreditHistoryItem
Description

Contains store credit history information.
Fields
Field Name 	Description
action - String 	The action that was made on the store credit.
actual_balance - Money 	The store credit available to the customer as a result of this action.
balance_change - Money 	The amount added to or subtracted from the store credit as a result of this action.
date_time_changed - String 	The date and time when the store credit change was made.
Example

{
  "action": "abc123",
  "actual_balance": Money,
  "balance_change": Money,
  "date_time_changed": "abc123"
}

back to top
Types
CustomerToken
Description

Contains a customer authorization token.
Fields
Field Name 	Description
token - String 	The customer authorization token.
Example

{"token": "abc123"}

back to top
Types
CustomerUpdateInput
Description

An input object for updating a customer.
Fields
Input Field 	Description
allow_remote_shopping_assistance - Boolean 	Indicates whether the customer has enabled remote shopping assistance.
custom_attributes - [AttributeValueInput] 	The customer's custom attributes.
date_of_birth - String 	The customer's date of birth.
dob - String
firstname - String 	The customer's first name.
gender - Int 	The customer's gender (Male - 1, Female - 2).
is_subscribed - Boolean 	Indicates whether the customer is subscribed to the company's newsletter.
lastname - String 	The customer's family name.
middlename - String 	The customer's middle name.
prefix - String 	An honorific, such as Dr., Mr., or Mrs.
suffix - String 	A value such as Sr., Jr., or III.
taxvat - String 	The customer's Tax/VAT number (for corporate customers).
Example

{
  "allow_remote_shopping_assistance": false,
  "custom_attributes": [AttributeValueInput],
  "date_of_birth": "abc123",
  "dob": "abc123",
  "firstname": "abc123",
  "gender": 123,
  "is_subscribed": true,
  "lastname": "xyz789",
  "middlename": "xyz789",
  "prefix": "abc123",
  "suffix": "abc123",
  "taxvat": "abc123"
}

back to top
Types
CustomizableAreaOption
Description

Contains information about a text area that is defined as part of a customizable option.
Fields
Field Name 	Description
option_id - Int 	Option ID. Use uid instead Deprecated
product_sku - String 	The Stock Keeping Unit of the base product.
required - Boolean 	Indicates whether the option is required.
sort_order - Int 	The order in which the option is displayed.
title - String 	The display name for this option.
uid - ID! 	The unique ID for a CustomizableOptionInterface object.
value - CustomizableAreaValue 	An object that defines a text area.
Example

{
  "option_id": 123,
  "product_sku": "abc123",
  "required": false,
  "sort_order": 123,
  "title": "xyz789",
  "uid": 4,
  "value": CustomizableAreaValue
}

back to top
Types
CustomizableAreaValue
Description

Defines the price and sku of a product whose page contains a customized text area.
Fields
Field Name 	Description
max_characters - Int 	The maximum number of characters that can be entered for this customizable option.
price - Float 	The price assigned to this option.
price_type - PriceTypeEnum 	FIXED, PERCENT, or DYNAMIC.
sku - String 	The Stock Keeping Unit for this option.
uid - ID! 	The unique ID for a CustomizableAreaValue object.
Example

{
  "max_characters": 987,
  "price": 987.65,
  "price_type": "FIXED",
  "sku": "abc123",
  "uid": "4"
}

back to top
Types
CustomizableCheckboxOption
Description

Contains information about a set of checkbox values that are defined as part of a customizable option.
Fields
Field Name 	Description
option_id - Int 	Option ID. Use uid instead Deprecated
required - Boolean 	Indicates whether the option is required.
sort_order - Int 	The order in which the option is displayed.
title - String 	The display name for this option.
uid - ID! 	The unique ID for a CustomizableOptionInterface object.
value - [CustomizableCheckboxValue] 	An array that defines a set of checkbox values.
Example

{
  "option_id": 987,
  "required": true,
  "sort_order": 987,
  "title": "xyz789",
  "uid": "4",
  "value": [CustomizableCheckboxValue]
}

back to top
Types
CustomizableCheckboxValue
Description

Defines the price and sku of a product whose page contains a customized set of checkbox values.
Fields
Field Name 	Description
option_type_id - Int 	The ID assigned to the value.
price - Float 	The price assigned to this option.
price_type - PriceTypeEnum 	FIXED, PERCENT, or DYNAMIC.
sku - String 	The Stock Keeping Unit for this option.
sort_order - Int 	The order in which the checkbox value is displayed.
title - String 	The display name for this option.
uid - ID! 	The unique ID for a CustomizableCheckboxValue object.
Example

{
  "option_type_id": 987,
  "price": 987.65,
  "price_type": "FIXED",
  "sku": "xyz789",
  "sort_order": 123,
  "title": "xyz789",
  "uid": 4
}

back to top
Types
CustomizableDateOption
Description

Contains information about a date picker that is defined as part of a customizable option.
Fields
Field Name 	Description
option_id - Int 	Option ID. Use uid instead Deprecated
product_sku - String 	The Stock Keeping Unit of the base product.
required - Boolean 	Indicates whether the option is required.
sort_order - Int 	The order in which the option is displayed.
title - String 	The display name for this option.
uid - ID! 	The unique ID for a CustomizableOptionInterface object.
value - CustomizableDateValue 	An object that defines a date field in a customizable option.
Example

{
  "option_id": 987,
  "product_sku": "xyz789",
  "required": true,
  "sort_order": 123,
  "title": "abc123",
  "uid": 4,
  "value": CustomizableDateValue
}

back to top
Types
CustomizableDateTypeEnum
Description

Defines the customizable date type.
Values
Enum Value 	Description

DATE


DATE_TIME


TIME

Example

"DATE"

back to top
Types
CustomizableDateValue
Description

Defines the price and sku of a product whose page contains a customized date picker.
Fields
Field Name 	Description
price - Float 	The price assigned to this option.
price_type - PriceTypeEnum 	FIXED, PERCENT, or DYNAMIC.
sku - String 	The Stock Keeping Unit for this option.
type - CustomizableDateTypeEnum 	DATE, DATE_TIME or TIME
uid - ID! 	The unique ID for a CustomizableDateValue object.
Example

{
  "price": 987.65,
  "price_type": "FIXED",
  "sku": "abc123",
  "type": "DATE",
  "uid": "4"
}

back to top
Types
CustomizableDropDownOption
Description

Contains information about a drop down menu that is defined as part of a customizable option.
Fields
Field Name 	Description
option_id - Int 	Option ID. Use uid instead Deprecated
required - Boolean 	Indicates whether the option is required.
sort_order - Int 	The order in which the option is displayed.
title - String 	The display name for this option.
uid - ID! 	The unique ID for a CustomizableOptionInterface object.
value - [CustomizableDropDownValue] 	An array that defines the set of options for a drop down menu.
Example

{
  "option_id": 987,
  "required": false,
  "sort_order": 123,
  "title": "abc123",
  "uid": "4",
  "value": [CustomizableDropDownValue]
}

back to top
Types
CustomizableDropDownValue
Description

Defines the price and sku of a product whose page contains a customized drop down menu.
Fields
Field Name 	Description
option_type_id - Int 	The ID assigned to the value.
price - Float 	The price assigned to this option.
price_type - PriceTypeEnum 	FIXED, PERCENT, or DYNAMIC.
sku - String 	The Stock Keeping Unit for this option.
sort_order - Int 	The order in which the option is displayed.
title - String 	The display name for this option.
uid - ID! 	The unique ID for a CustomizableDropDownValue object.
Example

{
  "option_type_id": 123,
  "price": 987.65,
  "price_type": "FIXED",
  "sku": "xyz789",
  "sort_order": 987,
  "title": "abc123",
  "uid": 4
}

back to top
Types
CustomizableFieldOption
Description

Contains information about a text field that is defined as part of a customizable option.
Fields
Field Name 	Description
option_id - Int 	Option ID. Use uid instead Deprecated
product_sku - String 	The Stock Keeping Unit of the base product.
required - Boolean 	Indicates whether the option is required.
sort_order - Int 	The order in which the option is displayed.
title - String 	The display name for this option.
uid - ID! 	The unique ID for a CustomizableOptionInterface object.
value - CustomizableFieldValue 	An object that defines a text field.
Example

{
  "option_id": 987,
  "product_sku": "abc123",
  "required": false,
  "sort_order": 123,
  "title": "abc123",
  "uid": 4,
  "value": CustomizableFieldValue
}

back to top
Types
CustomizableFieldValue
Description

Defines the price and sku of a product whose page contains a customized text field.
Fields
Field Name 	Description
max_characters - Int 	The maximum number of characters that can be entered for this customizable option.
price - Float 	The price of the custom value.
price_type - PriceTypeEnum 	FIXED, PERCENT, or DYNAMIC.
sku - String 	The Stock Keeping Unit for this option.
uid - ID! 	The unique ID for a CustomizableFieldValue object.
Example

{
  "max_characters": 123,
  "price": 123.45,
  "price_type": "FIXED",
  "sku": "xyz789",
  "uid": "4"
}

back to top
Types
CustomizableFileOption
Description

Contains information about a file picker that is defined as part of a customizable option.
Fields
Field Name 	Description
option_id - Int 	Option ID. Use uid instead Deprecated
product_sku - String 	The Stock Keeping Unit of the base product.
required - Boolean 	Indicates whether the option is required.
sort_order - Int 	The order in which the option is displayed.
title - String 	The display name for this option.
uid - ID! 	The unique ID for a CustomizableOptionInterface object.
value - CustomizableFileValue 	An object that defines a file value.
Example

{
  "option_id": 987,
  "product_sku": "xyz789",
  "required": true,
  "sort_order": 987,
  "title": "abc123",
  "uid": "4",
  "value": CustomizableFileValue
}

back to top
Types
CustomizableFileValue
Description

Defines the price and sku of a product whose page contains a customized file picker.
Fields
Field Name 	Description
file_extension - String 	The file extension to accept.
image_size_x - Int 	The maximum width of an image.
image_size_y - Int 	The maximum height of an image.
price - Float 	The price assigned to this option.
price_type - PriceTypeEnum 	FIXED, PERCENT, or DYNAMIC.
sku - String 	The Stock Keeping Unit for this option.
uid - ID! 	The unique ID for a CustomizableFileValue object.
Example

{
  "file_extension": "xyz789",
  "image_size_x": 123,
  "image_size_y": 987,
  "price": 123.45,
  "price_type": "FIXED",
  "sku": "abc123",
  "uid": "4"
}

back to top
Types
CustomizableMultipleOption
Description

Contains information about a multiselect that is defined as part of a customizable option.
Fields
Field Name 	Description
option_id - Int 	Option ID. Use uid instead Deprecated
required - Boolean 	Indicates whether the option is required.
sort_order - Int 	The order in which the option is displayed.
title - String 	The display name for this option.
uid - ID! 	The unique ID for a CustomizableOptionInterface object.
value - [CustomizableMultipleValue] 	An array that defines the set of options for a multiselect.
Example

{
  "option_id": 123,
  "required": false,
  "sort_order": 987,
  "title": "abc123",
  "uid": "4",
  "value": [CustomizableMultipleValue]
}

back to top
Types
CustomizableMultipleValue
Description

Defines the price and sku of a product whose page contains a customized multiselect.
Fields
Field Name 	Description
option_type_id - Int 	The ID assigned to the value.
price - Float 	The price assigned to this option.
price_type - PriceTypeEnum 	FIXED, PERCENT, or DYNAMIC.
sku - String 	The Stock Keeping Unit for this option.
sort_order - Int 	The order in which the option is displayed.
title - String 	The display name for this option.
uid - ID! 	The unique ID for a CustomizableMultipleValue object.
Example

{
  "option_type_id": 123,
  "price": 123.45,
  "price_type": "FIXED",
  "sku": "xyz789",
  "sort_order": 123,
  "title": "abc123",
  "uid": 4
}

back to top
Types
CustomizableOptionInput
Description

Defines a customizable option.
Fields
Input Field 	Description
id - Int 	The customizable option ID of the product.
uid - ID 	The unique ID for a CartItemInterface object.
value_string - String! 	The string value of the option.
Example

{
  "id": 123,
  "uid": "4",
  "value_string": "xyz789"
}

back to top
Types
CustomizableOptionInterface
Description

Contains basic information about a customizable option. It can be implemented by several types of configurable options.
Fields
Field Name 	Description
option_id - Int 	Option ID. Use uid instead Deprecated
required - Boolean 	Indicates whether the option is required.
sort_order - Int 	The order in which the option is displayed.
title - String 	The display name for this option.
uid - ID! 	The unique ID for a CustomizableOptionInterface object.
Possible Types
CustomizableOptionInterface Types

CustomizableAreaOption

CustomizableDateOption

CustomizableDropDownOption

CustomizableMultipleOption

CustomizableFieldOption

CustomizableFileOption

CustomizableRadioOption

CustomizableCheckboxOption
Example

{
  "option_id": 987,
  "required": true,
  "sort_order": 987,
  "title": "abc123",
  "uid": "4"
}

back to top
Types
CustomizableProductInterface
Description

Contains information about customizable product options.
Fields
Field Name 	Description
options - [CustomizableOptionInterface] 	An array of options for a customizable product.
Possible Types
CustomizableProductInterface Types

VirtualProduct

SimpleProduct

ConfigurableProduct

BundleProduct

DownloadableProduct

GiftCardProduct
Example

{"options": [CustomizableOptionInterface]}

back to top
Types
CustomizableRadioOption
Description

Contains information about a set of radio buttons that are defined as part of a customizable option.
Fields
Field Name 	Description
option_id - Int 	Option ID. Use uid instead Deprecated
required - Boolean 	Indicates whether the option is required.
sort_order - Int 	The order in which the option is displayed.
title - String 	The display name for this option.
uid - ID! 	The unique ID for a CustomizableOptionInterface object.
value - [CustomizableRadioValue] 	An array that defines a set of radio buttons.
Example

{
  "option_id": 123,
  "required": true,
  "sort_order": 987,
  "title": "abc123",
  "uid": 4,
  "value": [CustomizableRadioValue]
}

back to top
Types
CustomizableRadioValue
Description

Defines the price and sku of a product whose page contains a customized set of radio buttons.
Fields
Field Name 	Description
option_type_id - Int 	The ID assigned to the value.
price - Float 	The price assigned to this option.
price_type - PriceTypeEnum 	FIXED, PERCENT, or DYNAMIC.
sku - String 	The Stock Keeping Unit for this option.
sort_order - Int 	The order in which the radio button is displayed.
title - String 	The display name for this option.
uid - ID! 	The unique ID for a CustomizableRadioValue object.
Example

{
  "option_type_id": 123,
  "price": 123.45,
  "price_type": "FIXED",
  "sku": "abc123",
  "sort_order": 987,
  "title": "xyz789",
  "uid": "4"
}

back to top
Types
DeleteCompanyRoleOutput
Description

Contains the response to the request to delete the company role.
Fields
Field Name 	Description
success - Boolean! 	SIndicates whether the company role has been deleted successfully.
Example

{"success": true}

back to top
Types
DeleteCompanyTeamOutput
Description

Contains the status of the request to delete a company team.
Fields
Field Name 	Description
success - Boolean! 	Indicates whether the delete operation succeeded.
Example

{"success": false}

back to top
Types
DeleteCompanyUserOutput
Description

Contains the response to the request to delete the company user.
Fields
Field Name 	Description
success - Boolean! 	Indicates whether the company user has been deactivated successfully.
Example

{"success": true}

back to top
Types
DeleteCompareListOutput
Description

Contains the results of the request to delete a compare list.
Fields
Field Name 	Description
result - Boolean! 	Indicates whether the compare list was successfully deleted.
Example

{"result": false}

back to top
Types
DeleteNegotiableQuoteError
Union Types

NegotiableQuoteInvalidStateError

NoSuchEntityUidError

InternalError
Example

NegotiableQuoteInvalidStateError

back to top
Types
DeleteNegotiableQuoteOperationFailure
Description

Contains details about a failed delete operation on a negotiable quote.
Fields
Field Name 	Description
errors - [DeleteNegotiableQuoteError]!
quote_uid - ID! 	The unique ID of a NegotiableQuote object.
Example

{
  "errors": [NegotiableQuoteInvalidStateError],
  "quote_uid": 4
}

back to top
Types
DeleteNegotiableQuoteOperationResult
Union Types

NegotiableQuoteUidOperationSuccess

DeleteNegotiableQuoteOperationFailure
Example

NegotiableQuoteUidOperationSuccess

back to top
Types
DeleteNegotiableQuoteTemplateInput
Description

Specifies the quote template id of the quote template to delete
Fields
Input Field 	Description
template_id - ID! 	The unique ID of a NegotiableQuoteTemplate object.
Example

{"template_id": "4"}

back to top
Types
DeleteNegotiableQuotesInput
Fields
Input Field 	Description
quote_uids - [ID]! 	A list of unique IDs for NegotiableQuote objects to delete.
Example

{"quote_uids": [4]}

back to top
Types
DeleteNegotiableQuotesOutput
Description

Contains a list of undeleted negotiable quotes the company user can view.
Fields
Field Name 	Description
negotiable_quotes - NegotiableQuotesOutput 	A list of negotiable quotes that the customer can view
operation_results - [DeleteNegotiableQuoteOperationResult]! 	An array of deleted negotiable quote UIDs and details about any errors.
result_status - BatchMutationStatus! 	The status of the request to delete one or more negotiable quotes.
Example

{
  "negotiable_quotes": NegotiableQuotesOutput,
  "operation_results": [
    NegotiableQuoteUidOperationSuccess
  ],
  "result_status": "SUCCESS"
}

back to top
Types
DeletePaymentTokenOutput
Description

Indicates whether the request succeeded and returns the remaining customer payment tokens.
Fields
Field Name 	Description
customerPaymentTokens - CustomerPaymentTokens 	A container for the customer's remaining payment tokens.
result - Boolean! 	Indicates whether the request succeeded.
Example

{
  "customerPaymentTokens": CustomerPaymentTokens,
  "result": true
}

back to top
Types
DeletePurchaseOrderApprovalRuleError
Description

Contains details about an error that occurred when deleting an approval rule .
Fields
Field Name 	Description
message - String 	The text of the error message.
type - DeletePurchaseOrderApprovalRuleErrorType 	The error type.
Example

{"message": "abc123", "type": "UNDEFINED"}

back to top
Types
DeletePurchaseOrderApprovalRuleErrorType
Values
Enum Value 	Description

UNDEFINED


NOT_FOUND

Example

"UNDEFINED"

back to top
Types
DeletePurchaseOrderApprovalRuleInput
Description

Specifies the IDs of the approval rules to delete.
Fields
Input Field 	Description
approval_rule_uids - [ID]! 	An array of purchase order approval rule IDs.
Example

{"approval_rule_uids": ["4"]}

back to top
Types
DeletePurchaseOrderApprovalRuleOutput
Description

Contains any errors encountered while attempting to delete approval rules.
Fields
Field Name 	Description
errors - [DeletePurchaseOrderApprovalRuleError]! 	An array of error messages encountered while performing the operation.
Example

{"errors": [DeletePurchaseOrderApprovalRuleError]}

back to top
Types
DeleteRequisitionListItemsOutput
Description

Output of the request to remove items from the requisition list.
Fields
Field Name 	Description
requisition_list - RequisitionList 	The requisition list after removing items.
Example

{"requisition_list": RequisitionList}

back to top
Types
DeleteRequisitionListOutput
Description

Indicates whether the request to delete the requisition list was successful.
Fields
Field Name 	Description
requisition_lists - RequisitionLists 	The customer's requisition lists after deleting a requisition list.
status - Boolean! 	Indicates whether the request to delete the requisition list was successful.
Example

{"requisition_lists": RequisitionLists, "status": false}

back to top
Types
DeleteWishlistOutput
Description

Contains the status of the request to delete a wish list and an array of the customer's remaining wish lists.
Fields
Field Name 	Description
status - Boolean! 	Indicates whether the wish list was deleted.
wishlists - [Wishlist]! 	A list of undeleted wish lists.
Example

{"status": false, "wishlists": [Wishlist]}

back to top
Types
Discount
Description

Specifies the discount type and value for quote line item.
Fields
Field Name 	Description
amount - Money! 	The amount of the discount.
applied_to - CartDiscountType! 	The type of the entity the discount is applied to.
coupon - AppliedCoupon 	The coupon related to the discount.
is_discounting_locked - Boolean 	Is quote discounting locked for line item.
label - String! 	A description of the discount.
type - String 	Quote line item discount type. Values: 1 = PERCENTAGE_DISCOUNT; 2 = AMOUNT_DISCOUNT; 3 = PROPOSED_TOTAL.
value - Float 	Quote line item discount value.
Example

{
  "amount": Money,
  "applied_to": "ITEM",
  "coupon": AppliedCoupon,
  "is_discounting_locked": false,
  "label": "abc123",
  "type": "abc123",
  "value": 987.65
}

back to top
Types
DownloadableCartItem
Description

An implementation for downloadable product cart items.
Fields
Field Name 	Description
customizable_options - [SelectedCustomizableOption]! 	An array containing the customizable options the shopper selected.
discount - [Discount] 	Contains discount for quote line item.
errors - [CartItemError] 	An array of errors encountered while loading the cart item
id - String! 	Use uid instead. Deprecated
is_available - Boolean! 	True if requested quantity is less than available stock, false otherwise.
links - [DownloadableProductLinks] 	An array containing information about the links for the downloadable product added to the cart.
max_qty - Float 	Line item max qty in quote template
min_qty - Float 	Line item min qty in quote template
not_available_message - String 	Message to display when the product is not available with this selected option.
note_from_buyer - [ItemNote] 	The buyer's quote line item note.
note_from_seller - [ItemNote] 	The seller's quote line item note.
prices - CartItemPrices 	Contains details about the price of the item, including taxes and discounts.
product - ProductInterface! 	Details about an item in the cart.
quantity - Float! 	The quantity of this item in the cart.
samples - [DownloadableProductSamples] 	An array containing information about samples of the selected downloadable product.
uid - ID! 	The unique ID for a CartItemInterface object.
Example

{
  "customizable_options": [SelectedCustomizableOption],
  "discount": [Discount],
  "errors": [CartItemError],
  "id": "xyz789",
  "is_available": false,
  "links": [DownloadableProductLinks],
  "max_qty": 987.65,
  "min_qty": 123.45,
  "not_available_message": "xyz789",
  "note_from_buyer": [ItemNote],
  "note_from_seller": [ItemNote],
  "prices": CartItemPrices,
  "product": ProductInterface,
  "quantity": 123.45,
  "samples": [DownloadableProductSamples],
  "uid": 4
}

back to top
Types
DownloadableCreditMemoItem
Description

Defines downloadable product options for CreditMemoItemInterface.
Fields
Field Name 	Description
discounts - [Discount] 	Details about the final discount amount for the base product, including discounts on options.
downloadable_links - [DownloadableItemsLinks] 	A list of downloadable links that are refunded from the downloadable product.
id - ID! 	The unique ID for a CreditMemoItemInterface object.
order_item - OrderItemInterface 	The order item the credit memo is applied to.
product_name - String 	The name of the base product.
product_sale_price - Money! 	The sale price for the base product, including selected options.
product_sku - String! 	The SKU of the base product.
quantity_refunded - Float 	The number of refunded items.
Example

{
  "discounts": [Discount],
  "downloadable_links": [DownloadableItemsLinks],
  "id": "4",
  "order_item": OrderItemInterface,
  "product_name": "abc123",
  "product_sale_price": Money,
  "product_sku": "xyz789",
  "quantity_refunded": 123.45
}

back to top
Types
DownloadableFileTypeEnum
Values
Enum Value 	Description

FILE
	sample_url serves to get the downloadable sample

URL
	sample_url serves to get the downloadable sample
Example

"FILE"

back to top
Types
DownloadableInvoiceItem
Description

Defines downloadable product options for InvoiceItemInterface.
Fields
Field Name 	Description
discounts - [Discount] 	Information about the final discount amount for the base product, including discounts on options.
downloadable_links - [DownloadableItemsLinks] 	A list of downloadable links that are invoiced from the downloadable product.
id - ID! 	The unique ID for an InvoiceItemInterface object.
order_item - OrderItemInterface 	Details about an individual order item.
product_name - String 	The name of the base product.
product_sale_price - Money! 	The sale price for the base product including selected options.
product_sku - String! 	The SKU of the base product.
quantity_invoiced - Float 	The number of invoiced items.
Example

{
  "discounts": [Discount],
  "downloadable_links": [DownloadableItemsLinks],
  "id": 4,
  "order_item": OrderItemInterface,
  "product_name": "xyz789",
  "product_sale_price": Money,
  "product_sku": "abc123",
  "quantity_invoiced": 987.65
}

back to top
Types
DownloadableItemsLinks
Description

Defines characteristics of the links for downloadable product.
Fields
Field Name 	Description
sort_order - Int 	A number indicating the sort order.
title - String 	The display name of the link.
uid - ID! 	The unique ID for a DownloadableItemsLinks object.
Example

{
  "sort_order": 987,
  "title": "abc123",
  "uid": "4"
}

back to top
Types
DownloadableOrderItem
Description

Defines downloadable product options for OrderItemInterface.
Fields
Field Name 	Description
discounts - [Discount] 	The final discount information for the product.
downloadable_links - [DownloadableItemsLinks] 	A list of downloadable links that are ordered from the downloadable product.
eligible_for_return - Boolean 	Indicates whether the order item is eligible to be in a return request.
entered_options - [OrderItemOption] 	The entered option for the base product, such as a logo or image.
gift_message - GiftMessage 	The selected gift message for the order item
gift_wrapping - GiftWrapping 	The selected gift wrapping for the order item.
id - ID! 	The unique ID for an OrderItemInterface object.
prices - OrderItemPrices 	Contains details about the price of the item, including taxes and discounts.
product - ProductInterface 	The ProductInterface object, which contains details about the base product
product_name - String 	The name of the base product.
product_sale_price - Money! 	The sale price of the base product, including selected options.
product_sku - String! 	The SKU of the base product.
product_type - String 	The type of product, such as simple, configurable, etc.
product_url_key - String 	URL key of the base product.
quantity_canceled - Float 	The number of canceled items.
quantity_invoiced - Float 	The number of invoiced items.
quantity_ordered - Float 	The number of units ordered for this item.
quantity_refunded - Float 	The number of refunded items.
quantity_return_requested - Float 	The requested return quantity of the item.
quantity_returned - Float 	The number of returned items.
quantity_shipped - Float 	The number of shipped items.
selected_options - [OrderItemOption] 	The selected options for the base product, such as color or size.
status - String 	The status of the order item.
Example

{
  "discounts": [Discount],
  "downloadable_links": [DownloadableItemsLinks],
  "eligible_for_return": true,
  "entered_options": [OrderItemOption],
  "gift_message": GiftMessage,
  "gift_wrapping": GiftWrapping,
  "id": "4",
  "prices": OrderItemPrices,
  "product": ProductInterface,
  "product_name": "xyz789",
  "product_sale_price": Money,
  "product_sku": "xyz789",
  "product_type": "abc123",
  "product_url_key": "abc123",
  "quantity_canceled": 123.45,
  "quantity_invoiced": 123.45,
  "quantity_ordered": 987.65,
  "quantity_refunded": 123.45,
  "quantity_return_requested": 123.45,
  "quantity_returned": 987.65,
  "quantity_shipped": 123.45,
  "selected_options": [OrderItemOption],
  "status": "xyz789"
}

back to top
Types
DownloadableProduct
Description

Defines a product that the shopper downloads.
Fields
Field Name 	Description
activity - String 	Use the custom_attributes field instead. Deprecated
attribute_set_id - Int 	The attribute set assigned to the product. The field should not be used on the storefront. Deprecated
canonical_url - String 	The relative canonical URL. This value is returned only if the system setting 'Use Canonical Link Meta Tag For Products' is enabled.
categories - [CategoryInterface] 	The categories assigned to a product.
category_gear - String 	Use the custom_attributes field instead. Deprecated
climate - String 	Use the custom_attributes field instead. Deprecated
collar - String 	Use the custom_attributes field instead. Deprecated
color - Int 	Use the custom_attributes field instead. Deprecated
country_of_manufacture - String 	The product's country of origin.
created_at - String 	Timestamp indicating when the product was created. The field should not be used on the storefront. Deprecated
crosssell_products - [ProductInterface] 	An array of cross-sell products.
custom_attributesV2 - ProductCustomAttributes 	Product custom attributes.
description - ComplexTextValue 	Detailed information about the product. The value can include simple HTML tags.
downloadable_product_links - [DownloadableProductLinks] 	An array containing information about the links for this downloadable product.
downloadable_product_samples - [DownloadableProductSamples] 	An array containing information about samples of this downloadable product.
eco_collection - Int 	Use the custom_attributes field instead. Deprecated
erin_recommends - Int 	Use the custom_attributes field instead. Deprecated
features_bags - String 	Use the custom_attributes field instead. Deprecated
format - Int 	Use the custom_attributes field instead. Deprecated
gender - String 	Use the custom_attributes field instead. Deprecated
gift_message_available - Boolean! 	Returns a value indicating gift message availability for the product.
gift_wrapping_available - Boolean! 	Returns a value indicating gift wrapping availability for the product.
gift_wrapping_price - Money 	Returns value and currency indicating gift wrapping price for the product.
id - Int 	The ID number assigned to the product. Use the uid field instead. Deprecated
image - ProductImage 	The relative path to the main image on the product page.
is_returnable - String 	Indicates whether the product can be returned.
links_purchased_separately - Int 	A value of 1 indicates that each link in the array must be purchased separately.
links_title - String 	The heading above the list of downloadable products.
manufacturer - Int 	A number representing the product's manufacturer. Use the custom_attributes field instead. Deprecated
material - String 	Use the custom_attributes field instead. Deprecated
max_sale_qty - Float 	Maximum Qty Allowed in Shopping Cart
media_gallery - [MediaGalleryInterface] 	An array of media gallery objects.
media_gallery_entries - [MediaGalleryEntry] 	An array of MediaGalleryEntry objects. Use media_gallery instead. Deprecated
meta_description - String 	A brief overview of the product for search results listings, maximum 255 characters.
meta_keyword - String 	A comma-separated list of keywords that are visible only to search engines.
meta_title - String 	A string that is displayed in the title bar and tab of the browser and in search results lists.
min_sale_qty - Float 	Minimum Qty Allowed in Shopping Cart
name - String 	The product name. Customers use this name to identify the product.
new - Int 	Use the custom_attributes field instead. Deprecated
new_from_date - String 	The beginning date for new product listings, and determines if the product is featured as a new product.
new_to_date - String 	The end date for new product listings.
only_x_left_in_stock - Float 	Product stock only x left count
options - [CustomizableOptionInterface] 	An array of options for a customizable product.
options_container - String 	If the product has multiple options, determines where they appear on the product page.
pattern - String 	Use the custom_attributes field instead. Deprecated
performance_fabric - Int 	Use the custom_attributes field instead. Deprecated
price - ProductPrices 	Indicates the price of an item. Use price_range for product price information. Deprecated
price_range - PriceRange! 	The range of prices for the product
price_tiers - [TierPrice] 	An array of TierPrice objects.
product_links - [ProductLinksInterface] 	An array of ProductLinks objects.
purpose - Int 	Use the custom_attributes field instead. Deprecated
quantity - Float 	Amount of available stock
rating_summary - Float! 	The average of all the ratings given to the product.
redirect_code - Int! 	Contains 0 when there is no redirect error. A value of 301 indicates the URL of the requested resource has been changed permanently, while a value of 302 indicates a temporary redirect.
related_products - [ProductInterface] 	An array of related products.
relative_url - String 	The internal relative URL. If the specified URL is a redirect, the query returns the redirected URL, not the original.
review_count - Int! 	The total count of all the reviews given to the product.
reviews - ProductReviews! 	The list of products reviews.
rules - [CatalogRule] 	Provides applied catalog rules in the current active cart
sale - Int 	Use the custom_attributes field instead. Deprecated
short_description - ComplexTextValue 	A short description of the product. Its use depends on the theme.
size - Int 	Use the custom_attributes field instead. Deprecated
sku - String 	A number or code assigned to a product to identify the product, options, price, and manufacturer.
sleeve - String 	Use the custom_attributes field instead. Deprecated
small_image - ProductImage 	The relative path to the small image, which is used on catalog pages.
special_from_date - String 	The beginning date that a product has a special price. The field should not be used on the storefront. Deprecated
special_price - Float 	The discounted price of the product.
special_to_date - String 	The end date for a product with a special price.
staged - Boolean! 	Indicates whether the product is staged for a future campaign.
stock_status - ProductStockStatus 	Stock status of the product
strap_bags - String 	Use the custom_attributes field instead. Deprecated
style_bags - String 	Use the custom_attributes field instead. Deprecated
style_bottom - String 	Use the custom_attributes field instead. Deprecated
style_general - String 	Use the custom_attributes field instead. Deprecated
swatch_image - String 	The file name of a swatch image.
thumbnail - ProductImage 	The relative path to the product's thumbnail image.
tier_price - Float 	The price when tier pricing is in effect and the items purchased threshold has been reached. Use price_tiers for product tier price information. Deprecated
tier_prices - [ProductTierPrices] 	An array of ProductTierPrices objects. Use price_tiers for product tier price information. Deprecated
type - UrlRewriteEntityTypeEnum 	One of PRODUCT, CATEGORY, or CMS_PAGE.
type_id - String 	One of simple, virtual, bundle, downloadable, grouped, or configurable. Use __typename instead. Deprecated
uid - ID! 	The unique ID for a ProductInterface object.
updated_at - String 	Timestamp indicating when the product was updated. The field should not be used on the storefront. Deprecated
upsell_products - [ProductInterface] 	An array of up-sell products.
url_key - String 	The part of the URL that identifies the product
url_path - String 	Use product's canonical_url or url rewrites instead Deprecated
url_rewrites - [UrlRewrite] 	URL rewrites list
url_suffix - String 	The part of the product URL that is appended after the url key
websites - [Website] 	An array of websites in which the product is available. The field should not be used on the storefront. Deprecated
Example

{
  "activity": "xyz789",
  "attribute_set_id": 123,
  "canonical_url": "xyz789",
  "categories": [CategoryInterface],
  "category_gear": "xyz789",
  "climate": "xyz789",
  "collar": "xyz789",
  "color": 987,
  "country_of_manufacture": "abc123",
  "created_at": "abc123",
  "crosssell_products": [ProductInterface],
  "custom_attributesV2": ProductCustomAttributes,
  "description": ComplexTextValue,
  "downloadable_product_links": [
    DownloadableProductLinks
  ],
  "downloadable_product_samples": [
    DownloadableProductSamples
  ],
  "eco_collection": 987,
  "erin_recommends": 987,
  "features_bags": "abc123",
  "format": 123,
  "gender": "xyz789",
  "gift_message_available": true,
  "gift_wrapping_available": true,
  "gift_wrapping_price": Money,
  "id": 987,
  "image": ProductImage,
  "is_returnable": "abc123",
  "links_purchased_separately": 987,
  "links_title": "abc123",
  "manufacturer": 123,
  "material": "xyz789",
  "max_sale_qty": 123.45,
  "media_gallery": [MediaGalleryInterface],
  "media_gallery_entries": [MediaGalleryEntry],
  "meta_description": "xyz789",
  "meta_keyword": "abc123",
  "meta_title": "abc123",
  "min_sale_qty": 123.45,
  "name": "xyz789",
  "new": 987,
  "new_from_date": "xyz789",
  "new_to_date": "xyz789",
  "only_x_left_in_stock": 987.65,
  "options": [CustomizableOptionInterface],
  "options_container": "abc123",
  "pattern": "abc123",
  "performance_fabric": 987,
  "price": ProductPrices,
  "price_range": PriceRange,
  "price_tiers": [TierPrice],
  "product_links": [ProductLinksInterface],
  "purpose": 987,
  "quantity": 123.45,
  "rating_summary": 123.45,
  "redirect_code": 987,
  "related_products": [ProductInterface],
  "relative_url": "abc123",
  "review_count": 123,
  "reviews": ProductReviews,
  "rules": [CatalogRule],
  "sale": 123,
  "short_description": ComplexTextValue,
  "size": 123,
  "sku": "xyz789",
  "sleeve": "xyz789",
  "small_image": ProductImage,
  "special_from_date": "xyz789",
  "special_price": 987.65,
  "special_to_date": "abc123",
  "staged": false,
  "stock_status": "IN_STOCK",
  "strap_bags": "abc123",
  "style_bags": "abc123",
  "style_bottom": "abc123",
  "style_general": "abc123",
  "swatch_image": "abc123",
  "thumbnail": ProductImage,
  "tier_price": 123.45,
  "tier_prices": [ProductTierPrices],
  "type": "CMS_PAGE",
  "type_id": "abc123",
  "uid": 4,
  "updated_at": "abc123",
  "upsell_products": [ProductInterface],
  "url_key": "abc123",
  "url_path": "xyz789",
  "url_rewrites": [UrlRewrite],
  "url_suffix": "abc123",
  "websites": [Website]
}

back to top
Types
DownloadableProductCartItemInput
Description

Defines a single downloadable product.
Fields
Input Field 	Description
customizable_options - [CustomizableOptionInput] 	The ID and value of the option.
data - CartItemInput! 	The quantity and SKU of the downloadable product.
downloadable_product_links - [DownloadableProductLinksInput] 	An array of objects containing the link_id of the downloadable product link.
Example

{
  "customizable_options": [CustomizableOptionInput],
  "data": CartItemInput,
  "downloadable_product_links": [
    DownloadableProductLinksInput
  ]
}

back to top
Types
DownloadableProductLinks
Description

Defines characteristics of a downloadable product.
Fields
Field Name 	Description
id - Int 	This information should not be exposed on frontend. Deprecated
is_shareable - Boolean 	This information should not be exposed on frontend. Deprecated
link_type - DownloadableFileTypeEnum 	sample_url serves to get the downloadable sample Deprecated
number_of_downloads - Int 	This information should not be exposed on frontend. Deprecated
price - Float 	The price of the downloadable product.
sample_file - String 	sample_url serves to get the downloadable sample Deprecated
sample_type - DownloadableFileTypeEnum 	sample_url serves to get the downloadable sample Deprecated
sample_url - String 	The full URL to the downloadable sample.
sort_order - Int 	A number indicating the sort order.
title - String 	The display name of the link.
uid - ID! 	The unique ID for a DownloadableProductLinks object.
Example

{
  "id": 123,
  "is_shareable": false,
  "link_type": "FILE",
  "number_of_downloads": 123,
  "price": 123.45,
  "sample_file": "abc123",
  "sample_type": "FILE",
  "sample_url": "xyz789",
  "sort_order": 987,
  "title": "xyz789",
  "uid": "4"
}

back to top
Types
DownloadableProductLinksInput
Description

Contains the link ID for the downloadable product.
Fields
Input Field 	Description
link_id - Int! 	The unique ID of the downloadable product link.
Example

{"link_id": 987}

back to top
Types
DownloadableProductSamples
Description

Defines characteristics of a downloadable product.
Fields
Field Name 	Description
id - Int 	This information should not be exposed on frontend. Deprecated
sample_file - String 	sample_url serves to get the downloadable sample Deprecated
sample_type - DownloadableFileTypeEnum 	sample_url serves to get the downloadable sample Deprecated
sample_url - String 	The full URL to the downloadable sample.
sort_order - Int 	A number indicating the sort order.
title - String 	The display name of the sample.
Example

{
  "id": 123,
  "sample_file": "xyz789",
  "sample_type": "FILE",
  "sample_url": "abc123",
  "sort_order": 987,
  "title": "abc123"
}

back to top
Types
DownloadableRequisitionListItem
Description

Contains details about downloadable products added to a requisition list.
Fields
Field Name 	Description
customizable_options - [SelectedCustomizableOption]! 	Selected custom options for an item in the requisition list.
links - [DownloadableProductLinks] 	An array of links for downloadable products in the requisition list.
product - ProductInterface! 	Details about a requisition list item.
quantity - Float! 	The quantity of the product added to the requisition list.
samples - [DownloadableProductSamples] 	An array of links to downloadable product samples.
uid - ID! 	The unique ID of an item in a requisition list.
Example

{
  "customizable_options": [SelectedCustomizableOption],
  "links": [DownloadableProductLinks],
  "product": ProductInterface,
  "quantity": 987.65,
  "samples": [DownloadableProductSamples],
  "uid": 4
}

back to top
Types
DownloadableWishlistItem
Description

A downloadable product wish list item.
Fields
Field Name 	Description
added_at - String! 	The date and time the item was added to the wish list.
customizable_options - [SelectedCustomizableOption]! 	Custom options selected for the wish list item.
description - String 	The description of the item.
id - ID! 	The unique ID for a WishlistItemInterface object.
links_v2 - [DownloadableProductLinks] 	An array containing information about the selected links.
product - ProductInterface 	Product details of the wish list item.
quantity - Float! 	The quantity of this wish list item.
samples - [DownloadableProductSamples] 	An array containing information about the selected samples.
Example

{
  "added_at": "abc123",
  "customizable_options": [SelectedCustomizableOption],
  "description": "abc123",
  "id": 4,
  "links_v2": [DownloadableProductLinks],
  "product": ProductInterface,
  "quantity": 123.45,
  "samples": [DownloadableProductSamples]
}

back to top
Types
DuplicateNegotiableQuoteInput
Description

Identifies a quote to be duplicated
Fields
Input Field 	Description
duplicated_quote_uid - ID! 	ID for the newly duplicated quote.
quote_uid - ID! 	ID of the quote to be duplicated.
Example

{
  "duplicated_quote_uid": "4",
  "quote_uid": "4"
}

back to top
Types
DuplicateNegotiableQuoteOutput
Description

Contains the newly created negotiable quote.
Fields
Field Name 	Description
quote - NegotiableQuote 	Negotiable Quote resulting from duplication operation.
Example

{"quote": NegotiableQuote}

back to top
Types
DynamicBlock
Description

Contains a single dynamic block.
Fields
Field Name 	Description
content - ComplexTextValue! 	The renderable HTML code of the dynamic block.
uid - ID! 	The unique ID of a DynamicBlock object.
Example

{"content": ComplexTextValue, "uid": 4}

back to top
Types
DynamicBlockLocationEnum
Description

Indicates the locations the dynamic block can be placed. If this field is not specified, the query returns all locations.
Values
Enum Value 	Description

CONTENT


HEADER


FOOTER


LEFT


RIGHT

Example

"CONTENT"

back to top
Types
DynamicBlockTypeEnum
Description

Indicates the selected Dynamic Blocks Rotator inline widget.
Values
Enum Value 	Description

SPECIFIED


CART_PRICE_RULE_RELATED


CATALOG_PRICE_RULE_RELATED

Example

"SPECIFIED"

back to top
Types
DynamicBlocks
Description

Contains an array of dynamic blocks.
Fields
Field Name 	Description
items - [DynamicBlock]! 	An array containing individual dynamic blocks.
page_info - SearchResultPageInfo 	Metadata for pagination rendering.
total_count - Int! 	The number of returned dynamic blocks.
Example

{
  "items": [DynamicBlock],
  "page_info": SearchResultPageInfo,
  "total_count": 987
}

back to top
Types
DynamicBlocksFilterInput
Description

Defines the dynamic block filter. The filter can identify the block type, location and IDs to return.
Fields
Input Field 	Description
dynamic_block_uids - [ID] 	An array of dynamic block UIDs to filter on.
locations - [DynamicBlockLocationEnum] 	An array indicating the locations the dynamic block can be placed.
type - DynamicBlockTypeEnum! 	A value indicating the type of dynamic block to filter on.
Example

{
  "dynamic_block_uids": ["4"],
  "locations": ["CONTENT"],
  "type": "SPECIFIED"
}

back to top
Types
EnteredCustomAttributeInput
Description

Contains details about a custom text attribute that the buyer entered.
Fields
Input Field 	Description
attribute_code - String! 	A string that identifies the entered custom attribute.
value - String! 	The text or other entered value.
Example

{
  "attribute_code": "xyz789",
  "value": "abc123"
}

back to top
Types
EnteredOptionInput
Description

Defines a customer-entered option.
Fields
Input Field 	Description
uid - ID! 	The unique ID for a CustomizableOptionInterface object, such as a CustomizableFieldOption, CustomizableFileOption, or CustomizableAreaOption object.
value - String! 	Text the customer entered.
Example

{"uid": 4, "value": "abc123"}

back to top
Types
EntityUrl
Description

Contains the uid, relative_url, and type attributes.
Fields
Field Name 	Description
canonical_url - String 	Use relative_url instead. Deprecated
entity_uid - ID 	The unique ID for a ProductInterface, CategoryInterface, CmsPage, or similar object associated with the specified URL. This could be a product, category, or CMS page UID.
id - Int 	The ID assigned to the object associated with the specified url. This could be a product ID, category ID, or page ID. Use entity_uid instead. Deprecated
redirectCode - Int 	Contains 0 when there is no redirect error. A value of 301 indicates the URL of the requested resource has been changed permanently, while a value of 302 indicates a temporary redirect.
relative_url - String 	The internal relative URL. If the specified URL is a redirect, the query returns the redirected URL, not the original.
type - UrlRewriteEntityTypeEnum 	One of PRODUCT, CATEGORY, or CMS_PAGE.
Example

{
  "canonical_url": "xyz789",
  "entity_uid": 4,
  "id": 123,
  "redirectCode": 987,
  "relative_url": "xyz789",
  "type": "CMS_PAGE"
}

back to top
Types
Error
Description

An error encountered while adding an item to the the cart.
Fields
Field Name 	Description
code - CartUserInputErrorType! 	A cart-specific error code.
message - String! 	A localized error message.
Possible Types
Error Types

CartUserInputError

InsufficientStockError
Example

{
  "code": "PRODUCT_NOT_FOUND",
  "message": "abc123"
}

back to top
Types
ErrorInterface
Fields
Field Name 	Description
message - String! 	The returned error message.
Possible Types
ErrorInterface Types

NoSuchEntityUidError

InternalError

NegotiableQuoteInvalidStateError
Example

{"message": "abc123"}

back to top
Types
EstimateAddressInput
Description

Contains details about an address.
Fields
Input Field 	Description
country_code - CountryCodeEnum! 	The two-letter code representing the customer's country.
postcode - String 	The customer's ZIP or postal code.
region - CustomerAddressRegionInput 	An object containing the region name, region code, and region ID.
Example

{
  "country_code": "AF",
  "postcode": "abc123",
  "region": CustomerAddressRegionInput
}

back to top
Types
EstimateTotalsInput
Fields
Input Field 	Description
address - EstimateAddressInput! 	Customer's address to estimate totals.
cart_id - String! 	The unique ID of the cart to query.
shipping_method - ShippingMethodInput 	Selected shipping method to estimate totals.
Example

{
  "address": EstimateAddressInput,
  "cart_id": "xyz789",
  "shipping_method": ShippingMethodInput
}

back to top
Types
EstimateTotalsOutput
Description

Estimate totals output.
Fields
Field Name 	Description
cart - Cart 	Cart after totals estimation
Example

{"cart": Cart}

back to top
Types
ExchangeRate
Description

Lists the exchange rate.
Fields
Field Name 	Description
currency_to - String 	Specifies the store’s default currency to exchange to.
rate - Float 	The exchange rate for the store’s default currency.
Example

{"currency_to": "abc123", "rate": 987.65}

back to top
Types
FilterEqualTypeInput
Description

Defines a filter that matches the input exactly.
Fields
Input Field 	Description
eq - String 	Use this attribute to exactly match the specified string. For example, to filter on a specific category ID, specify a value such as 5.
in - [String] 	Use this attribute to filter on an array of values. For example, to filter on category IDs 4, 5, and 6, specify a value of ["4", "5", "6"].
Example

{
  "eq": "xyz789",
  "in": ["abc123"]
}

back to top
Types
FilterMatchTypeEnum
Values
Enum Value 	Description

FULL


PARTIAL

Example

"FULL"

back to top
Types
FilterMatchTypeInput
Description

Defines a filter that performs a fuzzy search.
Fields
Input Field 	Description
match - String 	Use this attribute to fuzzy match the specified string. For example, to filter on a specific SKU, specify a value such as 24-MB01.
match_type - FilterMatchTypeEnum 	Filter match type for fine-tuned results. Possible values FULL or PARTIAL. If match_type is not provided, returned results will default to FULL match.
Example

{"match": "abc123", "match_type": "FULL"}

back to top
Types
FilterRangeTypeInput
Description

Defines a filter that matches a range of values, such as prices or dates.
Fields
Input Field 	Description
from - String 	Use this attribute to specify the lowest possible value in the range.
to - String 	Use this attribute to specify the highest possible value in the range.
Example

{
  "from": "xyz789",
  "to": "xyz789"
}

back to top
Types
FilterStringTypeInput
Description

Defines a filter for an input string.
Fields
Input Field 	Description
eq - String 	Filters items that are exactly the same as the specified string.
in - [String] 	Filters items that are exactly the same as entries specified in an array of strings.
match - String 	Defines a filter that performs a fuzzy search using the specified string.
Example

{
  "eq": "xyz789",
  "in": ["abc123"],
  "match": "abc123"
}

back to top
Types
FilterTypeInput
Description

Defines the comparison operators that can be used in a filter.
Fields
Input Field 	Description
eq - String 	Equals.
finset - [String]
from - String 	From. Must be used with the to field.
gt - String 	Greater than.
gteq - String 	Greater than or equal to.
in - [String] 	In. The value can contain a set of comma-separated values.
like - String 	Like. The specified value can contain % (percent signs) to allow matching of 0 or more characters.
lt - String 	Less than.
lteq - String 	Less than or equal to.
moreq - String 	More than or equal to.
neq - String 	Not equal to.
nin - [String] 	Not in. The value can contain a set of comma-separated values.
notnull - String 	Not null.
null - String 	Is null.
to - String 	To. Must be used with the from field.
Example

{
  "eq": "xyz789",
  "finset": ["abc123"],
  "from": "xyz789",
  "gt": "abc123",
  "gteq": "abc123",
  "in": ["abc123"],
  "like": "abc123",
  "lt": "abc123",
  "lteq": "xyz789",
  "moreq": "xyz789",
  "neq": "abc123",
  "nin": ["xyz789"],
  "notnull": "abc123",
  "null": "xyz789",
  "to": "abc123"
}

back to top
Types
FixedProductTax
Description

A single FPT that can be applied to a product price.
Fields
Field Name 	Description
amount - Money 	The amount of the Fixed Product Tax.
label - String 	The display label assigned to the Fixed Product Tax.
Example

{
  "amount": Money,
  "label": "xyz789"
}

back to top
Types
FixedProductTaxDisplaySettings
Description

Lists display settings for the Fixed Product Tax.
Values
Enum Value 	Description

INCLUDE_FPT_WITHOUT_DETAILS
	The displayed price includes the FPT amount without displaying the ProductPrice.fixed_product_taxes values. This value corresponds to 'Including FPT only'.

INCLUDE_FPT_WITH_DETAILS
	The displayed price includes the FPT amount while displaying the values of ProductPrice.fixed_product_taxes separately. This value corresponds to 'Including FPT and FPT description'.

EXCLUDE_FPT_AND_INCLUDE_WITH_DETAILS
	The displayed price does not include the FPT amount. The values of ProductPrice.fixed_product_taxes and the price including the FPT are displayed separately. This value corresponds to 'Excluding FPT, Including FPT description and final price.'

EXCLUDE_FPT_WITHOUT_DETAILS
	The displayed price does not include the FPT amount. The values from ProductPrice.fixed_product_taxes are not displayed. This value corresponds to 'Excluding FPT'.

FPT_DISABLED
	The FPT feature is not enabled. You can omit ProductPrice.fixed_product_taxes from your query.
Example

"INCLUDE_FPT_WITHOUT_DETAILS"

back to top
Types
Float
Description

The Float scalar type represents signed double-precision fractional values as specified by IEEE 754.
Example

987.65

back to top
Types
GenerateCustomerTokenAsAdminInput
Description

Identifies which customer requires remote shopping assistance.
Fields
Input Field 	Description
customer_email - String! 	The email address of the customer requesting remote shopping assistance.
Example

{"customer_email": "abc123"}

back to top
Types
GenerateCustomerTokenAsAdminOutput
Description

Contains the generated customer token.
Fields
Field Name 	Description
customer_token - String! 	The generated customer token.
Example

{"customer_token": "xyz789"}

back to top
Types
GenerateNegotiableQuoteFromTemplateInput
Description

Specifies the template id, from which to generate quote from.
Fields
Input Field 	Description
template_id - ID! 	The unique ID of a NegotiableQuoteTemplate object.
Example

{"template_id": 4}

back to top
Types
GenerateNegotiableQuoteFromTemplateOutput
Description

Contains the generated negotiable quote id.
Fields
Field Name 	Description
negotiable_quote_uid - ID! 	The unique ID of a generated NegotiableQuote object.
Example

{"negotiable_quote_uid": 4}

back to top
Types
GetPaymentSDKOutput
Description

Gets the payment SDK URLs and values
Fields
Field Name 	Description
sdkParams - [PaymentSDKParamsItem] 	The payment SDK parameters
Example

{"sdkParams": [PaymentSDKParamsItem]}

back to top
Types
GiftCardAccount
Description

Contains details about the gift card account.
Fields
Field Name 	Description
balance - Money 	The balance remaining on the gift card.
code - String 	The gift card account code.
expiration_date - String 	The expiration date of the gift card.
Example

{
  "balance": Money,
  "code": "xyz789",
  "expiration_date": "xyz789"
}

back to top
Types
GiftCardAccountInput
Description

Contains the gift card code.
Fields
Input Field 	Description
gift_card_code - String! 	The applied gift card code.
Example

{"gift_card_code": "abc123"}

back to top
Types
GiftCardAmounts
Description

Contains the value of a gift card, the website that generated the card, and related information.
Fields
Field Name 	Description
attribute_id - Int 	An internal attribute ID.
uid - ID! 	The unique ID for a GiftCardAmounts object.
value - Float 	The value of the gift card.
value_id - Int 	An ID that is assigned to each unique gift card amount. Use uid instead Deprecated
website_id - Int 	The ID of the website that generated the gift card.
website_value - Float 	The value of the gift card.
Example

{
  "attribute_id": 987,
  "uid": 4,
  "value": 987.65,
  "value_id": 987,
  "website_id": 987,
  "website_value": 987.65
}

back to top
Types
GiftCardCartItem
Description

Contains details about a gift card that has been added to a cart.
Fields
Field Name 	Description
amount - Money! 	The amount and currency of the gift card.
available_gift_wrapping - [GiftWrapping]! 	The list of available gift wrapping options for the cart item.
customizable_options - [SelectedCustomizableOption]! 	An array of customizations applied to the gift card.
discount - [Discount] 	Contains discount for quote line item.
errors - [CartItemError] 	An array of errors encountered while loading the cart item
gift_message - GiftMessage 	The entered gift message data for the gift card cart item
gift_wrapping - GiftWrapping 	The selected gift wrapping option for the cart item.
id - String! 	Use uid instead. Deprecated
is_available - Boolean! 	True if requested quantity is less than available stock, false otherwise.
max_qty - Float 	Line item max qty in quote template
message - String 	The message from the sender to the recipient.
min_qty - Float 	Line item min qty in quote template
not_available_message - String 	Message to display when the product is not available with this selected option.
note_from_buyer - [ItemNote] 	The buyer's quote line item note.
note_from_seller - [ItemNote] 	The seller's quote line item note.
prices - CartItemPrices 	Contains details about the price of the item, including taxes and discounts.
product - ProductInterface! 	Details about an item in the cart.
quantity - Float! 	The quantity of this item in the cart.
recipient_email - String 	The email address of the person receiving the gift card.
recipient_name - String! 	The name of the person receiving the gift card.
sender_email - String 	The email address of the sender.
sender_name - String! 	The name of the sender.
uid - ID! 	The unique ID for a CartItemInterface object.
Example

{
  "amount": Money,
  "available_gift_wrapping": [GiftWrapping],
  "customizable_options": [SelectedCustomizableOption],
  "discount": [Discount],
  "errors": [CartItemError],
  "gift_message": GiftMessage,
  "gift_wrapping": GiftWrapping,
  "id": "xyz789",
  "is_available": false,
  "max_qty": 987.65,
  "message": "abc123",
  "min_qty": 123.45,
  "not_available_message": "abc123",
  "note_from_buyer": [ItemNote],
  "note_from_seller": [ItemNote],
  "prices": CartItemPrices,
  "product": ProductInterface,
  "quantity": 987.65,
  "recipient_email": "xyz789",
  "recipient_name": "xyz789",
  "sender_email": "xyz789",
  "sender_name": "abc123",
  "uid": "4"
}

back to top
Types
GiftCardCreditMemoItem
Fields
Field Name 	Description
discounts - [Discount] 	Details about the final discount amount for the base product, including discounts on options.
gift_card - GiftCardItem 	Selected gift card properties for a credit memo item.
id - ID! 	The unique ID for a CreditMemoItemInterface object.
order_item - OrderItemInterface 	The order item the credit memo is applied to.
product_name - String 	The name of the base product.
product_sale_price - Money! 	The sale price for the base product, including selected options.
product_sku - String! 	The SKU of the base product.
quantity_refunded - Float 	The number of refunded items.
Example

{
  "discounts": [Discount],
  "gift_card": GiftCardItem,
  "id": "4",
  "order_item": OrderItemInterface,
  "product_name": "xyz789",
  "product_sale_price": Money,
  "product_sku": "xyz789",
  "quantity_refunded": 123.45
}

back to top
Types
GiftCardInvoiceItem
Fields
Field Name 	Description
discounts - [Discount] 	Information about the final discount amount for the base product, including discounts on options.
gift_card - GiftCardItem 	Selected gift card properties for an invoice item.
id - ID! 	The unique ID for an InvoiceItemInterface object.
order_item - OrderItemInterface 	Details about an individual order item.
product_name - String 	The name of the base product.
product_sale_price - Money! 	The sale price for the base product including selected options.
product_sku - String! 	The SKU of the base product.
quantity_invoiced - Float 	The number of invoiced items.
Example

{
  "discounts": [Discount],
  "gift_card": GiftCardItem,
  "id": 4,
  "order_item": OrderItemInterface,
  "product_name": "abc123",
  "product_sale_price": Money,
  "product_sku": "abc123",
  "quantity_invoiced": 123.45
}

back to top
Types
GiftCardItem
Description

Contains details about a gift card.
Fields
Field Name 	Description
message - String 	The message from the sender to the recipient.
recipient_email - String 	The email address of the receiver of a virtual gift card.
recipient_name - String 	The name of the receiver of a physical or virtual gift card.
sender_email - String 	The email address of the sender of a virtual gift card.
sender_name - String 	The name of the sender of a physical or virtual gift card.
Example

{
  "message": "xyz789",
  "recipient_email": "xyz789",
  "recipient_name": "xyz789",
  "sender_email": "abc123",
  "sender_name": "abc123"
}

back to top
Types
GiftCardOptions
Description

Contains details about the sender, recipient, and amount of a gift card.
Fields
Field Name 	Description
amount - Money 	The amount and currency of the gift card.
custom_giftcard_amount - Money 	The custom amount and currency of the gift card.
message - String 	A message to the recipient.
recipient_email - String 	The email address of the person receiving the gift card.
recipient_name - String 	The name of the person receiving the gift card.
sender_email - String 	The email address of the person sending the gift card.
sender_name - String 	The name of the person sending the gift card.
Example

{
  "amount": Money,
  "custom_giftcard_amount": Money,
  "message": "abc123",
  "recipient_email": "abc123",
  "recipient_name": "abc123",
  "sender_email": "abc123",
  "sender_name": "abc123"
}

back to top
Types
GiftCardOrderItem
Fields
Field Name 	Description
discounts - [Discount] 	The final discount information for the product.
eligible_for_return - Boolean 	Indicates whether the order item is eligible to be in a return request.
entered_options - [OrderItemOption] 	The entered option for the base product, such as a logo or image.
gift_card - GiftCardItem 	Selected gift card properties for an order item.
gift_message - GiftMessage 	The selected gift message for the order item
gift_wrapping - GiftWrapping 	The selected gift wrapping for the order item.
id - ID! 	The unique ID for an OrderItemInterface object.
prices - OrderItemPrices 	Contains details about the price of the item, including taxes and discounts.
product - ProductInterface 	The ProductInterface object, which contains details about the base product
product_name - String 	The name of the base product.
product_sale_price - Money! 	The sale price of the base product, including selected options.
product_sku - String! 	The SKU of the base product.
product_type - String 	The type of product, such as simple, configurable, etc.
product_url_key - String 	URL key of the base product.
quantity_canceled - Float 	The number of canceled items.
quantity_invoiced - Float 	The number of invoiced items.
quantity_ordered - Float 	The number of units ordered for this item.
quantity_refunded - Float 	The number of refunded items.
quantity_return_requested - Float 	The requested return quantity of the item.
quantity_returned - Float 	The number of returned items.
quantity_shipped - Float 	The number of shipped items.
selected_options - [OrderItemOption] 	The selected options for the base product, such as color or size.
status - String 	The status of the order item.
Example

{
  "discounts": [Discount],
  "eligible_for_return": true,
  "entered_options": [OrderItemOption],
  "gift_card": GiftCardItem,
  "gift_message": GiftMessage,
  "gift_wrapping": GiftWrapping,
  "id": "4",
  "prices": OrderItemPrices,
  "product": ProductInterface,
  "product_name": "abc123",
  "product_sale_price": Money,
  "product_sku": "abc123",
  "product_type": "xyz789",
  "product_url_key": "xyz789",
  "quantity_canceled": 987.65,
  "quantity_invoiced": 987.65,
  "quantity_ordered": 987.65,
  "quantity_refunded": 987.65,
  "quantity_return_requested": 123.45,
  "quantity_returned": 123.45,
  "quantity_shipped": 123.45,
  "selected_options": [OrderItemOption],
  "status": "xyz789"
}

back to top
Types
GiftCardProduct
Description

Defines properties of a gift card.
Fields
Field Name 	Description
activity - String 	Use the custom_attributes field instead. Deprecated
allow_message - Boolean 	Indicates whether the customer can provide a message to accompany the gift card.
allow_open_amount - Boolean 	Indicates whether shoppers have the ability to set the value of the gift card.
attribute_set_id - Int 	The attribute set assigned to the product. The field should not be used on the storefront. Deprecated
canonical_url - String 	The relative canonical URL. This value is returned only if the system setting 'Use Canonical Link Meta Tag For Products' is enabled.
categories - [CategoryInterface] 	The categories assigned to a product.
category_gear - String 	Use the custom_attributes field instead. Deprecated
climate - String 	Use the custom_attributes field instead. Deprecated
collar - String 	Use the custom_attributes field instead. Deprecated
color - Int 	Use the custom_attributes field instead. Deprecated
country_of_manufacture - String 	The product's country of origin.
created_at - String 	Timestamp indicating when the product was created. The field should not be used on the storefront. Deprecated
crosssell_products - [ProductInterface] 	An array of cross-sell products.
custom_attributesV2 - ProductCustomAttributes 	Product custom attributes.
description - ComplexTextValue 	Detailed information about the product. The value can include simple HTML tags.
eco_collection - Int 	Use the custom_attributes field instead. Deprecated
erin_recommends - Int 	Use the custom_attributes field instead. Deprecated
features_bags - String 	Use the custom_attributes field instead. Deprecated
format - Int 	Use the custom_attributes field instead. Deprecated
gender - String 	Use the custom_attributes field instead. Deprecated
gift_card_options - [CustomizableOptionInterface]! 	An array of customizable gift card options.
gift_message_available - Boolean! 	Returns a value indicating gift message availability for the product.
gift_wrapping_available - Boolean! 	Returns a value indicating gift wrapping availability for the product.
gift_wrapping_price - Money 	Returns value and currency indicating gift wrapping price for the product.
giftcard_amounts - [GiftCardAmounts] 	An array that contains information about the values and ID of a gift card.
giftcard_type - GiftCardTypeEnum 	An enumeration that specifies the type of gift card.
id - Int 	The ID number assigned to the product. Use the uid field instead. Deprecated
image - ProductImage 	The relative path to the main image on the product page.
is_redeemable - Boolean 	Indicates whether the customer can redeem the value on the card for cash.
is_returnable - String 	Indicates whether the product can be returned.
lifetime - Int 	The number of days after purchase until the gift card expires. A null value means there is no limit.
manufacturer - Int 	A number representing the product's manufacturer. Use the custom_attributes field instead. Deprecated
material - String 	Use the custom_attributes field instead. Deprecated
max_sale_qty - Float 	Maximum Qty Allowed in Shopping Cart
media_gallery - [MediaGalleryInterface] 	An array of media gallery objects.
media_gallery_entries - [MediaGalleryEntry] 	An array of MediaGalleryEntry objects. Use media_gallery instead. Deprecated
message_max_length - Int 	The maximum number of characters the gift message can contain.
meta_description - String 	A brief overview of the product for search results listings, maximum 255 characters.
meta_keyword - String 	A comma-separated list of keywords that are visible only to search engines.
meta_title - String 	A string that is displayed in the title bar and tab of the browser and in search results lists.
min_sale_qty - Float 	Minimum Qty Allowed in Shopping Cart
name - String 	The product name. Customers use this name to identify the product.
new - Int 	Use the custom_attributes field instead. Deprecated
new_from_date - String 	The beginning date for new product listings, and determines if the product is featured as a new product.
new_to_date - String 	The end date for new product listings.
only_x_left_in_stock - Float 	Product stock only x left count
open_amount_max - Float 	The maximum acceptable value of an open amount gift card.
open_amount_min - Float 	The minimum acceptable value of an open amount gift card.
options - [CustomizableOptionInterface] 	An array of options for a customizable product.
options_container - String 	If the product has multiple options, determines where they appear on the product page.
pattern - String 	Use the custom_attributes field instead. Deprecated
performance_fabric - Int 	Use the custom_attributes field instead. Deprecated
price - ProductPrices 	Indicates the price of an item. Use price_range for product price information. Deprecated
price_range - PriceRange! 	The range of prices for the product
price_tiers - [TierPrice] 	An array of TierPrice objects.
product_links - [ProductLinksInterface] 	An array of ProductLinks objects.
purpose - Int 	Use the custom_attributes field instead. Deprecated
quantity - Float 	Amount of available stock
rating_summary - Float! 	The average of all the ratings given to the product.
redirect_code - Int! 	Contains 0 when there is no redirect error. A value of 301 indicates the URL of the requested resource has been changed permanently, while a value of 302 indicates a temporary redirect.
related_products - [ProductInterface] 	An array of related products.
relative_url - String 	The internal relative URL. If the specified URL is a redirect, the query returns the redirected URL, not the original.
review_count - Int! 	The total count of all the reviews given to the product.
reviews - ProductReviews! 	The list of products reviews.
rules - [CatalogRule] 	Provides applied catalog rules in the current active cart
sale - Int 	Use the custom_attributes field instead. Deprecated
short_description - ComplexTextValue 	A short description of the product. Its use depends on the theme.
size - Int 	Use the custom_attributes field instead. Deprecated
sku - String 	A number or code assigned to a product to identify the product, options, price, and manufacturer.
sleeve - String 	Use the custom_attributes field instead. Deprecated
small_image - ProductImage 	The relative path to the small image, which is used on catalog pages.
special_from_date - String 	The beginning date that a product has a special price. The field should not be used on the storefront. Deprecated
special_price - Float 	The discounted price of the product.
special_to_date - String 	The end date for a product with a special price.
staged - Boolean! 	Indicates whether the product is staged for a future campaign.
stock_status - ProductStockStatus 	Stock status of the product
strap_bags - String 	Use the custom_attributes field instead. Deprecated
style_bags - String 	Use the custom_attributes field instead. Deprecated
style_bottom - String 	Use the custom_attributes field instead. Deprecated
style_general - String 	Use the custom_attributes field instead. Deprecated
swatch_image - String 	The file name of a swatch image.
thumbnail - ProductImage 	The relative path to the product's thumbnail image.
tier_price - Float 	The price when tier pricing is in effect and the items purchased threshold has been reached. Use price_tiers for product tier price information. Deprecated
tier_prices - [ProductTierPrices] 	An array of ProductTierPrices objects. Use price_tiers for product tier price information. Deprecated
type - UrlRewriteEntityTypeEnum 	One of PRODUCT, CATEGORY, or CMS_PAGE.
type_id - String 	One of simple, virtual, bundle, downloadable, grouped, or configurable. Use __typename instead. Deprecated
uid - ID! 	The unique ID for a ProductInterface object.
updated_at - String 	Timestamp indicating when the product was updated. The field should not be used on the storefront. Deprecated
upsell_products - [ProductInterface] 	An array of up-sell products.
url_key - String 	The part of the URL that identifies the product
url_path - String 	Use product's canonical_url or url rewrites instead Deprecated
url_rewrites - [UrlRewrite] 	URL rewrites list
url_suffix - String 	The part of the product URL that is appended after the url key
websites - [Website] 	An array of websites in which the product is available. The field should not be used on the storefront. Deprecated
weight - Float 	The weight of the item, in units defined by the store.
Example

{
  "activity": "abc123",
  "allow_message": true,
  "allow_open_amount": true,
  "attribute_set_id": 987,
  "canonical_url": "abc123",
  "categories": [CategoryInterface],
  "category_gear": "xyz789",
  "climate": "abc123",
  "collar": "abc123",
  "color": 987,
  "country_of_manufacture": "xyz789",
  "created_at": "abc123",
  "crosssell_products": [ProductInterface],
  "custom_attributesV2": ProductCustomAttributes,
  "description": ComplexTextValue,
  "eco_collection": 987,
  "erin_recommends": 987,
  "features_bags": "abc123",
  "format": 123,
  "gender": "xyz789",
  "gift_card_options": [CustomizableOptionInterface],
  "gift_message_available": true,
  "gift_wrapping_available": true,
  "gift_wrapping_price": Money,
  "giftcard_amounts": [GiftCardAmounts],
  "giftcard_type": "VIRTUAL",
  "id": 987,
  "image": ProductImage,
  "is_redeemable": true,
  "is_returnable": "xyz789",
  "lifetime": 987,
  "manufacturer": 123,
  "material": "abc123",
  "max_sale_qty": 123.45,
  "media_gallery": [MediaGalleryInterface],
  "media_gallery_entries": [MediaGalleryEntry],
  "message_max_length": 123,
  "meta_description": "xyz789",
  "meta_keyword": "abc123",
  "meta_title": "xyz789",
  "min_sale_qty": 123.45,
  "name": "abc123",
  "new": 987,
  "new_from_date": "xyz789",
  "new_to_date": "abc123",
  "only_x_left_in_stock": 123.45,
  "open_amount_max": 987.65,
  "open_amount_min": 987.65,
  "options": [CustomizableOptionInterface],
  "options_container": "xyz789",
  "pattern": "xyz789",
  "performance_fabric": 987,
  "price": ProductPrices,
  "price_range": PriceRange,
  "price_tiers": [TierPrice],
  "product_links": [ProductLinksInterface],
  "purpose": 123,
  "quantity": 123.45,
  "rating_summary": 123.45,
  "redirect_code": 123,
  "related_products": [ProductInterface],
  "relative_url": "xyz789",
  "review_count": 123,
  "reviews": ProductReviews,
  "rules": [CatalogRule],
  "sale": 987,
  "short_description": ComplexTextValue,
  "size": 123,
  "sku": "abc123",
  "sleeve": "xyz789",
  "small_image": ProductImage,
  "special_from_date": "xyz789",
  "special_price": 987.65,
  "special_to_date": "xyz789",
  "staged": false,
  "stock_status": "IN_STOCK",
  "strap_bags": "abc123",
  "style_bags": "xyz789",
  "style_bottom": "abc123",
  "style_general": "abc123",
  "swatch_image": "abc123",
  "thumbnail": ProductImage,
  "tier_price": 987.65,
  "tier_prices": [ProductTierPrices],
  "type": "CMS_PAGE",
  "type_id": "xyz789",
  "uid": "4",
  "updated_at": "xyz789",
  "upsell_products": [ProductInterface],
  "url_key": "abc123",
  "url_path": "xyz789",
  "url_rewrites": [UrlRewrite],
  "url_suffix": "abc123",
  "websites": [Website],
  "weight": 123.45
}

back to top
Types
GiftCardRequisitionListItem
Description

Contains details about gift cards added to a requisition list.
Fields
Field Name 	Description
customizable_options - [SelectedCustomizableOption]! 	Selected custom options for an item in the requisition list.
gift_card_options - GiftCardOptions! 	An array that defines gift card properties.
product - ProductInterface! 	Details about a requisition list item.
quantity - Float! 	The amount added.
uid - ID! 	The unique ID for the requisition list item.
Example

{
  "customizable_options": [SelectedCustomizableOption],
  "gift_card_options": GiftCardOptions,
  "product": ProductInterface,
  "quantity": 123.45,
  "uid": "4"
}

back to top
Types
GiftCardShipmentItem
Fields
Field Name 	Description
gift_card - GiftCardItem 	Selected gift card properties for a shipment item.
id - ID! 	The unique ID for a ShipmentItemInterface object.
order_item - OrderItemInterface 	The order item associated with the shipment item.
product_name - String 	The name of the base product.
product_sale_price - Money! 	The sale price for the base product.
product_sku - String! 	The SKU of the base product.
quantity_shipped - Float! 	The number of shipped items.
Example

{
  "gift_card": GiftCardItem,
  "id": 4,
  "order_item": OrderItemInterface,
  "product_name": "abc123",
  "product_sale_price": Money,
  "product_sku": "xyz789",
  "quantity_shipped": 987.65
}

back to top
Types
GiftCardTypeEnum
Description

Specifies the gift card type.
Values
Enum Value 	Description

VIRTUAL


PHYSICAL


COMBINED

Example

"VIRTUAL"

back to top
Types
GiftCardWishlistItem
Description

A single gift card added to a wish list.
Fields
Field Name 	Description
added_at - String! 	The date and time the item was added to the wish list.
customizable_options - [SelectedCustomizableOption]! 	Custom options selected for the wish list item.
description - String 	The description of the item.
gift_card_options - GiftCardOptions! 	Details about a gift card.
id - ID! 	The unique ID for a WishlistItemInterface object.
product - ProductInterface 	Product details of the wish list item.
quantity - Float! 	The quantity of this wish list item.
Example

{
  "added_at": "xyz789",
  "customizable_options": [SelectedCustomizableOption],
  "description": "abc123",
  "gift_card_options": GiftCardOptions,
  "id": "4",
  "product": ProductInterface,
  "quantity": 123.45
}

back to top
Types
GiftMessage
Description

Contains the text of a gift message, its sender, and recipient
Fields
Field Name 	Description
from - String! 	Sender name
message - String! 	Gift message text
to - String! 	Recipient name
Example

{
  "from": "xyz789",
  "message": "xyz789",
  "to": "xyz789"
}

back to top
Types
GiftMessageInput
Description

Defines a gift message.
Fields
Input Field 	Description
from - String! 	The name of the sender.
message - String! 	The text of the gift message.
to - String! 	The name of the recepient.
Example

{
  "from": "abc123",
  "message": "abc123",
  "to": "xyz789"
}

back to top
Types
GiftOptionsPrices
Description

Contains prices for gift wrapping options.
Fields
Field Name 	Description
gift_wrapping_for_items - Money 	Price of the gift wrapping for all individual order items.
gift_wrapping_for_items_incl_tax - Money 	Price of the gift wrapping for all individual order items including tax.
gift_wrapping_for_order - Money 	Price of the gift wrapping for the whole order.
gift_wrapping_for_order_incl_tax - Money 	Price of the gift wrapping for the whole order including tax.
printed_card - Money 	Price for the printed card.
printed_card_incl_tax - Money 	Price for the printed card including tax.
Example

{
  "gift_wrapping_for_items": Money,
  "gift_wrapping_for_items_incl_tax": Money,
  "gift_wrapping_for_order": Money,
  "gift_wrapping_for_order_incl_tax": Money,
  "printed_card": Money,
  "printed_card_incl_tax": Money
}

back to top
Types
GiftRegistry
Description

Contains details about a gift registry.
Fields
Field Name 	Description
created_at - String! 	The date on which the gift registry was created. Only the registry owner can access this attribute.
dynamic_attributes - [GiftRegistryDynamicAttribute] 	An array of attributes that define elements of the gift registry. Each attribute is specified as a code-value pair.
event_name - String! 	The name of the event.
items - [GiftRegistryItemInterface] 	An array of products added to the gift registry.
message - String! 	The message text the customer entered to describe the event.
owner_name - String! 	The customer who created the gift registry.
privacy_settings - GiftRegistryPrivacySettings! 	An enum that states whether the gift registry is PRIVATE or PUBLIC. Only the registry owner can access this attribute.
registrants - [GiftRegistryRegistrant] 	Contains details about each registrant for the event.
shipping_address - CustomerAddress 	Contains the customer's shipping address. Only the registry owner can access this attribute.
status - GiftRegistryStatus! 	An enum that states whether the gift registry is ACTIVE or INACTIVE. Only the registry owner can access this attribute.
type - GiftRegistryType 	The type of gift registry.
uid - ID! 	The unique ID assigned to the gift registry.
Example

{
  "created_at": "xyz789",
  "dynamic_attributes": [GiftRegistryDynamicAttribute],
  "event_name": "abc123",
  "items": [GiftRegistryItemInterface],
  "message": "xyz789",
  "owner_name": "abc123",
  "privacy_settings": "PRIVATE",
  "registrants": [GiftRegistryRegistrant],
  "shipping_address": CustomerAddress,
  "status": "ACTIVE",
  "type": GiftRegistryType,
  "uid": 4
}

back to top
Types
GiftRegistryDynamicAttribute
Fields
Field Name 	Description
code - ID! 	The internal ID of the dynamic attribute.
group - GiftRegistryDynamicAttributeGroup! 	Indicates which group the dynamic attribute is a member of.
label - String! 	The display name of the dynamic attribute.
value - String! 	A corresponding value for the code.
Example

{
  "code": "4",
  "group": "EVENT_INFORMATION",
  "label": "abc123",
  "value": "xyz789"
}

back to top
Types
GiftRegistryDynamicAttributeGroup
Description

Defines the group type of a gift registry dynamic attribute.
Values
Enum Value 	Description

EVENT_INFORMATION


PRIVACY_SETTINGS


REGISTRANT


GENERAL_INFORMATION


DETAILED_INFORMATION


SHIPPING_ADDRESS

Example

"EVENT_INFORMATION"

back to top
Types
GiftRegistryDynamicAttributeInput
Description

Defines a dynamic attribute.
Fields
Input Field 	Description
code - ID! 	A unique key for an additional attribute of the event.
value - String! 	A string that describes a dynamic attribute.
Example

{"code": 4, "value": "abc123"}

back to top
Types
GiftRegistryDynamicAttributeInterface
Fields
Field Name 	Description
code - ID! 	The internal ID of the dynamic attribute.
label - String! 	The display name of the dynamic attribute.
value - String! 	A corresponding value for the code.
Possible Types
GiftRegistryDynamicAttributeInterface Types

GiftRegistryRegistrantDynamicAttribute

GiftRegistryDynamicAttribute
Example

{
  "code": "4",
  "label": "xyz789",
  "value": "xyz789"
}

back to top
Types
GiftRegistryDynamicAttributeMetadata
Fields
Field Name 	Description
attribute_group - String! 	Indicates which group the dynamic attribute a member of.
code - ID! 	The internal ID of the dynamic attribute.
input_type - String! 	The selected input type for this dynamic attribute. The value can be one of several static or custom types.
is_required - Boolean! 	Indicates whether the dynamic attribute is required.
label - String! 	The display name of the dynamic attribute.
sort_order - Int 	The order in which to display the dynamic attribute.
Example

{
  "attribute_group": "abc123",
  "code": 4,
  "input_type": "xyz789",
  "is_required": true,
  "label": "abc123",
  "sort_order": 987
}

back to top
Types
GiftRegistryDynamicAttributeMetadataInterface
Fields
Field Name 	Description
attribute_group - String! 	Indicates which group the dynamic attribute a member of.
code - ID! 	The internal ID of the dynamic attribute.
input_type - String! 	The selected input type for this dynamic attribute. The value can be one of several static or custom types.
is_required - Boolean! 	Indicates whether the dynamic attribute is required.
label - String! 	The display name of the dynamic attribute.
sort_order - Int 	The order in which to display the dynamic attribute.
Possible Types
GiftRegistryDynamicAttributeMetadataInterface Types

GiftRegistryDynamicAttributeMetadata
Example

{
  "attribute_group": "abc123",
  "code": "4",
  "input_type": "xyz789",
  "is_required": false,
  "label": "abc123",
  "sort_order": 987
}

back to top
Types
GiftRegistryItem
Fields
Field Name 	Description
created_at - String! 	The date the product was added to the gift registry.
note - String 	A brief message about the gift registry item.
product - ProductInterface 	Details about the gift registry item.
quantity - Float! 	The requested quantity of the product.
quantity_fulfilled - Float! 	The fulfilled quantity of the product.
uid - ID! 	The unique ID of a gift registry item.
Example

{
  "created_at": "abc123",
  "note": "abc123",
  "product": ProductInterface,
  "quantity": 123.45,
  "quantity_fulfilled": 987.65,
  "uid": "4"
}

back to top
Types
GiftRegistryItemInterface
Fields
Field Name 	Description
created_at - String! 	The date the product was added to the gift registry.
note - String 	A brief message about the gift registry item.
product - ProductInterface 	Details about the gift registry item.
quantity - Float! 	The requested quantity of the product.
quantity_fulfilled - Float! 	The fulfilled quantity of the product.
uid - ID! 	The unique ID of a gift registry item.
Possible Types
GiftRegistryItemInterface Types

GiftRegistryItem
Example

{
  "created_at": "abc123",
  "note": "xyz789",
  "product": ProductInterface,
  "quantity": 123.45,
  "quantity_fulfilled": 123.45,
  "uid": "4"
}

back to top
Types
GiftRegistryItemUserErrorInterface
Description

Contains the status and any errors that encountered with the customer's gift register item.
Fields
Field Name 	Description
status - Boolean! 	Indicates whether the attempt to move the cart items to the gift registry was successful.
user_errors - [GiftRegistryItemsUserError]! 	An array of errors encountered while moving items from the cart to the gift registry.
Possible Types
GiftRegistryItemUserErrorInterface Types

MoveCartItemsToGiftRegistryOutput
Example

{
  "status": true,
  "user_errors": [GiftRegistryItemsUserError]
}

back to top
Types
GiftRegistryItemsUserError
Description

Contains details about an error that occurred when processing a gift registry item.
Fields
Field Name 	Description
code - GiftRegistryItemsUserErrorType! 	An error code that describes the error encountered.
gift_registry_item_uid - ID 	The unique ID of the gift registry item containing an error.
gift_registry_uid - ID 	The unique ID of the GiftRegistry object containing an error.
message - String! 	A localized error message.
product_uid - ID 	The unique ID of the product containing an error.
Example

{
  "code": "OUT_OF_STOCK",
  "gift_registry_item_uid": 4,
  "gift_registry_uid": 4,
  "message": "xyz789",
  "product_uid": 4
}

back to top
Types
GiftRegistryItemsUserErrorType
Description

Defines the error type.
Values
Enum Value 	Description

OUT_OF_STOCK
	Used for handling out of stock products.

NOT_FOUND
	Used for exceptions like EntityNotFound.

UNDEFINED
	Used for other exceptions, such as database connection failures.
Example

"OUT_OF_STOCK"

back to top
Types
GiftRegistryOutputInterface
Description

Contains the customer's gift registry.
Fields
Field Name 	Description
gift_registry - GiftRegistry 	The gift registry.
Possible Types
GiftRegistryOutputInterface Types

MoveCartItemsToGiftRegistryOutput
Example

{"gift_registry": GiftRegistry}

back to top
Types
GiftRegistryPrivacySettings
Description

Defines the privacy setting of the gift registry.
Values
Enum Value 	Description

PRIVATE


PUBLIC

Example

"PRIVATE"

back to top
Types
GiftRegistryRegistrant
Description

Contains details about a registrant.
Fields
Field Name 	Description
dynamic_attributes - [GiftRegistryRegistrantDynamicAttribute] 	An array of dynamic attributes assigned to the registrant.
email - String! 	The email address of the registrant. Only the registry owner can access this attribute.
firstname - String! 	The first name of the registrant.
lastname - String! 	The last name of the registrant.
uid - ID! 	The unique ID assigned to the registrant.
Example

{
  "dynamic_attributes": [
    GiftRegistryRegistrantDynamicAttribute
  ],
  "email": "abc123",
  "firstname": "xyz789",
  "lastname": "xyz789",
  "uid": "4"
}

back to top
Types
GiftRegistryRegistrantDynamicAttribute
Fields
Field Name 	Description
code - ID! 	The internal ID of the dynamic attribute.
label - String! 	The display name of the dynamic attribute.
value - String! 	A corresponding value for the code.
Example

{
  "code": "4",
  "label": "abc123",
  "value": "xyz789"
}

back to top
Types
GiftRegistrySearchResult
Description

Contains the results of a gift registry search.
Fields
Field Name 	Description
event_date - String 	The date of the event.
event_title - String! 	The title given to the event.
gift_registry_uid - ID! 	The URL key of the gift registry.
location - String 	The location of the event.
name - String! 	The name of the gift registry owner.
type - String 	The type of event being held.
Example

{
  "event_date": "abc123",
  "event_title": "xyz789",
  "gift_registry_uid": "4",
  "location": "xyz789",
  "name": "abc123",
  "type": "abc123"
}

back to top
Types
GiftRegistryShippingAddressInput
Description

Defines a shipping address for a gift registry. Specify either address_data or the address_id. If both are provided, validation will fail.
Fields
Input Field 	Description
address_data - CustomerAddressInput 	Defines the shipping address for this gift registry.
address_id - ID 	The ID assigned to this customer address.
Example

{
  "address_data": CustomerAddressInput,
  "address_id": "4"
}

back to top
Types
GiftRegistryStatus
Description

Defines the status of the gift registry.
Values
Enum Value 	Description

ACTIVE


INACTIVE

Example

"ACTIVE"

back to top
Types
GiftRegistryType
Description

Contains details about a gift registry type.
Fields
Field Name 	Description
dynamic_attributes_metadata - [GiftRegistryDynamicAttributeMetadataInterface] 	An array of attributes that define elements of the gift registry. Each attribute is specified as a code-value pair.
label - String! 	The label assigned to the gift registry type on the Admin.
uid - ID! 	The unique ID assigned to the gift registry type.
Example

{
  "dynamic_attributes_metadata": [
    GiftRegistryDynamicAttributeMetadataInterface
  ],
  "label": "xyz789",
  "uid": "4"
}

back to top
Types
GiftWrapping
Description

Contains details about the selected or available gift wrapping options.
Fields
Field Name 	Description
design - String! 	The name of the gift wrapping design.
id - ID! 	The unique ID for a GiftWrapping object. Use uid instead Deprecated
image - GiftWrappingImage 	The preview image for a gift wrapping option.
price - Money! 	The gift wrapping price.
uid - ID! 	The unique ID for a GiftWrapping object.
Example

{
  "design": "abc123",
  "id": "4",
  "image": GiftWrappingImage,
  "price": Money,
  "uid": 4
}

back to top
Types
GiftWrappingImage
Description

Points to an image associated with a gift wrapping option.
Fields
Field Name 	Description
label - String! 	The gift wrapping preview image label.
url - String! 	The gift wrapping preview image URL.
Example

{
  "label": "abc123",
  "url": "abc123"
}

back to top
Types
GooglePayButtonStyles
Fields
Field Name 	Description
color - String 	The button color
height - Int 	The button height in pixels
type - String 	The button type
Example

{
  "color": "abc123",
  "height": 123,
  "type": "xyz789"
}

back to top
Types
GooglePayConfig
Fields
Field Name 	Description
button_styles - GooglePayButtonStyles 	The styles for the GooglePay Button configuration
code - String 	The payment method code as defined in the payment gateway
is_visible - Boolean 	Indicates whether the payment method is displayed
payment_intent - String 	Defines the payment intent (Authorize or Capture
payment_source - String 	The payment source for the payment method
sdk_params - [SDKParams] 	The PayPal parameters required to load the JS SDK
sort_order - String 	The relative order the payment method is displayed on the checkout page
three_ds_mode - ThreeDSMode 	3DS mode
title - String 	The name displayed for the payment method
Example

{
  "button_styles": GooglePayButtonStyles,
  "code": "xyz789",
  "is_visible": false,
  "payment_intent": "abc123",
  "payment_source": "xyz789",
  "sdk_params": [SDKParams],
  "sort_order": "xyz789",
  "three_ds_mode": "OFF",
  "title": "xyz789"
}

back to top
Types
GooglePayMethodInput
Description

Google Pay inputs
Fields
Input Field 	Description
payment_source - String 	The payment source for the payment method
payments_order_id - String 	The payment services order ID
paypal_order_id - String 	PayPal order ID
Example

{
  "payment_source": "xyz789",
  "payments_order_id": "xyz789",
  "paypal_order_id": "abc123"
}

back to top
Types
GroupedProduct
Description

Defines a grouped product, which consists of simple standalone products that are presented as a group.
Fields
Field Name 	Description
activity - String 	Use the custom_attributes field instead. Deprecated
attribute_set_id - Int 	The attribute set assigned to the product. The field should not be used on the storefront. Deprecated
canonical_url - String 	The relative canonical URL. This value is returned only if the system setting 'Use Canonical Link Meta Tag For Products' is enabled.
categories - [CategoryInterface] 	The categories assigned to a product.
category_gear - String 	Use the custom_attributes field instead. Deprecated
climate - String 	Use the custom_attributes field instead. Deprecated
collar - String 	Use the custom_attributes field instead. Deprecated
color - Int 	Use the custom_attributes field instead. Deprecated
country_of_manufacture - String 	The product's country of origin.
created_at - String 	Timestamp indicating when the product was created. The field should not be used on the storefront. Deprecated
crosssell_products - [ProductInterface] 	An array of cross-sell products.
custom_attributesV2 - ProductCustomAttributes 	Product custom attributes.
description - ComplexTextValue 	Detailed information about the product. The value can include simple HTML tags.
eco_collection - Int 	Use the custom_attributes field instead. Deprecated
erin_recommends - Int 	Use the custom_attributes field instead. Deprecated
features_bags - String 	Use the custom_attributes field instead. Deprecated
format - Int 	Use the custom_attributes field instead. Deprecated
gender - String 	Use the custom_attributes field instead. Deprecated
gift_message_available - Boolean! 	Returns a value indicating gift message availability for the product.
gift_wrapping_available - Boolean! 	Returns a value indicating gift wrapping availability for the product.
gift_wrapping_price - Money 	Returns value and currency indicating gift wrapping price for the product.
id - Int 	The ID number assigned to the product. Use the uid field instead. Deprecated
image - ProductImage 	The relative path to the main image on the product page.
is_returnable - String 	Indicates whether the product can be returned.
items - [GroupedProductItem] 	An array containing grouped product items.
manufacturer - Int 	A number representing the product's manufacturer. Use the custom_attributes field instead. Deprecated
material - String 	Use the custom_attributes field instead. Deprecated
max_sale_qty - Float 	Maximum Qty Allowed in Shopping Cart
media_gallery - [MediaGalleryInterface] 	An array of media gallery objects.
media_gallery_entries - [MediaGalleryEntry] 	An array of MediaGalleryEntry objects. Use media_gallery instead. Deprecated
meta_description - String 	A brief overview of the product for search results listings, maximum 255 characters.
meta_keyword - String 	A comma-separated list of keywords that are visible only to search engines.
meta_title - String 	A string that is displayed in the title bar and tab of the browser and in search results lists.
min_sale_qty - Float 	Minimum Qty Allowed in Shopping Cart
name - String 	The product name. Customers use this name to identify the product.
new - Int 	Use the custom_attributes field instead. Deprecated
new_from_date - String 	The beginning date for new product listings, and determines if the product is featured as a new product.
new_to_date - String 	The end date for new product listings.
only_x_left_in_stock - Float 	Product stock only x left count
options_container - String 	If the product has multiple options, determines where they appear on the product page.
pattern - String 	Use the custom_attributes field instead. Deprecated
performance_fabric - Int 	Use the custom_attributes field instead. Deprecated
price - ProductPrices 	Indicates the price of an item. Use price_range for product price information. Deprecated
price_range - PriceRange! 	The range of prices for the product
price_tiers - [TierPrice] 	An array of TierPrice objects.
product_links - [ProductLinksInterface] 	An array of ProductLinks objects.
purpose - Int 	Use the custom_attributes field instead. Deprecated
quantity - Float 	Amount of available stock
rating_summary - Float! 	The average of all the ratings given to the product.
redirect_code - Int! 	Contains 0 when there is no redirect error. A value of 301 indicates the URL of the requested resource has been changed permanently, while a value of 302 indicates a temporary redirect.
related_products - [ProductInterface] 	An array of related products.
relative_url - String 	The internal relative URL. If the specified URL is a redirect, the query returns the redirected URL, not the original.
review_count - Int! 	The total count of all the reviews given to the product.
reviews - ProductReviews! 	The list of products reviews.
rules - [CatalogRule] 	Provides applied catalog rules in the current active cart
sale - Int 	Use the custom_attributes field instead. Deprecated
short_description - ComplexTextValue 	A short description of the product. Its use depends on the theme.
size - Int 	Use the custom_attributes field instead. Deprecated
sku - String 	A number or code assigned to a product to identify the product, options, price, and manufacturer.
sleeve - String 	Use the custom_attributes field instead.
small_image - ProductImage 	The relative path to the small image, which is used on catalog pages.
special_from_date - String 	The beginning date that a product has a special price. The field should not be used on the storefront. Deprecated
special_price - Float 	The discounted price of the product.
special_to_date - String 	The end date for a product with a special price.
staged - Boolean! 	Indicates whether the product is staged for a future campaign.
stock_status - ProductStockStatus 	Stock status of the product
strap_bags - String 	Use the custom_attributes field instead. Deprecated
style_bags - String 	Use the custom_attributes field instead. Deprecated
style_bottom - String 	Use the custom_attributes field instead. Deprecated
style_general - String 	Use the custom_attributes field instead. Deprecated
swatch_image - String 	The file name of a swatch image.
thumbnail - ProductImage 	The relative path to the product's thumbnail image.
tier_price - Float 	The price when tier pricing is in effect and the items purchased threshold has been reached. Use price_tiers for product tier price information. Deprecated
tier_prices - [ProductTierPrices] 	An array of ProductTierPrices objects. Use price_tiers for product tier price information. Deprecated
type - UrlRewriteEntityTypeEnum 	One of PRODUCT, CATEGORY, or CMS_PAGE.
type_id - String 	One of simple, virtual, bundle, downloadable, grouped, or configurable. Use __typename instead. Deprecated
uid - ID! 	The unique ID for a ProductInterface object.
updated_at - String 	Timestamp indicating when the product was updated. The field should not be used on the storefront. Deprecated
upsell_products - [ProductInterface] 	An array of up-sell products.
url_key - String 	The part of the URL that identifies the product
url_path - String 	Use product's canonical_url or url rewrites instead Deprecated
url_rewrites - [UrlRewrite] 	URL rewrites list
url_suffix - String 	The part of the product URL that is appended after the url key
websites - [Website] 	An array of websites in which the product is available. The field should not be used on the storefront. Deprecated
weight - Float 	The weight of the item, in units defined by the store.
Example

{
  "activity": "xyz789",
  "attribute_set_id": 123,
  "canonical_url": "abc123",
  "categories": [CategoryInterface],
  "category_gear": "abc123",
  "climate": "abc123",
  "collar": "xyz789",
  "color": 123,
  "country_of_manufacture": "xyz789",
  "created_at": "abc123",
  "crosssell_products": [ProductInterface],
  "custom_attributesV2": ProductCustomAttributes,
  "description": ComplexTextValue,
  "eco_collection": 987,
  "erin_recommends": 987,
  "features_bags": "xyz789",
  "format": 123,
  "gender": "abc123",
  "gift_message_available": true,
  "gift_wrapping_available": false,
  "gift_wrapping_price": Money,
  "id": 123,
  "image": ProductImage,
  "is_returnable": "abc123",
  "items": [GroupedProductItem],
  "manufacturer": 987,
  "material": "xyz789",
  "max_sale_qty": 987.65,
  "media_gallery": [MediaGalleryInterface],
  "media_gallery_entries": [MediaGalleryEntry],
  "meta_description": "xyz789",
  "meta_keyword": "xyz789",
  "meta_title": "xyz789",
  "min_sale_qty": 123.45,
  "name": "xyz789",
  "new": 123,
  "new_from_date": "abc123",
  "new_to_date": "abc123",
  "only_x_left_in_stock": 987.65,
  "options_container": "xyz789",
  "pattern": "abc123",
  "performance_fabric": 987,
  "price": ProductPrices,
  "price_range": PriceRange,
  "price_tiers": [TierPrice],
  "product_links": [ProductLinksInterface],
  "purpose": 987,
  "quantity": 123.45,
  "rating_summary": 123.45,
  "redirect_code": 123,
  "related_products": [ProductInterface],
  "relative_url": "abc123",
  "review_count": 123,
  "reviews": ProductReviews,
  "rules": [CatalogRule],
  "sale": 123,
  "short_description": ComplexTextValue,
  "size": 987,
  "sku": "abc123",
  "sleeve": "abc123",
  "small_image": ProductImage,
  "special_from_date": "abc123",
  "special_price": 987.65,
  "special_to_date": "xyz789",
  "staged": true,
  "stock_status": "IN_STOCK",
  "strap_bags": "abc123",
  "style_bags": "xyz789",
  "style_bottom": "xyz789",
  "style_general": "abc123",
  "swatch_image": "xyz789",
  "thumbnail": ProductImage,
  "tier_price": 987.65,
  "tier_prices": [ProductTierPrices],
  "type": "CMS_PAGE",
  "type_id": "xyz789",
  "uid": 4,
  "updated_at": "abc123",
  "upsell_products": [ProductInterface],
  "url_key": "xyz789",
  "url_path": "abc123",
  "url_rewrites": [UrlRewrite],
  "url_suffix": "xyz789",
  "websites": [Website],
  "weight": 123.45
}

back to top
Types
GroupedProductItem
Description

Contains information about an individual grouped product item.
Fields
Field Name 	Description
position - Int 	The relative position of this item compared to the other group items.
product - ProductInterface 	Details about this product option.
qty - Float 	The quantity of this grouped product item.
Example

{
  "position": 123,
  "product": ProductInterface,
  "qty": 123.45
}

back to top
Types
GroupedProductWishlistItem
Description

A grouped product wish list item.
Fields
Field Name 	Description
added_at - String! 	The date and time the item was added to the wish list.
customizable_options - [SelectedCustomizableOption]! 	Custom options selected for the wish list item.
description - String 	The description of the item.
id - ID! 	The unique ID for a WishlistItemInterface object.
product - ProductInterface 	Product details of the wish list item.
quantity - Float! 	The quantity of this wish list item.
Example

{
  "added_at": "xyz789",
  "customizable_options": [SelectedCustomizableOption],
  "description": "abc123",
  "id": 4,
  "product": ProductInterface,
  "quantity": 987.65
}

back to top
Types
GuestOrderCancelInput
Description

Input to retrieve a guest order based on token.
Fields
Input Field 	Description
reason - String! 	Cancellation reason.
token - String! 	Order token.
Example

{
  "reason": "xyz789",
  "token": "abc123"
}

back to top
Types
HostedFieldsConfig
Fields
Field Name 	Description
cc_vault_code - String 	Vault payment method code
code - String 	The payment method code as defined in the payment gateway
is_vault_enabled - Boolean 	Card vault enabled
is_visible - Boolean 	Indicates whether the payment method is displayed
payment_intent - String 	Defines the payment intent (Authorize or Capture
payment_source - String 	The payment source for the payment method
requires_card_details - Boolean 	Card and bin details required
sdk_params - [SDKParams] 	The PayPal parameters required to load the JS SDK
sort_order - String 	The relative order the payment method is displayed on the checkout page
three_ds - Boolean 	Whether 3DS is activated; true if 3DS mode is not OFF. Use 'three_ds_mode' instead. Deprecated
three_ds_mode - ThreeDSMode 	3DS mode
title - String 	The name displayed for the payment method
Example

{
  "cc_vault_code": "xyz789",
  "code": "xyz789",
  "is_vault_enabled": true,
  "is_visible": false,
  "payment_intent": "xyz789",
  "payment_source": "abc123",
  "requires_card_details": false,
  "sdk_params": [SDKParams],
  "sort_order": "xyz789",
  "three_ds": false,
  "three_ds_mode": "OFF",
  "title": "abc123"
}

back to top
Types
HostedFieldsInput
Description

Hosted Fields payment inputs
Fields
Input Field 	Description
cardBin - String 	Card bin number
cardExpiryMonth - String 	Expiration month of the card
cardExpiryYear - String 	Expiration year of the card
cardLast4 - String 	Last four digits of the card
holderName - String 	Name on the card
is_active_payment_token_enabler - Boolean 	Indicates whether details about the shopper's credit/debit card should be tokenized for later usage. Required only if Vault is enabled for the Payment Services payment integration.
payment_source - String 	The payment source for the payment method
payments_order_id - String 	The payment services order ID
paypal_order_id - String 	PayPal order ID
Example

{
  "cardBin": "xyz789",
  "cardExpiryMonth": "abc123",
  "cardExpiryYear": "abc123",
  "cardLast4": "abc123",
  "holderName": "abc123",
  "is_active_payment_token_enabler": true,
  "payment_source": "abc123",
  "payments_order_id": "xyz789",
  "paypal_order_id": "xyz789"
}

back to top
Types
HostedProInput
Description

Contains a set of relative URLs that PayPal uses in response to various actions during the authorization process. Magento prepends the base URL to this value to create a full URL. For example, if the full URL is https://www.example.com/path/to/page.html, the relative URL is path/to/page.html. Use this input for Payments Pro Hosted Solution payment method.
Fields
Input Field 	Description
cancel_url - String! 	The relative URL of the page that PayPal redirects to when the buyer cancels the transaction in order to choose a different payment method. For example, if the full URL to this page is https://www.example.com/paypal/action/cancel.html, the relative URL is paypal/action/cancel.html.
return_url - String! 	The relative URL of the final confirmation page that PayPal redirects to upon payment success. For example, if the full URL to this page is https://www.example.com/paypal/action/return.html, the relative URL is paypal/action/return.html.
Example

{
  "cancel_url": "abc123",
  "return_url": "xyz789"
}

back to top
Types
HostedProUrl
Description

Contains the secure URL used for the Payments Pro Hosted Solution payment method.
Fields
Field Name 	Description
secure_form_url - String 	The secure URL generated by PayPal.
Example

{"secure_form_url": "abc123"}

back to top
Types
HostedProUrlInput
Description

Contains the required input to request the secure URL for Payments Pro Hosted Solution payment.
Fields
Input Field 	Description
cart_id - String! 	The unique ID that identifies the shopper's cart.
Example

{"cart_id": "xyz789"}

back to top
Types
HttpQueryParameter
Description

Contains target path parameters.
Fields
Field Name 	Description
name - String 	A parameter name.
value - String 	A parameter value.
Example

{
  "name": "abc123",
  "value": "abc123"
}

back to top
Types
ID
Description

The ID scalar type represents a unique identifier, often used to refetch an object or as key for a cache. The ID type appears in a JSON response as a String; however, it is not intended to be human-readable. When expected as an input type, any string (such as "4") or integer (such as 4) input value will be accepted as an ID.
Example

"4"

back to top
Types
ImageSwatchData
Fields
Field Name 	Description
thumbnail - String 	The URL assigned to the thumbnail of the swatch image.
value - String 	The value can be represented as color (HEX code), image link, or text.
Example

{
  "thumbnail": "abc123",
  "value": "xyz789"
}

back to top
Types
InputFilterEnum
Description

List of templates/filters applied to customer attribute input.
Values
Enum Value 	Description

NONE
	There are no templates or filters to be applied.

DATE
	Forces attribute input to follow the date format.

TRIM
	Strip whitespace (or other characters) from the beginning and end of the input.

STRIPTAGS
	Strip HTML Tags.

ESCAPEHTML
	Escape HTML Entities.
Example

"NONE"

back to top
Types
InsufficientStockError
Fields
Field Name 	Description
code - CartUserInputErrorType! 	A cart-specific error code.
message - String! 	A localized error message.
quantity - Float 	Amount of available stock
Example

{
  "code": "PRODUCT_NOT_FOUND",
  "message": "xyz789",
  "quantity": 987.65
}

back to top
Types
Int
Description

The Int scalar type represents non-fractional signed whole numeric values. Int can represent values between -(2^31) and 2^31 - 1.
Example

123

back to top
Types
InternalError
Description

Contains an error message when an internal error occurred.
Fields
Field Name 	Description
message - String! 	The returned error message.
Example

{"message": "xyz789"}

back to top
Types
Invoice
Description

Contains invoice details.
Fields
Field Name 	Description
comments - [SalesCommentItem] 	Comments on the invoice.
id - ID! 	The unique ID for a Invoice object.
items - [InvoiceItemInterface] 	Invoiced product details.
number - String! 	Sequential invoice number.
total - InvoiceTotal 	Invoice total amount details.
Example

{
  "comments": [SalesCommentItem],
  "id": "4",
  "items": [InvoiceItemInterface],
  "number": "abc123",
  "total": InvoiceTotal
}

back to top
Types
InvoiceItem
Fields
Field Name 	Description
discounts - [Discount] 	Information about the final discount amount for the base product, including discounts on options.
id - ID! 	The unique ID for an InvoiceItemInterface object.
order_item - OrderItemInterface 	Details about an individual order item.
product_name - String 	The name of the base product.
product_sale_price - Money! 	The sale price for the base product including selected options.
product_sku - String! 	The SKU of the base product.
quantity_invoiced - Float 	The number of invoiced items.
Example

{
  "discounts": [Discount],
  "id": 4,
  "order_item": OrderItemInterface,
  "product_name": "abc123",
  "product_sale_price": Money,
  "product_sku": "abc123",
  "quantity_invoiced": 987.65
}

back to top
Types
InvoiceItemInterface
Description

Contains detailes about invoiced items.
Fields
Field Name 	Description
discounts - [Discount] 	Information about the final discount amount for the base product, including discounts on options.
id - ID! 	The unique ID for an InvoiceItemInterface object.
order_item - OrderItemInterface 	Details about an individual order item.
product_name - String 	The name of the base product.
product_sale_price - Money! 	The sale price for the base product including selected options.
product_sku - String! 	The SKU of the base product.
quantity_invoiced - Float 	The number of invoiced items.
Possible Types
InvoiceItemInterface Types

BundleInvoiceItem

DownloadableInvoiceItem

GiftCardInvoiceItem

InvoiceItem
Example

{
  "discounts": [Discount],
  "id": "4",
  "order_item": OrderItemInterface,
  "product_name": "abc123",
  "product_sale_price": Money,
  "product_sku": "abc123",
  "quantity_invoiced": 123.45
}

back to top
Types
InvoiceTotal
Description

Contains price details from an invoice.
Fields
Field Name 	Description
base_grand_total - Money! 	The final base grand total amount in the base currency.
discounts - [Discount] 	The applied discounts to the invoice.
grand_total - Money! 	The final total amount, including shipping, discounts, and taxes.
shipping_handling - ShippingHandling 	Details about the shipping and handling costs for the invoice.
subtotal - Money! 	The subtotal of the invoice, excluding shipping, discounts, and taxes.
taxes - [TaxItem] 	The invoice tax details.
total_shipping - Money! 	The shipping amount for the invoice.
total_tax - Money! 	The amount of tax applied to the invoice.
Example

{
  "base_grand_total": Money,
  "discounts": [Discount],
  "grand_total": Money,
  "shipping_handling": ShippingHandling,
  "subtotal": Money,
  "taxes": [TaxItem],
  "total_shipping": Money,
  "total_tax": Money
}

back to top
Types
IsCompanyAdminEmailAvailableOutput
Description

Contains the response of a company admin email validation query.
Fields
Field Name 	Description
is_email_available - Boolean! 	Indicates whether the specified email address can be used to create a company administrator.
Example

{"is_email_available": true}

back to top
Types
IsCompanyEmailAvailableOutput
Description

Contains the response of a company email validation query.
Fields
Field Name 	Description
is_email_available - Boolean! 	Indicates whether the specified email address can be used to create a company.
Example

{"is_email_available": false}

back to top
Types
IsCompanyRoleNameAvailableOutput
Description

Contains the response of a role name validation query.
Fields
Field Name 	Description
is_role_name_available - Boolean! 	Indicates whether the specified company role name is available.
Example

{"is_role_name_available": false}

back to top
Types
IsCompanyUserEmailAvailableOutput
Description

Contains the response of a company user email validation query.
Fields
Field Name 	Description
is_email_available - Boolean! 	Indicates whether the specified email address can be used to create a company user.
Example

{"is_email_available": false}

back to top
Types
IsEmailAvailableOutput
Description

Contains the result of the isEmailAvailable query.
Fields
Field Name 	Description
is_email_available - Boolean 	Indicates whether the specified email address can be used to create a customer.
Example

{"is_email_available": true}

back to top
Types
ItemNote
Description

The note object for quote line item.
Fields
Field Name 	Description
created_at - String 	Timestamp that reflects note creation date.
creator_id - Int 	ID of the user who submitted a note.
creator_type - Int 	Type of teh user who submitted a note.
negotiable_quote_item_uid - ID 	The unique ID of a CartItemInterface object.
note - String 	Note text.
note_uid - ID 	The unique ID of a ItemNote object.
Example

{
  "created_at": "abc123",
  "creator_id": 123,
  "creator_type": 123,
  "negotiable_quote_item_uid": "4",
  "note": "xyz789",
  "note_uid": 4
}

back to top
Types
ItemSelectedBundleOption
Description

A list of options of the selected bundle product.
Fields
Field Name 	Description
id - ID! 	The unique ID for a ItemSelectedBundleOption object. Use uid instead. Deprecated
label - String! 	The label of the option.
uid - ID! 	The unique ID for a ItemSelectedBundleOption object.
values - [ItemSelectedBundleOptionValue] 	A list of products that represent the values of the parent option.
Example

{
  "id": 4,
  "label": "xyz789",
  "uid": "4",
  "values": [ItemSelectedBundleOptionValue]
}

back to top
Types
ItemSelectedBundleOptionValue
Description

A list of values for the selected bundle product.
Fields
Field Name 	Description
id - ID! 	The unique ID for a ItemSelectedBundleOptionValue object. Use uid instead. Deprecated
price - Money! 	The price of the child bundle product.
product_name - String! 	The name of the child bundle product.
product_sku - String! 	The SKU of the child bundle product.
quantity - Float! 	The number of this bundle product that were ordered.
uid - ID! 	The unique ID for a ItemSelectedBundleOptionValue object.
Example

{
  "id": "4",
  "price": Money,
  "product_name": "xyz789",
  "product_sku": "xyz789",
  "quantity": 123.45,
  "uid": 4
}

back to top
Types
KeyValue
Description

Contains a key-value pair.
Fields
Field Name 	Description
name - String 	The name part of the key/value pair.
value - String 	The value part of the key/value pair.
Example

{
  "name": "xyz789",
  "value": "xyz789"
}

back to top
Types
LayerFilter
Description

Contains information for rendering layered navigation.
Fields
Field Name 	Description
filter_items - [LayerFilterItemInterface] 	An array of filter items. Use Aggregation.options instead. Deprecated
filter_items_count - Int 	The count of filter items in filter group. Use Aggregation.count instead. Deprecated
name - String 	The name of a layered navigation filter. Use Aggregation.label instead. Deprecated
request_var - String 	The request variable name for a filter query. Use Aggregation.attribute_code instead. Deprecated
Example

{
  "filter_items": [LayerFilterItemInterface],
  "filter_items_count": 123,
  "name": "abc123",
  "request_var": "abc123"
}

back to top
Types
LayerFilterItem
Fields
Field Name 	Description
items_count - Int 	The count of items per filter. Use AggregationOption.count instead. Deprecated
label - String 	The label for a filter. Use AggregationOption.label instead. Deprecated
value_string - String 	The value of a filter request variable to be used in query. Use AggregationOption.value instead. Deprecated
Example

{
  "items_count": 123,
  "label": "xyz789",
  "value_string": "abc123"
}

back to top
Types
LayerFilterItemInterface
Fields
Field Name 	Description
items_count - Int 	The count of items per filter. Use AggregationOption.count instead. Deprecated
label - String 	The label for a filter. Use AggregationOption.label instead. Deprecated
value_string - String 	The value of a filter request variable to be used in query. Use AggregationOption.value instead. Deprecated
Possible Types
LayerFilterItemInterface Types

LayerFilterItem

SwatchLayerFilterItem
Example

{
  "items_count": 987,
  "label": "xyz789",
  "value_string": "abc123"
}

back to top
Types
LineItemNoteInput
Description

Sets quote item note.
Fields
Input Field 	Description
note - String 	The note text to be added.
quote_item_uid - ID! 	The unique ID of a CartLineItem object.
quote_uid - ID! 	The unique ID of a NegotiableQuote object.
Example

{
  "note": "abc123",
  "quote_item_uid": "4",
  "quote_uid": 4
}

back to top
Types
MediaGalleryEntry
Description

Defines characteristics about images and videos associated with a specific product.
Fields
Field Name 	Description
content - ProductMediaGalleryEntriesContent 	Details about the content of the media gallery item.
disabled - Boolean 	Indicates whether the image is hidden from view.
file - String 	The path of the image on the server.
id - Int 	The identifier assigned to the object. Use uid instead. Deprecated
label - String 	The alt text displayed on the storefront when the user points to the image.
media_type - String 	Either image or video.
position - Int 	The media item's position after it has been sorted.
types - [String] 	Array of image types. It can have the following values: image, small_image, thumbnail.
uid - ID! 	The unique ID for a MediaGalleryEntry object.
video_content - ProductMediaGalleryEntriesVideoContent 	Details about the content of a video item.
Example

{
  "content": ProductMediaGalleryEntriesContent,
  "disabled": false,
  "file": "abc123",
  "id": 123,
  "label": "xyz789",
  "media_type": "abc123",
  "position": 987,
  "types": ["xyz789"],
  "uid": 4,
  "video_content": ProductMediaGalleryEntriesVideoContent
}

back to top
Types
MediaGalleryInterface
Description

Contains basic information about a product image or video.
Fields
Field Name 	Description
disabled - Boolean 	Indicates whether the image is hidden from view.
label - String 	The label of the product image or video.
position - Int 	The media item's position after it has been sorted.
url - String 	The URL of the product image or video.
Possible Types
MediaGalleryInterface Types

ProductImage

ProductVideo
Example

{
  "disabled": true,
  "label": "xyz789",
  "position": 123,
  "url": "abc123"
}

back to top
Types
MessageStyleLogo
Fields
Field Name 	Description
type - String 	The type of logo for the PayPal Pay Later messaging
Example

{"type": "abc123"}

back to top
Types
MessageStyles
Fields
Field Name 	Description
layout - String 	The message layout
logo - MessageStyleLogo 	The message logo
Example

{
  "layout": "abc123",
  "logo": MessageStyleLogo
}

back to top
Types
Money
Description

Defines a monetary value, including a numeric value and a currency code.
Fields
Field Name 	Description
currency - CurrencyEnum 	A three-letter currency code, such as USD or EUR.
value - Float 	A number expressing a monetary value.
Example

{"currency": "AFN", "value": 123.45}

back to top
Types
MoveCartItemsToGiftRegistryOutput
Description

Contains the customer's gift registry and any errors encountered.
Fields
Field Name 	Description
gift_registry - GiftRegistry 	The gift registry.
status - Boolean! 	Indicates whether the attempt to move the cart items to the gift registry was successful.
user_errors - [GiftRegistryItemsUserError]! 	An array of errors encountered while moving items from the cart to the gift registry.
Example

{
  "gift_registry": GiftRegistry,
  "status": false,
  "user_errors": [GiftRegistryItemsUserError]
}

back to top
Types
MoveItemsBetweenRequisitionListsInput
Description

An input object that defines the items in a requisition list to be moved.
Fields
Input Field 	Description
requisitionListItemUids - [ID]! 	An array of IDs representing products moved from one requisition list to another.
Example

{"requisitionListItemUids": [4]}

back to top
Types
MoveItemsBetweenRequisitionListsOutput
Description

Output of the request to move items to another requisition list.
Fields
Field Name 	Description
destination_requisition_list - RequisitionList 	The destination requisition list after moving items.
source_requisition_list - RequisitionList 	The source requisition list after moving items.
Example

{
  "destination_requisition_list": RequisitionList,
  "source_requisition_list": RequisitionList
}

back to top
Types
MoveLineItemToRequisitionListInput
Description

Move Line Item to Requisition List.
Fields
Input Field 	Description
quote_item_uid - ID! 	The unique ID of a CartLineItem object.
quote_uid - ID! 	The unique ID of a NegotiableQuote object.
requisition_list_uid - ID! 	The unique ID of a requisition list.
Example

{
  "quote_item_uid": 4,
  "quote_uid": 4,
  "requisition_list_uid": "4"
}

back to top
Types
MoveLineItemToRequisitionListOutput
Description

Contains the updated negotiable quote.
Fields
Field Name 	Description
quote - NegotiableQuote 	The negotiable quote after moving item to requisition list.
Example

{"quote": NegotiableQuote}

back to top
Types
MoveProductsBetweenWishlistsOutput
Description

Contains the source and target wish lists after moving products.
Fields
Field Name 	Description
destination_wishlist - Wishlist! 	The destination wish list after receiving products moved from the source wish list.
source_wishlist - Wishlist! 	The source wish list after moving products from it.
user_errors - [WishListUserInputError]! 	An array of errors encountered while moving products to a wish list.
Example

{
  "destination_wishlist": Wishlist,
  "source_wishlist": Wishlist,
  "user_errors": [WishListUserInputError]
}

back to top
Types
NegotiableQuote
Description

Contains details about a negotiable quote.
Fields
Field Name 	Description
available_payment_methods - [AvailablePaymentMethod] 	An array of payment methods that can be applied to the negotiable quote.
billing_address - NegotiableQuoteBillingAddress 	The billing address applied to the negotiable quote.
buyer - NegotiableQuoteUser! 	The first and last name of the buyer.
comments - [NegotiableQuoteComment] 	A list of comments made by the buyer and seller.
created_at - String 	Timestamp indicating when the negotiable quote was created.
email - String 	The email address of the company user.
history - [NegotiableQuoteHistoryEntry] 	A list of status and price changes for the negotiable quote.
is_virtual - Boolean! 	Indicates whether the negotiable quote contains only virtual products.
items - [CartItemInterface] 	The list of items in the negotiable quote.
name - String! 	The title assigned to the negotiable quote.
prices - CartPrices 	A set of subtotals and totals applied to the negotiable quote.
selected_payment_method - SelectedPaymentMethod 	The payment method that was applied to the negotiable quote.
shipping_addresses - [NegotiableQuoteShippingAddress]! 	A list of shipping addresses applied to the negotiable quote.
status - NegotiableQuoteStatus! 	The status of the negotiable quote.
total_quantity - Float! 	The total number of items in the negotiable quote.
uid - ID! 	The unique ID of a NegotiableQuote object.
updated_at - String 	Timestamp indicating when the negotiable quote was updated.
Example

{
  "available_payment_methods": [AvailablePaymentMethod],
  "billing_address": NegotiableQuoteBillingAddress,
  "buyer": NegotiableQuoteUser,
  "comments": [NegotiableQuoteComment],
  "created_at": "xyz789",
  "email": "abc123",
  "history": [NegotiableQuoteHistoryEntry],
  "is_virtual": false,
  "items": [CartItemInterface],
  "name": "abc123",
  "prices": CartPrices,
  "selected_payment_method": SelectedPaymentMethod,
  "shipping_addresses": [NegotiableQuoteShippingAddress],
  "status": "SUBMITTED",
  "total_quantity": 987.65,
  "uid": 4,
  "updated_at": "xyz789"
}

back to top
Types
NegotiableQuoteAddressCountry
Description

Defines the company's country.
Fields
Field Name 	Description
code - String! 	The address country code.
label - String! 	The display name of the region.
Example

{
  "code": "xyz789",
  "label": "abc123"
}

back to top
Types
NegotiableQuoteAddressInput
Description

Defines the billing or shipping address to be applied to the cart.
Fields
Input Field 	Description
city - String! 	The city specified for the billing or shipping address.
company - String 	The company name.
country_code - String! 	The country code and label for the billing or shipping address.
firstname - String! 	The first name of the company user.
lastname - String! 	The last name of the company user.
postcode - String 	The ZIP or postal code of the billing or shipping address.
region - String 	A string that defines the state or province of the billing or shipping address.
region_id - Int 	An integer that defines the state or province of the billing or shipping address.
save_in_address_book - Boolean 	Determines whether to save the address in the customer's address book. The default value is true.
street - [String]! 	An array containing the street for the billing or shipping address.
telephone - String 	The telephone number for the billing or shipping address.
Example

{
  "city": "abc123",
  "company": "abc123",
  "country_code": "xyz789",
  "firstname": "abc123",
  "lastname": "xyz789",
  "postcode": "xyz789",
  "region": "xyz789",
  "region_id": 123,
  "save_in_address_book": false,
  "street": ["xyz789"],
  "telephone": "abc123"
}

back to top
Types
NegotiableQuoteAddressInterface
Fields
Field Name 	Description
city - String! 	The company's city or town.
company - String 	The company name associated with the shipping/billing address.
country - NegotiableQuoteAddressCountry! 	The company's country.
firstname - String! 	The first name of the company user.
lastname - String! 	The last name of the company user.
postcode - String 	The company's ZIP or postal code.
region - NegotiableQuoteAddressRegion 	An object containing the region name, region code, and region ID.
street - [String]! 	An array of strings that define the street number and name.
telephone - String 	The customer's telephone number.
Possible Types
NegotiableQuoteAddressInterface Types

NegotiableQuoteShippingAddress

NegotiableQuoteBillingAddress
Example

{
  "city": "xyz789",
  "company": "abc123",
  "country": NegotiableQuoteAddressCountry,
  "firstname": "xyz789",
  "lastname": "xyz789",
  "postcode": "xyz789",
  "region": NegotiableQuoteAddressRegion,
  "street": ["abc123"],
  "telephone": "abc123"
}

back to top
Types
NegotiableQuoteAddressRegion
Description

Defines the company's state or province.
Fields
Field Name 	Description
code - String 	The address region code.
label - String 	The display name of the region.
region_id - Int 	The unique ID for a pre-defined region.
Example

{
  "code": "abc123",
  "label": "abc123",
  "region_id": 123
}

back to top
Types
NegotiableQuoteBillingAddress
Fields
Field Name 	Description
city - String! 	The company's city or town.
company - String 	The company name associated with the shipping/billing address.
country - NegotiableQuoteAddressCountry! 	The company's country.
firstname - String! 	The first name of the company user.
lastname - String! 	The last name of the company user.
postcode - String 	The company's ZIP or postal code.
region - NegotiableQuoteAddressRegion 	An object containing the region name, region code, and region ID.
street - [String]! 	An array of strings that define the street number and name.
telephone - String 	The customer's telephone number.
Example

{
  "city": "xyz789",
  "company": "abc123",
  "country": NegotiableQuoteAddressCountry,
  "firstname": "xyz789",
  "lastname": "abc123",
  "postcode": "abc123",
  "region": NegotiableQuoteAddressRegion,
  "street": ["abc123"],
  "telephone": "abc123"
}

back to top
Types
NegotiableQuoteBillingAddressInput
Description

Defines the billing address.
Fields
Input Field 	Description
address - NegotiableQuoteAddressInput 	Defines a billing address.
customer_address_uid - ID 	The unique ID of a CustomerAddress object.
same_as_shipping - Boolean 	Indicates whether to set the billing address to be the same as the existing shipping address on the negotiable quote.
use_for_shipping - Boolean 	Indicates whether to set the shipping address to be the same as this billing address.
Example

{
  "address": NegotiableQuoteAddressInput,
  "customer_address_uid": 4,
  "same_as_shipping": false,
  "use_for_shipping": false
}

back to top
Types
NegotiableQuoteComment
Description

Contains a single plain text comment from either the buyer or seller.
Fields
Field Name 	Description
author - NegotiableQuoteUser! 	The first and last name of the commenter.
created_at - String! 	Timestamp indicating when the comment was created.
creator_type - NegotiableQuoteCommentCreatorType! 	Indicates whether a buyer or seller commented.
text - String! 	The plain text comment.
uid - ID! 	The unique ID of a NegotiableQuoteComment object.
Example

{
  "author": NegotiableQuoteUser,
  "created_at": "abc123",
  "creator_type": "BUYER",
  "text": "xyz789",
  "uid": 4
}

back to top
Types
NegotiableQuoteCommentCreatorType
Values
Enum Value 	Description

BUYER


SELLER

Example

"BUYER"

back to top
Types
NegotiableQuoteCommentInput
Description

Contains the commend provided by the buyer.
Fields
Input Field 	Description
comment - String! 	The comment provided by the buyer.
Example

{"comment": "xyz789"}

back to top
Types
NegotiableQuoteCustomLogChange
Description

Contains custom log entries added by third-party extensions.
Fields
Field Name 	Description
new_value - String! 	The new entry content.
old_value - String 	The previous entry in the custom log.
title - String! 	The title of the custom log entry.
Example

{
  "new_value": "xyz789",
  "old_value": "xyz789",
  "title": "abc123"
}

back to top
Types
NegotiableQuoteFilterInput
Description

Defines a filter to limit the negotiable quotes to return.
Fields
Input Field 	Description
ids - FilterEqualTypeInput 	Filter by the ID of one or more negotiable quotes.
name - FilterMatchTypeInput 	Filter by the negotiable quote name.
Example

{
  "ids": FilterEqualTypeInput,
  "name": FilterMatchTypeInput
}

back to top
Types
NegotiableQuoteHistoryChanges
Description

Contains a list of changes to a negotiable quote.
Fields
Field Name 	Description
comment_added - NegotiableQuoteHistoryCommentChange 	The comment provided with a change in the negotiable quote history.
custom_changes - NegotiableQuoteCustomLogChange 	Lists log entries added by third-party extensions.
expiration - NegotiableQuoteHistoryExpirationChange 	The expiration date of the negotiable quote before and after a change in the quote history.
products_removed - NegotiableQuoteHistoryProductsRemovedChange 	Lists products that were removed as a result of a change in the quote history.
statuses - NegotiableQuoteHistoryStatusesChange 	The status before and after a change in the negotiable quote history.
total - NegotiableQuoteHistoryTotalChange 	The total amount of the negotiable quote before and after a change in the quote history.
Example

{
  "comment_added": NegotiableQuoteHistoryCommentChange,
  "custom_changes": NegotiableQuoteCustomLogChange,
  "expiration": NegotiableQuoteHistoryExpirationChange,
  "products_removed": NegotiableQuoteHistoryProductsRemovedChange,
  "statuses": NegotiableQuoteHistoryStatusesChange,
  "total": NegotiableQuoteHistoryTotalChange
}

back to top
Types
NegotiableQuoteHistoryCommentChange
Description

Contains a comment submitted by a seller or buyer.
Fields
Field Name 	Description
comment - String! 	A plain text comment submitted by a seller or buyer.
Example

{"comment": "xyz789"}

back to top
Types
NegotiableQuoteHistoryEntry
Description

Contains details about a change for a negotiable quote.
Fields
Field Name 	Description
author - NegotiableQuoteUser! 	The person who made a change in the status of the negotiable quote.
change_type - NegotiableQuoteHistoryEntryChangeType! 	An enum that describes the why the entry in the negotiable quote history changed status.
changes - NegotiableQuoteHistoryChanges 	The set of changes in the negotiable quote.
created_at - String 	Timestamp indicating when the negotiable quote entry was created.
uid - ID! 	The unique ID of a NegotiableQuoteHistoryEntry object.
Example

{
  "author": NegotiableQuoteUser,
  "change_type": "CREATED",
  "changes": NegotiableQuoteHistoryChanges,
  "created_at": "xyz789",
  "uid": "4"
}

back to top
Types
NegotiableQuoteHistoryEntryChangeType
Values
Enum Value 	Description

CREATED


UPDATED


CLOSED


UPDATED_BY_SYSTEM

Example

"CREATED"

back to top
Types
NegotiableQuoteHistoryExpirationChange
Description

Contains a new expiration date and the previous date.
Fields
Field Name 	Description
new_expiration - String 	The expiration date after the change. The value will be 'null' if not set.
old_expiration - String 	The previous expiration date. The value will be 'null' if not previously set.
Example

{
  "new_expiration": "xyz789",
  "old_expiration": "xyz789"
}

back to top
Types
NegotiableQuoteHistoryProductsRemovedChange
Description

Contains lists of products that have been removed from the catalog and negotiable quote.
Fields
Field Name 	Description
products_removed_from_catalog - [ID] 	A list of product IDs the seller removed from the catalog.
products_removed_from_quote - [ProductInterface] 	A list of products removed from the negotiable quote by either the buyer or the seller.
Example

{
  "products_removed_from_catalog": [4],
  "products_removed_from_quote": [ProductInterface]
}

back to top
Types
NegotiableQuoteHistoryStatusChange
Description

Lists a new status change applied to a negotiable quote and the previous status.
Fields
Field Name 	Description
new_status - NegotiableQuoteStatus! 	The updated status.
old_status - NegotiableQuoteStatus 	The previous status. The value will be null for the first history entry in a negotiable quote.
Example

{"new_status": "SUBMITTED", "old_status": "SUBMITTED"}

back to top
Types
NegotiableQuoteHistoryStatusesChange
Description

Contains a list of status changes that occurred for the negotiable quote.
Fields
Field Name 	Description
changes - [NegotiableQuoteHistoryStatusChange]! 	A list of status changes.
Example

{"changes": [NegotiableQuoteHistoryStatusChange]}

back to top
Types
NegotiableQuoteHistoryTotalChange
Description

Contains a new price and the previous price.
Fields
Field Name 	Description
new_price - Money 	The total price as a result of the change.
old_price - Money 	The previous total price on the negotiable quote.
Example

{
  "new_price": Money,
  "old_price": Money
}

back to top
Types
NegotiableQuoteInvalidStateError
Description

An error indicating that an operation was attempted on a negotiable quote in an invalid state.
Fields
Field Name 	Description
message - String! 	The returned error message.
Example

{"message": "abc123"}

back to top
Types
NegotiableQuoteItemQuantityInput
Description

Specifies the updated quantity of an item.
Fields
Input Field 	Description
quantity - Float! 	The new quantity of the negotiable quote item.
quote_item_uid - ID! 	The unique ID of a CartItemInterface object.
Example

{"quantity": 123.45, "quote_item_uid": 4}

back to top
Types
NegotiableQuotePaymentMethodInput
Description

Defines the payment method to be applied to the negotiable quote.
Fields
Input Field 	Description
code - String! 	Payment method code
purchase_order_number - String 	The purchase order number. Optional for most payment methods.
Example

{
  "code": "xyz789",
  "purchase_order_number": "abc123"
}

back to top
Types
NegotiableQuoteReferenceDocumentLink
Description

Contains a reference document link for a negotiable quote template.
Fields
Field Name 	Description
document_identifier - String 	The identifier of the reference document.
document_name - String! 	The title of the reference document.
link_id - ID! 	The unique ID of a reference document link.
reference_document_url - String! 	The URL of the reference document.
Example

{
  "document_identifier": "xyz789",
  "document_name": "xyz789",
  "link_id": "4",
  "reference_document_url": "abc123"
}

back to top
Types
NegotiableQuoteShippingAddress
Fields
Field Name 	Description
available_shipping_methods - [AvailableShippingMethod] 	An array of shipping methods available to the buyer.
city - String! 	The company's city or town.
company - String 	The company name associated with the shipping/billing address.
country - NegotiableQuoteAddressCountry! 	The company's country.
firstname - String! 	The first name of the company user.
lastname - String! 	The last name of the company user.
postcode - String 	The company's ZIP or postal code.
region - NegotiableQuoteAddressRegion 	An object containing the region name, region code, and region ID.
selected_shipping_method - SelectedShippingMethod 	The selected shipping method.
street - [String]! 	An array of strings that define the street number and name.
telephone - String 	The customer's telephone number.
Example

{
  "available_shipping_methods": [AvailableShippingMethod],
  "city": "xyz789",
  "company": "xyz789",
  "country": NegotiableQuoteAddressCountry,
  "firstname": "abc123",
  "lastname": "xyz789",
  "postcode": "xyz789",
  "region": NegotiableQuoteAddressRegion,
  "selected_shipping_method": SelectedShippingMethod,
  "street": ["xyz789"],
  "telephone": "xyz789"
}

back to top
Types
NegotiableQuoteShippingAddressInput
Description

Defines shipping addresses for the negotiable quote.
Fields
Input Field 	Description
address - NegotiableQuoteAddressInput 	A shipping address.
customer_address_uid - ID 	An ID from the company user's address book that uniquely identifies the address to be used for shipping.
customer_notes - String 	Text provided by the company user.
Example

{
  "address": NegotiableQuoteAddressInput,
  "customer_address_uid": 4,
  "customer_notes": "xyz789"
}

back to top
Types
NegotiableQuoteSortInput
Description

Defines the field to use to sort a list of negotiable quotes.
Fields
Input Field 	Description
sort_direction - SortEnum! 	Whether to return results in ascending or descending order.
sort_field - NegotiableQuoteSortableField! 	The specified sort field.
Example

{"sort_direction": "ASC", "sort_field": "QUOTE_NAME"}

back to top
Types
NegotiableQuoteSortableField
Values
Enum Value 	Description

QUOTE_NAME
	Sorts negotiable quotes by name.

CREATED_AT
	Sorts negotiable quotes by the dates they were created.

UPDATED_AT
	Sorts negotiable quotes by the dates they were last modified.
Example

"QUOTE_NAME"

back to top
Types
NegotiableQuoteStatus
Values
Enum Value 	Description

SUBMITTED


PENDING


UPDATED


OPEN


ORDERED


CLOSED


DECLINED


EXPIRED


DRAFT

Example

"SUBMITTED"

back to top
Types
NegotiableQuoteTemplate
Description

Contains details about a negotiable quote template.
Fields
Field Name 	Description
buyer - NegotiableQuoteUser! 	The first and last name of the buyer.
comments - [NegotiableQuoteComment] 	A list of comments made by the buyer and seller.
expiration_date - String! 	The expiration period of the negotiable quote template.
history - [NegotiableQuoteHistoryEntry] 	A list of status and price changes for the negotiable quote template.
is_min_max_qty_used - Boolean! 	Indicates whether the minimum and maximum quantity settings are used.
is_virtual - Boolean! 	Indicates whether the negotiable quote template contains only virtual products.
items - [CartItemInterface] 	The list of items in the negotiable quote template.
max_order_commitment - Int! 	Commitment for maximum orders
min_order_commitment - Int! 	Commitment for minimum orders
name - String! 	The title assigned to the negotiable quote template.
notifications - [QuoteTemplateNotificationMessage] 	A list of notifications for the negotiable quote template.
prices - CartPrices 	A set of subtotals and totals applied to the negotiable quote template.
reference_document_links - [NegotiableQuoteReferenceDocumentLink] 	A list of reference document links for the negotiable quote template.
shipping_addresses - [NegotiableQuoteShippingAddress]! 	A list of shipping addresses applied to the negotiable quote template.
status - String! 	The status of the negotiable quote template.
template_id - ID! 	The unique ID of a NegotiableQuoteTemplate object.
total_quantity - Float! 	The total number of items in the negotiable quote template.
Example

{
  "buyer": NegotiableQuoteUser,
  "comments": [NegotiableQuoteComment],
  "expiration_date": "abc123",
  "history": [NegotiableQuoteHistoryEntry],
  "is_min_max_qty_used": true,
  "is_virtual": false,
  "items": [CartItemInterface],
  "max_order_commitment": 123,
  "min_order_commitment": 987,
  "name": "xyz789",
  "notifications": [QuoteTemplateNotificationMessage],
  "prices": CartPrices,
  "reference_document_links": [
    NegotiableQuoteReferenceDocumentLink
  ],
  "shipping_addresses": [NegotiableQuoteShippingAddress],
  "status": "abc123",
  "template_id": "4",
  "total_quantity": 123.45
}

back to top
Types
NegotiableQuoteTemplateFilterInput
Description

Defines a filter to limit the negotiable quotes to return.
Fields
Input Field 	Description
state - FilterEqualTypeInput 	Filter by state of one or more negotiable quote templates.
status - FilterEqualTypeInput 	Filter by status of one or more negotiable quote templates.
Example

{
  "state": FilterEqualTypeInput,
  "status": FilterEqualTypeInput
}

back to top
Types
NegotiableQuoteTemplateGridItem
Description

Contains data for a negotiable quote template in a grid.
Fields
Field Name 	Description
activated_at - String! 	The date and time the negotiable quote template was activated.
company_name - String! 	Company name the quote template is assigned to
expiration_date - String! 	The expiration period of the negotiable quote template.
is_min_max_qty_used - Boolean! 	Indicates whether the minimum and maximum quantity settings are used.
last_shared_at - String! 	The date and time the negotiable quote template was last shared.
max_order_commitment - Int! 	Commitment for maximum orders
min_negotiated_grand_total - Float! 	The minimum negotiated grand total of the negotiable quote template.
min_order_commitment - Int! 	Commitment for minimum orders
name - String! 	The title assigned to the negotiable quote template.
orders_placed - Int! 	The number of orders placed for the negotiable quote template.
sales_rep_name - String! 	The first and last name of the sales representative.
state - String! 	State of the negotiable quote template.
status - String! 	The status of the negotiable quote template.
submitted_by - String! 	The first and last name of the buyer.
template_id - ID! 	The unique ID of a NegotiableQuoteTemplate object.
Example

{
  "activated_at": "abc123",
  "company_name": "xyz789",
  "expiration_date": "xyz789",
  "is_min_max_qty_used": true,
  "last_shared_at": "abc123",
  "max_order_commitment": 987,
  "min_negotiated_grand_total": 123.45,
  "min_order_commitment": 987,
  "name": "abc123",
  "orders_placed": 987,
  "sales_rep_name": "abc123",
  "state": "xyz789",
  "status": "xyz789",
  "submitted_by": "abc123",
  "template_id": "4"
}

back to top
Types
NegotiableQuoteTemplateItemQuantityInput
Description

Specifies the updated quantity of an item.
Fields
Input Field 	Description
item_id - ID! 	The unique ID of a CartItemInterface object.
max_qty - Float 	The new max quantity of the negotiable quote template item. Only used if is_min_max_qty_used is true on the template.
min_qty - Float 	The new min quantity of the negotiable quote template item. Only used if is_min_max_qty_used is true on the template.
quantity - Float! 	The new quantity of the negotiable quote item.
Example

{
  "item_id": "4",
  "max_qty": 123.45,
  "min_qty": 987.65,
  "quantity": 987.65
}

back to top
Types
NegotiableQuoteTemplateReferenceDocumentLinkInput
Description

Defines the reference document link to add to a negotiable quote template.
Fields
Input Field 	Description
document_identifier - String 	The identifier of the reference document.
document_name - String! 	The title of the reference document.
link_id - ID 	The unique ID of a NegotiableQuoteReferenceDocumentLink object.
reference_document_url - String! 	The URL of the reference document.
Example

{
  "document_identifier": "abc123",
  "document_name": "xyz789",
  "link_id": 4,
  "reference_document_url": "xyz789"
}

back to top
Types
NegotiableQuoteTemplateShippingAddressInput
Description

Defines shipping addresses for the negotiable quote template.
Fields
Input Field 	Description
address - NegotiableQuoteAddressInput 	A shipping address.
customer_address_uid - ID 	An ID from the company user's address book that uniquely identifies the address to be used for shipping.
customer_notes - String 	Text provided by the company user.
Example

{
  "address": NegotiableQuoteAddressInput,
  "customer_address_uid": 4,
  "customer_notes": "xyz789"
}

back to top
Types
NegotiableQuoteTemplateSortInput
Description

Defines the field to use to sort a list of negotiable quotes.
Fields
Input Field 	Description
sort_direction - SortEnum! 	Whether to return results in ascending or descending order.
sort_field - NegotiableQuoteTemplateSortableField! 	The specified sort field.
Example

{"sort_direction": "ASC", "sort_field": "TEMPLATE_ID"}

back to top
Types
NegotiableQuoteTemplateSortableField
Values
Enum Value 	Description

TEMPLATE_ID
	Sorts negotiable quote templates by template id.

LAST_SHARED_AT
	Sorts negotiable quote templates by the date they were last shared.
Example

"TEMPLATE_ID"

back to top
Types
NegotiableQuoteTemplatesOutput
Description

Contains a list of negotiable templates that match the specified filter.
Fields
Field Name 	Description
items - [NegotiableQuoteTemplateGridItem]! 	A list of negotiable quote templates
page_info - SearchResultPageInfo! 	Contains pagination metadata
sort_fields - SortFields 	Contains the default sort field and all available sort fields.
total_count - Int! 	The number of negotiable quote templates returned
Example

{
  "items": [NegotiableQuoteTemplateGridItem],
  "page_info": SearchResultPageInfo,
  "sort_fields": SortFields,
  "total_count": 123
}

back to top
Types
NegotiableQuoteUidNonFatalResultInterface
Fields
Field Name 	Description
quote_uid - ID! 	The unique ID of a NegotiableQuote object.
Possible Types
NegotiableQuoteUidNonFatalResultInterface Types

NegotiableQuoteUidOperationSuccess
Example

{"quote_uid": 4}

back to top
Types
NegotiableQuoteUidOperationSuccess
Description

Contains details about a successful operation on a negotiable quote.
Fields
Field Name 	Description
quote_uid - ID! 	The unique ID of a NegotiableQuote object.
Example

{"quote_uid": "4"}

back to top
Types
NegotiableQuoteUser
Description

A limited view of a Buyer or Seller in the negotiable quote process.
Fields
Field Name 	Description
firstname - String! 	The first name of the buyer or seller making a change.
lastname - String! 	The buyer's or seller's last name.
Example

{
  "firstname": "abc123",
  "lastname": "abc123"
}

back to top
Types
NegotiableQuotesOutput
Description

Contains a list of negotiable that match the specified filter.
Fields
Field Name 	Description
items - [NegotiableQuote]! 	A list of negotiable quotes
page_info - SearchResultPageInfo! 	Contains pagination metadata
sort_fields - SortFields 	Contains the default sort field and all available sort fields.
total_count - Int! 	The number of negotiable quotes returned
Example

{
  "items": [NegotiableQuote],
  "page_info": SearchResultPageInfo,
  "sort_fields": SortFields,
  "total_count": 123
}

back to top
Types
NoSuchEntityUidError
Description

Contains an error message when an invalid UID was specified.
Fields
Field Name 	Description
message - String! 	The returned error message.
uid - ID! 	The specified invalid unique ID of an object.
Example

{
  "message": "xyz789",
  "uid": "4"
}

back to top
Types
OpenNegotiableQuoteTemplateInput
Description

Specifies the quote template id to open quote template.
Fields
Input Field 	Description
template_id - ID! 	The unique ID of a NegotiableQuoteTemplate object.
Example

{"template_id": "4"}

back to top
Types
Order
Description

Contains the order ID.
Fields
Field Name 	Description
order_id - String 	Use order_number instead. Deprecated
order_number - String! 	The unique ID for an Order object.
Example

{
  "order_id": "abc123",
  "order_number": "xyz789"
}

back to top
Types
OrderActionType
Description

The list of available order actions.
Values
Enum Value 	Description

REORDER


CANCEL


RETURN

Example

"REORDER"

back to top
Types
OrderAddress
Description

Contains detailed information about an order's billing and shipping addresses.
Fields
Field Name 	Description
city - String! 	The city or town.
company - String 	The customer's company.
country_code - CountryCodeEnum 	The customer's country.
custom_attributesV2 - [AttributeValueInterface]! 	Custom attributes assigned to the customer address.
fax - String 	The fax number.
firstname - String! 	The first name of the person associated with the shipping/billing address.
lastname - String! 	The family name of the person associated with the shipping/billing address.
middlename - String 	The middle name of the person associated with the shipping/billing address.
postcode - String 	The customer's ZIP or postal code.
prefix - String 	An honorific, such as Dr., Mr., or Mrs.
region - String 	The state or province name.
region_id - ID 	The unique ID for a Region object of a pre-defined region.
street - [String]! 	An array of strings that define the street number and name.
suffix - String 	A value such as Sr., Jr., or III.
telephone - String 	The telephone number.
vat_id - String 	The customer's Value-added tax (VAT) number (for corporate customers).
Example

{
  "city": "xyz789",
  "company": "abc123",
  "country_code": "AF",
  "custom_attributesV2": [AttributeValueInterface],
  "fax": "xyz789",
  "firstname": "xyz789",
  "lastname": "abc123",
  "middlename": "abc123",
  "postcode": "abc123",
  "prefix": "xyz789",
  "region": "abc123",
  "region_id": "4",
  "street": ["abc123"],
  "suffix": "xyz789",
  "telephone": "xyz789",
  "vat_id": "xyz789"
}

back to top
Types
OrderCustomerInfo
Fields
Field Name 	Description
firstname - String! 	First name of the customer
lastname - String 	Last name of the customer
middlename - String 	Middle name of the customer
prefix - String 	Prefix of the customer
suffix - String 	Suffix of the customer
Example

{
  "firstname": "abc123",
  "lastname": "abc123",
  "middlename": "abc123",
  "prefix": "abc123",
  "suffix": "abc123"
}

back to top
Types
OrderInformationInput
Description

Input to retrieve an order based on details.
Fields
Input Field 	Description
email - String! 	Order billing address email.
lastname - String! 	Order billing address lastname.
number - String! 	Order number.
Example

{
  "email": "xyz789",
  "lastname": "xyz789",
  "number": "abc123"
}

back to top
Types
OrderItem
Fields
Field Name 	Description
discounts - [Discount] 	The final discount information for the product.
eligible_for_return - Boolean 	Indicates whether the order item is eligible to be in a return request.
entered_options - [OrderItemOption] 	The entered option for the base product, such as a logo or image.
gift_message - GiftMessage 	The selected gift message for the order item
gift_wrapping - GiftWrapping 	The selected gift wrapping for the order item.
id - ID! 	The unique ID for an OrderItemInterface object.
prices - OrderItemPrices 	Contains details about the price of the item, including taxes and discounts.
product - ProductInterface 	The ProductInterface object, which contains details about the base product
product_name - String 	The name of the base product.
product_sale_price - Money! 	The sale price of the base product, including selected options.
product_sku - String! 	The SKU of the base product.
product_type - String 	The type of product, such as simple, configurable, etc.
product_url_key - String 	URL key of the base product.
quantity_canceled - Float 	The number of canceled items.
quantity_invoiced - Float 	The number of invoiced items.
quantity_ordered - Float 	The number of units ordered for this item.
quantity_refunded - Float 	The number of refunded items.
quantity_return_requested - Float 	The requested return quantity of the item.
quantity_returned - Float 	The number of returned items.
quantity_shipped - Float 	The number of shipped items.
selected_options - [OrderItemOption] 	The selected options for the base product, such as color or size.
status - String 	The status of the order item.
Example

{
  "discounts": [Discount],
  "eligible_for_return": true,
  "entered_options": [OrderItemOption],
  "gift_message": GiftMessage,
  "gift_wrapping": GiftWrapping,
  "id": "4",
  "prices": OrderItemPrices,
  "product": ProductInterface,
  "product_name": "abc123",
  "product_sale_price": Money,
  "product_sku": "abc123",
  "product_type": "abc123",
  "product_url_key": "abc123",
  "quantity_canceled": 123.45,
  "quantity_invoiced": 123.45,
  "quantity_ordered": 987.65,
  "quantity_refunded": 123.45,
  "quantity_return_requested": 123.45,
  "quantity_returned": 123.45,
  "quantity_shipped": 123.45,
  "selected_options": [OrderItemOption],
  "status": "abc123"
}

back to top
Types
OrderItemInterface
Description

Order item details.
Fields
Field Name 	Description
discounts - [Discount] 	The final discount information for the product.
eligible_for_return - Boolean 	Indicates whether the order item is eligible to be in a return request.
entered_options - [OrderItemOption] 	The entered option for the base product, such as a logo or image.
gift_message - GiftMessage 	The selected gift message for the order item
gift_wrapping - GiftWrapping 	The selected gift wrapping for the order item.
id - ID! 	The unique ID for an OrderItemInterface object.
prices - OrderItemPrices 	Contains details about the price of the item, including taxes and discounts.
product - ProductInterface 	The ProductInterface object, which contains details about the base product
product_name - String 	The name of the base product.
product_sale_price - Money! 	The sale price of the base product, including selected options.
product_sku - String! 	The SKU of the base product.
product_type - String 	The type of product, such as simple, configurable, etc.
product_url_key - String 	URL key of the base product.
quantity_canceled - Float 	The number of canceled items.
quantity_invoiced - Float 	The number of invoiced items.
quantity_ordered - Float 	The number of units ordered for this item.
quantity_refunded - Float 	The number of refunded items.
quantity_return_requested - Float 	The requested return quantity of the item.
quantity_returned - Float 	The number of returned items.
quantity_shipped - Float 	The number of shipped items.
selected_options - [OrderItemOption] 	The selected options for the base product, such as color or size.
status - String 	The status of the order item.
Possible Types
OrderItemInterface Types

ConfigurableOrderItem

BundleOrderItem

DownloadableOrderItem

GiftCardOrderItem

OrderItem
Example

{
  "discounts": [Discount],
  "eligible_for_return": false,
  "entered_options": [OrderItemOption],
  "gift_message": GiftMessage,
  "gift_wrapping": GiftWrapping,
  "id": "4",
  "prices": OrderItemPrices,
  "product": ProductInterface,
  "product_name": "abc123",
  "product_sale_price": Money,
  "product_sku": "abc123",
  "product_type": "xyz789",
  "product_url_key": "abc123",
  "quantity_canceled": 987.65,
  "quantity_invoiced": 987.65,
  "quantity_ordered": 123.45,
  "quantity_refunded": 987.65,
  "quantity_return_requested": 987.65,
  "quantity_returned": 987.65,
  "quantity_shipped": 123.45,
  "selected_options": [OrderItemOption],
  "status": "xyz789"
}

back to top
Types
OrderItemOption
Description

Represents order item options like selected or entered.
Fields
Field Name 	Description
label - String! 	The name of the option.
value - String! 	The value of the option.
Example

{
  "label": "xyz789",
  "value": "xyz789"
}

back to top
Types
OrderItemPrices
Fields
Field Name 	Description
discounts - [Discount] 	An array of discounts to be applied to the cart item.
fixed_product_taxes - [FixedProductTax]!
original_price - Money 	The original price of the item.
original_price_including_tax - Money 	The original price of the item including tax.
original_row_total - Money! 	The value of the original price multiplied by the quantity of the item.
original_row_total_including_tax - Money! 	The value of the original price multiplied by the quantity of the item including tax.
price - Money! 	The price of the item before any discounts were applied. The price that might include tax, depending on the configured display settings for cart.
price_including_tax - Money! 	The price of the item before any discounts were applied. The price that might include tax, depending on the configured display settings for cart.
row_total - Money! 	The value of the price multiplied by the quantity of the item.
row_total_including_tax - Money! 	The value of row_total plus the tax applied to the item.
total_item_discount - Money! 	The total of all discounts applied to the item.
Example

{
  "discounts": [Discount],
  "fixed_product_taxes": [FixedProductTax],
  "original_price": Money,
  "original_price_including_tax": Money,
  "original_row_total": Money,
  "original_row_total_including_tax": Money,
  "price": Money,
  "price_including_tax": Money,
  "row_total": Money,
  "row_total_including_tax": Money,
  "total_item_discount": Money
}

back to top
Types
OrderPaymentMethod
Description

Contains details about the payment method used to pay for the order.
Fields
Field Name 	Description
additional_data - [KeyValue] 	Additional data per payment method type.
name - String! 	The label that describes the payment method.
type - String! 	The payment method code that indicates how the order was paid for.
Example

{
  "additional_data": [KeyValue],
  "name": "abc123",
  "type": "xyz789"
}

back to top
Types
OrderShipment
Description

Contains order shipment details.
Fields
Field Name 	Description
comments - [SalesCommentItem] 	Comments added to the shipment.
id - ID! 	The unique ID for a OrderShipment object.
items - [ShipmentItemInterface] 	An array of items included in the shipment.
number - String! 	The sequential credit shipment number.
tracking - [ShipmentTracking] 	An array of shipment tracking details.
Example

{
  "comments": [SalesCommentItem],
  "id": 4,
  "items": [ShipmentItemInterface],
  "number": "abc123",
  "tracking": [ShipmentTracking]
}

back to top
Types
OrderTokenInput
Description

Input to retrieve an order based on token.
Fields
Input Field 	Description
token - String! 	Order token.
Example

{"token": "xyz789"}

back to top
Types
OrderTotal
Description

Contains details about the sales total amounts used to calculate the final price.
Fields
Field Name 	Description
base_grand_total - Money! 	The final base grand total amount in the base currency.
discounts - [Discount] 	The applied discounts to the order.
gift_options - GiftOptionsPrices
grand_total - Money! 	The final total amount, including shipping, discounts, and taxes.
shipping_handling - ShippingHandling 	Details about the shipping and handling costs for the order.
subtotal - Money! 	The subtotal of the order, excluding shipping, discounts, and taxes. Use subtotal_excl_tax field instead Deprecated
subtotal_excl_tax - Money! 	The subtotal of the order, excluding taxes.
subtotal_incl_tax - Money! 	The subtotal of the order, including taxes.
taxes - [TaxItem] 	The order tax details.
total_giftcard - Money 	The gift card balance applied to the order.
total_reward_points - Money 	The total reward points applied to the order.
total_shipping - Money! 	The shipping amount for the order.
total_store_credit - Money 	The total store credit applied to the order.
total_tax - Money! 	The amount of tax applied to the order.
Example

{
  "base_grand_total": Money,
  "discounts": [Discount],
  "gift_options": GiftOptionsPrices,
  "grand_total": Money,
  "shipping_handling": ShippingHandling,
  "subtotal": Money,
  "subtotal_excl_tax": Money,
  "subtotal_incl_tax": Money,
  "taxes": [TaxItem],
  "total_giftcard": Money,
  "total_reward_points": Money,
  "total_shipping": Money,
  "total_store_credit": Money,
  "total_tax": Money
}

back to top
Types
PayflowExpressInput
Description

Contains required input for Payflow Express Checkout payments.
Fields
Input Field 	Description
payer_id - String! 	The unique ID of the PayPal user.
token - String! 	The token returned by the createPaypalExpressToken mutation.
Example

{
  "payer_id": "abc123",
  "token": "abc123"
}

back to top
Types
PayflowLinkInput
Description

A set of relative URLs that PayPal uses in response to various actions during the authorization process. Adobe Commerce prepends the base URL to this value to create a full URL. For example, if the full URL is https://www.example.com/path/to/page.html, the relative URL is path/to/page.html. Use this input for Payflow Link and Payments Advanced payment methods.
Fields
Input Field 	Description
cancel_url - String! 	The relative URL of the page that PayPal redirects to when the buyer cancels the transaction in order to choose a different payment method. If the full URL to this page is https://www.example.com/paypal/action/cancel.html, the relative URL is paypal/action/cancel.html.
error_url - String! 	The relative URL of the transaction error page that PayPal redirects to upon payment error. If the full URL to this page is https://www.example.com/paypal/action/error.html, the relative URL is paypal/action/error.html.
return_url - String! 	The relative URL of the order confirmation page that PayPal redirects to when the payment is successful and additional confirmation is not needed. If the full URL to this page is https://www.example.com/paypal/action/return.html, the relative URL is paypal/action/return.html.
Example

{
  "cancel_url": "xyz789",
  "error_url": "abc123",
  "return_url": "xyz789"
}

back to top
Types
PayflowLinkMode
Description

Indicates the mode for payment. Applies to the Payflow Link and Payments Advanced payment methods.
Values
Enum Value 	Description

TEST


LIVE

Example

"TEST"

back to top
Types
PayflowLinkToken
Description

Contains information used to generate PayPal iframe for transaction. Applies to Payflow Link and Payments Advanced payment methods.
Fields
Field Name 	Description
mode - PayflowLinkMode 	The mode for the Payflow transaction.
paypal_url - String 	The PayPal URL used for requesting a Payflow form.
secure_token - String 	The secure token generated by PayPal.
secure_token_id - String 	The secure token ID generated by PayPal.
Example

{
  "mode": "TEST",
  "paypal_url": "abc123",
  "secure_token": "xyz789",
  "secure_token_id": "xyz789"
}

back to top
Types
PayflowLinkTokenInput
Description

Contains information required to fetch payment token information for the Payflow Link and Payments Advanced payment methods.
Fields
Input Field 	Description
cart_id - String! 	The unique ID that identifies the customer's cart.
Example

{"cart_id": "abc123"}

back to top
Types
PayflowProInput
Description

Contains input for the Payflow Pro and Payments Pro payment methods.
Fields
Input Field 	Description
cc_details - CreditCardDetailsInput! 	Required input for credit card related information.
is_active_payment_token_enabler - Boolean 	Indicates whether details about the shopper's credit/debit card should be tokenized for later usage. Required only if Vault is enabled for the PayPal Payflow Pro payment integration.
Example

{
  "cc_details": CreditCardDetailsInput,
  "is_active_payment_token_enabler": false
}

back to top
Types
PayflowProResponseInput
Description

Input required to complete payment. Applies to Payflow Pro and Payments Pro payment methods.
Fields
Input Field 	Description
cart_id - String! 	The unique ID that identifies the shopper's cart.
paypal_payload - String! 	The payload returned from PayPal.
Example

{
  "cart_id": "abc123",
  "paypal_payload": "abc123"
}

back to top
Types
PayflowProResponseOutput
Fields
Field Name 	Description
cart - Cart! 	The cart with the updated selected payment method.
Example

{"cart": Cart}

back to top
Types
PayflowProTokenInput
Description

Contains input required to fetch payment token information for the Payflow Pro and Payments Pro payment methods.
Fields
Input Field 	Description
cart_id - String! 	The unique ID that identifies the shopper's cart.
urls - PayflowProUrlInput! 	A set of relative URLs that PayPal uses for callback.
Example

{
  "cart_id": "abc123",
  "urls": PayflowProUrlInput
}

back to top
Types
PayflowProUrlInput
Description

Contains a set of relative URLs that PayPal uses in response to various actions during the authorization process. Magento prepends the base URL to this value to create a full URL. For example, if the full URL is https://www.example.com/path/to/page.html, the relative URL is path/to/page.html. Use this input for the Payflow Pro and Payment Pro payment methods.
Fields
Input Field 	Description
cancel_url - String! 	The relative URL of the page that PayPal redirects to when the buyer cancels the transaction in order to choose a different payment method. If the full URL to this page is https://www.example.com/paypal/action/cancel.html, the relative URL is paypal/action/cancel.html.
error_url - String! 	The relative URL of the transaction error page that PayPal redirects to upon payment error. If the full URL to this page is https://www.example.com/paypal/action/error.html, the relative URL is paypal/action/error.html.
return_url - String! 	The relative URL of the final confirmation page that PayPal redirects to upon payment success. If the full URL to this page is https://www.example.com/paypal/action/return.html, the relative URL is paypal/action/return.html.
Example

{
  "cancel_url": "abc123",
  "error_url": "abc123",
  "return_url": "xyz789"
}

back to top
Types
PaymentConfigItem
Description

Contains payment fields that are common to all types of payment methods.
Fields
Field Name 	Description
code - String 	The payment method code as defined in the payment gateway
is_visible - Boolean 	Indicates whether the payment method is displayed
payment_intent - String 	Defines the payment intent (Authorize or Capture
sdk_params - [SDKParams] 	The PayPal parameters required to load the JS SDK
sort_order - String 	The relative order the payment method is displayed on the checkout page
title - String 	The name displayed for the payment method
Possible Types
PaymentConfigItem Types

HostedFieldsConfig

SmartButtonsConfig

ApplePayConfig

GooglePayConfig
Example

{
  "code": "abc123",
  "is_visible": true,
  "payment_intent": "xyz789",
  "sdk_params": [SDKParams],
  "sort_order": "abc123",
  "title": "abc123"
}

back to top
Types
PaymentConfigOutput
Description

Retrieves the payment configuration for a given location
Fields
Field Name 	Description
apple_pay - ApplePayConfig 	ApplePay payment method configuration
google_pay - GooglePayConfig 	GooglePay payment method configuration
hosted_fields - HostedFieldsConfig 	Hosted fields payment method configuration
smart_buttons - SmartButtonsConfig 	Smart Buttons payment method configuration
Example

{
  "apple_pay": ApplePayConfig,
  "google_pay": GooglePayConfig,
  "hosted_fields": HostedFieldsConfig,
  "smart_buttons": SmartButtonsConfig
}

back to top
Types
PaymentLocation
Description

Defines the origin location for that payment request
Values
Enum Value 	Description

PRODUCT_DETAIL


MINICART


CART


CHECKOUT


ADMIN

Example

"PRODUCT_DETAIL"

back to top
Types
PaymentMethodInput
Description

Defines the payment method.
Fields
Input Field 	Description
braintree - BraintreeInput
braintree_ach_direct_debit - BraintreeInput
braintree_ach_direct_debit_vault - BraintreeVaultInput
braintree_applepay_vault - BraintreeVaultInput
braintree_cc_vault - BraintreeCcVaultInput
braintree_googlepay_vault - BraintreeVaultInput
braintree_paypal - BraintreeInput
braintree_paypal_vault - BraintreeVaultInput
code - String! 	The internal name for the payment method.
hosted_pro - HostedProInput 	Required input for PayPal Hosted pro payments.
payflow_express - PayflowExpressInput 	Required input for Payflow Express Checkout payments.
payflow_link - PayflowLinkInput 	Required input for PayPal Payflow Link and Payments Advanced payments.
payflowpro - PayflowProInput 	Required input for PayPal Payflow Pro and Payment Pro payments.
payflowpro_cc_vault - VaultTokenInput 	Required input for PayPal Payflow Pro vault payments.
payment_services_paypal_apple_pay - ApplePayMethodInput 	Required input for Apple Pay button
payment_services_paypal_google_pay - GooglePayMethodInput 	Required input for Google Pay button
payment_services_paypal_hosted_fields - HostedFieldsInput 	Required input for Hosted Fields
payment_services_paypal_smart_buttons - SmartButtonMethodInput 	Required input for Smart buttons
payment_services_paypal_vault - VaultMethodInput 	Required input for vault
paypal_express - PaypalExpressInput 	Required input for Express Checkout and Payments Standard payments.
purchase_order_number - String 	The purchase order number. Optional for most payment methods.
Example

{
  "braintree": BraintreeInput,
  "braintree_ach_direct_debit": BraintreeInput,
  "braintree_ach_direct_debit_vault": BraintreeVaultInput,
  "braintree_applepay_vault": BraintreeVaultInput,
  "braintree_cc_vault": BraintreeCcVaultInput,
  "braintree_googlepay_vault": BraintreeVaultInput,
  "braintree_paypal": BraintreeInput,
  "braintree_paypal_vault": BraintreeVaultInput,
  "code": "abc123",
  "hosted_pro": HostedProInput,
  "payflow_express": PayflowExpressInput,
  "payflow_link": PayflowLinkInput,
  "payflowpro": PayflowProInput,
  "payflowpro_cc_vault": VaultTokenInput,
  "payment_services_paypal_apple_pay": ApplePayMethodInput,
  "payment_services_paypal_google_pay": GooglePayMethodInput,
  "payment_services_paypal_hosted_fields": HostedFieldsInput,
  "payment_services_paypal_smart_buttons": SmartButtonMethodInput,
  "payment_services_paypal_vault": VaultMethodInput,
  "paypal_express": PaypalExpressInput,
  "purchase_order_number": "abc123"
}

back to top
Types
PaymentOrderOutput
Description

Contains the payment order details
Fields
Field Name 	Description
id - String 	PayPal order ID
mp_order_id - String 	The order ID generated by Payment Services
payment_source_details - PaymentSourceDetails 	Details about the card used on the order
status - String 	The status of the payment order
Example

{
  "id": "xyz789",
  "mp_order_id": "abc123",
  "payment_source_details": PaymentSourceDetails,
  "status": "abc123"
}

back to top
Types
PaymentSDKParamsItem
Fields
Field Name 	Description
code - String 	The payment method code used in the order
params - [SDKParams] 	The payment SDK parameters
Example

{
  "code": "xyz789",
  "params": [SDKParams]
}

back to top
Types
PaymentSourceDetails
Fields
Field Name 	Description
card - Card 	Details about the card used on the order
Example

{"card": Card}

back to top
Types
PaymentSourceInput
Description

The payment source information
Fields
Input Field 	Description
card - CardPaymentSourceInput! 	The card payment source information
Example

{"card": CardPaymentSourceInput}

back to top
Types
PaymentSourceOutput
Description

The payment source information
Fields
Field Name 	Description
card - CardPaymentSourceOutput! 	The card payment source information
Example

{"card": CardPaymentSourceOutput}

back to top
Types
PaymentToken
Description

The stored payment method available to the customer.
Fields
Field Name 	Description
details - String 	A description of the stored account details.
payment_method_code - String! 	The payment method code associated with the token.
public_hash - String! 	The public hash of the token.
type - PaymentTokenTypeEnum! 	Specifies the payment token type.
Example

{
  "details": "xyz789",
  "payment_method_code": "xyz789",
  "public_hash": "xyz789",
  "type": "card"
}

back to top
Types
PaymentTokenTypeEnum
Description

The list of available payment token types.
Values
Enum Value 	Description

card
	phpcs:ignore Magento2.GraphQL.ValidArgumentName

account
	phpcs:ignore Magento2.GraphQL.ValidArgumentName
Example

"card"

back to top
Types
PaypalExpressInput
Description

Contains required input for Express Checkout and Payments Standard payments.
Fields
Input Field 	Description
payer_id - String! 	The unique ID of the PayPal user.
token - String! 	The token returned by the createPaypalExpressToken mutation.
Example

{
  "payer_id": "abc123",
  "token": "xyz789"
}

back to top
Types
PaypalExpressTokenInput
Description

Defines the attributes required to receive a payment token for Express Checkout and Payments Standard payment methods.
Fields
Input Field 	Description
cart_id - String! 	The unique ID that identifies the customer's cart.
code - String! 	The payment method code.
express_button - Boolean 	Indicates whether the buyer selected the quick checkout button. The default value is false.
urls - PaypalExpressUrlsInput! 	A set of relative URLs that PayPal uses in response to various actions during the authorization process.
use_paypal_credit - Boolean 	Indicates whether the buyer clicked the PayPal credit button. The default value is false.
Example

{
  "cart_id": "abc123",
  "code": "xyz789",
  "express_button": true,
  "urls": PaypalExpressUrlsInput,
  "use_paypal_credit": true
}

back to top
Types
PaypalExpressTokenOutput
Description

Contains the token returned by PayPal and a set of URLs that allow the buyer to authorize payment and adjust checkout details. Applies to Express Checkout and Payments Standard payment methods.
Fields
Field Name 	Description
paypal_urls - PaypalExpressUrlList 	A set of URLs that allow the buyer to authorize payment and adjust checkout details.
token - String 	The token returned by PayPal.
Example

{
  "paypal_urls": PaypalExpressUrlList,
  "token": "xyz789"
}

back to top
Types
PaypalExpressUrlList
Description

Contains a set of URLs that allow the buyer to authorize payment and adjust checkout details for Express Checkout and Payments Standard transactions.
Fields
Field Name 	Description
edit - String 	The PayPal URL that allows the buyer to edit their checkout details.
start - String 	The URL to the PayPal login page.
Example

{
  "edit": "xyz789",
  "start": "xyz789"
}

back to top
Types
PaypalExpressUrlsInput
Description

Contains a set of relative URLs that PayPal uses in response to various actions during the authorization process. Magento prepends the base URL to this value to create a full URL. For example, if the full URL is https://www.example.com/path/to/page.html, the relative URL is path/to/page.html. Use this input for Express Checkout and Payments Standard payment methods.
Fields
Input Field 	Description
cancel_url - String! 	The relative URL of the page that PayPal redirects to when the buyer cancels the transaction in order to choose a different payment method. If the full URL to this page is https://www.example.com/paypal/action/cancel.html, the relative URL is paypal/action/cancel.html.
pending_url - String 	The relative URL of the page that PayPal redirects to when the payment has been put on hold for additional review. This condition mostly applies to ACH transactions, and is not applicable to most PayPal solutions. If the full URL to this page is https://www.example.com/paypal/action/success_pending.html, the relative URL is paypal/action/success_pending.html.
return_url - String! 	The relative URL of the final confirmation page that PayPal redirects to upon payment success. If the full URL to this page is https://www.example.com/paypal/action/return.html, the relative URL is paypal/action/return.html.
success_url - String 	The relative URL of the order confirmation page that PayPal redirects to when the payment is successful and additional confirmation is not needed. Not applicable to most PayPal solutions. If the full URL to this page is https://www.example.com/paypal/action/success.html, the relative URL is paypal/action/success.html.
Example

{
  "cancel_url": "abc123",
  "pending_url": "xyz789",
  "return_url": "xyz789",
  "success_url": "abc123"
}

back to top
Types
PhysicalProductInterface
Description

Contains attributes specific to tangible products.
Fields
Field Name 	Description
weight - Float 	The weight of the item, in units defined by the store.
Possible Types
PhysicalProductInterface Types

SimpleProduct

ConfigurableProduct

BundleProduct

GiftCardProduct

GroupedProduct
Example

{"weight": 987.65}

back to top
Types
PickupLocation
Description

Defines Pickup Location information.
Fields
Field Name 	Description
city - String
contact_name - String
country_id - String
description - String
email - String
fax - String
latitude - Float
longitude - Float
name - String
phone - String
pickup_location_code - String
postcode - String
region - String
region_id - Int
street - String
Example

{
  "city": "abc123",
  "contact_name": "abc123",
  "country_id": "abc123",
  "description": "xyz789",
  "email": "xyz789",
  "fax": "abc123",
  "latitude": 123.45,
  "longitude": 123.45,
  "name": "abc123",
  "phone": "xyz789",
  "pickup_location_code": "xyz789",
  "postcode": "abc123",
  "region": "xyz789",
  "region_id": 987,
  "street": "abc123"
}

back to top
Types
PickupLocationFilterInput
Description

PickupLocationFilterInput defines the list of attributes and filters for the search.
Fields
Input Field 	Description
city - FilterTypeInput 	Filter by city.
country_id - FilterTypeInput 	Filter by country.
name - FilterTypeInput 	Filter by pickup location name.
pickup_location_code - FilterTypeInput 	Filter by pickup location code.
postcode - FilterTypeInput 	Filter by postcode.
region - FilterTypeInput 	Filter by region.
region_id - FilterTypeInput 	Filter by region id.
street - FilterTypeInput 	Filter by street.
Example

{
  "city": FilterTypeInput,
  "country_id": FilterTypeInput,
  "name": FilterTypeInput,
  "pickup_location_code": FilterTypeInput,
  "postcode": FilterTypeInput,
  "region": FilterTypeInput,
  "region_id": FilterTypeInput,
  "street": FilterTypeInput
}

back to top
Types
PickupLocationSortInput
Description

PickupLocationSortInput specifies attribute to use for sorting search results and indicates whether the results are sorted in ascending or descending order.
Fields
Input Field 	Description
city - SortEnum 	City where pickup location is placed.
contact_name - SortEnum 	Name of the contact person.
country_id - SortEnum 	Id of the country in two letters.
description - SortEnum 	Description of the pickup location.
distance - SortEnum 	Distance to the address, requested by distance filter. Applicable only with distance filter. If distance sort order is present, all other sort orders will be ignored.
email - SortEnum 	Contact email of the pickup location.
fax - SortEnum 	Contact fax of the pickup location.
latitude - SortEnum 	Geographic latitude where pickup location is placed.
longitude - SortEnum 	Geographic longitude where pickup location is placed.
name - SortEnum 	The pickup location name. Customer use this to identify the pickup location.
phone - SortEnum 	Contact phone number of the pickup location.
pickup_location_code - SortEnum 	A code assigned to pickup location to identify the source.
postcode - SortEnum 	Postcode where pickup location is placed.
region - SortEnum 	Name of the region.
region_id - SortEnum 	Id of the region.
street - SortEnum 	Street where pickup location is placed.
Example

{
  "city": "ASC",
  "contact_name": "ASC",
  "country_id": "ASC",
  "description": "ASC",
  "distance": "ASC",
  "email": "ASC",
  "fax": "ASC",
  "latitude": "ASC",
  "longitude": "ASC",
  "name": "ASC",
  "phone": "ASC",
  "pickup_location_code": "ASC",
  "postcode": "ASC",
  "region": "ASC",
  "region_id": "ASC",
  "street": "ASC"
}

back to top
Types
PickupLocations
Description

Top level object returned in a pickup locations search.
Fields
Field Name 	Description
items - [PickupLocation] 	An array of pickup locations that match the specific search request.
page_info - SearchResultPageInfo 	An object that includes the page_info and currentPage values specified in the query.
total_count - Int 	The number of products returned.
Example

{
  "items": [PickupLocation],
  "page_info": SearchResultPageInfo,
  "total_count": 987
}

back to top
Types
PlaceNegotiableQuoteOrderInput
Description

Specifies the negotiable quote to convert to an order.
Fields
Input Field 	Description
quote_uid - ID! 	The unique ID of a NegotiableQuote object.
Example

{"quote_uid": "4"}

back to top
Types
PlaceNegotiableQuoteOrderOutput
Description

An output object that returns the generated order.
Fields
Field Name 	Description
order - Order! 	Contains the generated order number.
Example

{"order": Order}

back to top
Types
PlaceOrderError
Description

An error encountered while placing an order.
Fields
Field Name 	Description
code - PlaceOrderErrorCodes! 	An error code that is specific to place order.
message - String! 	A localized error message.
Example

{
  "code": "CART_NOT_FOUND",
  "message": "xyz789"
}

back to top
Types
PlaceOrderErrorCodes
Values
Enum Value 	Description

CART_NOT_FOUND


CART_NOT_ACTIVE


GUEST_EMAIL_MISSING


UNABLE_TO_PLACE_ORDER


UNDEFINED

Example

"CART_NOT_FOUND"

back to top
Types
PlaceOrderForPurchaseOrderInput
Description

Specifies the purchase order to convert to an order.
Fields
Input Field 	Description
purchase_order_uid - ID! 	The unique ID of a purchase order.
Example

{"purchase_order_uid": 4}

back to top
Types
PlaceOrderForPurchaseOrderOutput
Description

Contains the results of the request to place an order.
Fields
Field Name 	Description
order - CustomerOrder! 	Placed order.
Example

{"order": CustomerOrder}

back to top
Types
PlaceOrderInput
Description

Specifies the quote to be converted to an order.
Fields
Input Field 	Description
cart_id - String! 	The unique ID of a Cart object.
Example

{"cart_id": "abc123"}

back to top
Types
PlaceOrderOutput
Description

Contains the results of the request to place an order.
Fields
Field Name 	Description
errors - [PlaceOrderError]! 	An array of place order errors.
order - Order 	The ID of the order. Use orderV2 instead. Deprecated
orderV2 - CustomerOrder 	Full order information.
Example

{
  "errors": [PlaceOrderError],
  "order": Order,
  "orderV2": CustomerOrder
}

back to top
Types
PlacePurchaseOrderInput
Description

Specifies the quote to be converted to a purchase order.
Fields
Input Field 	Description
cart_id - String! 	The unique ID of a Cart object.
Example

{"cart_id": "abc123"}

back to top
Types
PlacePurchaseOrderOutput
Description

Contains the results of the request to place a purchase order.
Fields
Field Name 	Description
purchase_order - PurchaseOrder! 	Placed purchase order.
Example

{"purchase_order": PurchaseOrder}

back to top
Types
Price
Description

Deprecated. Use ProductPrice instead. Defines the price of a product as well as any tax-related adjustments.
Fields
Field Name 	Description
adjustments - [PriceAdjustment] 	An array that provides information about tax, weee, or weee_tax adjustments. Use ProductPrice instead. Deprecated
amount - Money 	The price of a product plus a three-letter currency code. Use ProductPrice instead. Deprecated
Example

{
  "adjustments": [PriceAdjustment],
  "amount": Money
}

back to top
Types
PriceAdjustment
Description

Deprecated. Taxes will be included or excluded in the price. Defines the amount of money to apply as an adjustment, the type of adjustment to apply, and whether the item is included or excluded from the adjustment.
Fields
Field Name 	Description
amount - Money 	The amount of the price adjustment and its currency code. Deprecated
code - PriceAdjustmentCodesEnum 	Indicates whether the adjustment involves tax, weee, or weee_tax. PriceAdjustment is deprecated. Deprecated
description - PriceAdjustmentDescriptionEnum 	Indicates whether the entity described by the code attribute is included or excluded from the adjustment. PriceAdjustment is deprecated. Deprecated
Example

{
  "amount": Money,
  "code": "TAX",
  "description": "INCLUDED"
}

back to top
Types
PriceAdjustmentCodesEnum
Description

PriceAdjustment.code is deprecated.
Values
Enum Value 	Description

TAX
	PriceAdjustmentCodesEnum is deprecated. Tax is included or excluded in the price. Tax is not shown separately in Catalog.

WEEE
	WEEE code is deprecated. Use fixed_product_taxes.label instead.

WEEE_TAX
	Use fixed_product_taxes instead. Tax is included or excluded in price. The tax is not shown separtely in Catalog.
Example

"TAX"

back to top
Types
PriceAdjustmentDescriptionEnum
Description

PriceAdjustmentDescriptionEnum is deprecated. States whether a price adjustment is included or excluded.
Values
Enum Value 	Description

INCLUDED


EXCLUDED

Example

"INCLUDED"

back to top
Types
PriceDetails
Description

Can be used to retrieve the main price details in case of bundle product
Fields
Field Name 	Description
discount_percentage - Float 	The percentage of discount applied to the main product price
main_final_price - Float 	The final price after applying the discount to the main product
main_price - Float 	The regular price of the main product
Example

{
  "discount_percentage": 123.45,
  "main_final_price": 987.65,
  "main_price": 123.45
}

back to top
Types
PriceRange
Description

Contains the price range for a product. If the product has a single price, the minimum and maximum price will be the same.
Fields
Field Name 	Description
maximum_price - ProductPrice 	The highest possible price for the product.
minimum_price - ProductPrice! 	The lowest possible price for the product.
Example

{
  "maximum_price": ProductPrice,
  "minimum_price": ProductPrice
}

back to top
Types
PriceTypeEnum
Description

Defines the price type.
Values
Enum Value 	Description

FIXED


PERCENT


DYNAMIC

Example

"FIXED"

back to top
Types
PriceViewEnum
Description

Defines whether a bundle product's price is displayed as the lowest possible value or as a range.
Values
Enum Value 	Description

PRICE_RANGE


AS_LOW_AS

Example

"PRICE_RANGE"

back to top
Types
ProductAttribute
Description

Contains a product attribute code and value.
Fields
Field Name 	Description
code - String! 	The unique identifier for a product attribute code.
value - String! 	The display value of the attribute.
Example

{
  "code": "xyz789",
  "value": "abc123"
}

back to top
Types
ProductAttributeFilterInput
Description

Defines the filters to be used in the search. A filter contains at least one attribute, a comparison operator, and the value that is being searched for.
Fields
Input Field 	Description
activity - FilterEqualTypeInput 	Attribute label: Activity
category_gear - FilterEqualTypeInput 	Attribute label: Category Gear
category_id - FilterEqualTypeInput 	Deprecated: use category_uid to filter product by category ID. Deprecated
category_uid - FilterEqualTypeInput 	Filter product by the unique ID for a CategoryInterface object.
category_url_path - FilterEqualTypeInput 	Filter product by category URL path.
climate - FilterEqualTypeInput 	Attribute label: Climate
collar - FilterEqualTypeInput 	Attribute label: Collar
color - FilterEqualTypeInput 	Attribute label: Color
description - FilterMatchTypeInput 	Attribute label: Description
eco_collection - FilterEqualTypeInput 	Attribute label: Eco Collection
erin_recommends - FilterEqualTypeInput 	Attribute label: Erin Recommends
features_bags - FilterEqualTypeInput 	Attribute label: Features
format - FilterEqualTypeInput 	Attribute label: Format
gender - FilterEqualTypeInput 	Attribute label: Gender
material - FilterEqualTypeInput 	Attribute label: Material
name - FilterMatchTypeInput 	Attribute label: Product Name
new - FilterEqualTypeInput 	Attribute label: New
pattern - FilterEqualTypeInput 	Attribute label: Pattern
performance_fabric - FilterEqualTypeInput 	Attribute label: Performance Fabric
price - FilterRangeTypeInput 	Attribute label: Price
purpose - FilterEqualTypeInput 	Attribute label: Purpose
sale - FilterEqualTypeInput 	Attribute label: Sale
short_description - FilterMatchTypeInput 	Attribute label: Short Description
size - FilterEqualTypeInput 	Attribute label: Size
sku - FilterEqualTypeInput 	Attribute label: SKU
sleeve - FilterEqualTypeInput 	Attribute label: Sleeve
strap_bags - FilterEqualTypeInput 	Attribute label: Strap/Handle
style_bags - FilterEqualTypeInput 	Attribute label: Style Bags
style_bottom - FilterEqualTypeInput 	Attribute label: Style Bottom
style_general - FilterEqualTypeInput 	Attribute label: Style General
url_key - FilterEqualTypeInput 	The part of the URL that identifies the product
Example

{
  "activity": FilterEqualTypeInput,
  "category_gear": FilterEqualTypeInput,
  "category_id": FilterEqualTypeInput,
  "category_uid": FilterEqualTypeInput,
  "category_url_path": FilterEqualTypeInput,
  "climate": FilterEqualTypeInput,
  "collar": FilterEqualTypeInput,
  "color": FilterEqualTypeInput,
  "description": FilterMatchTypeInput,
  "eco_collection": FilterEqualTypeInput,
  "erin_recommends": FilterEqualTypeInput,
  "features_bags": FilterEqualTypeInput,
  "format": FilterEqualTypeInput,
  "gender": FilterEqualTypeInput,
  "material": FilterEqualTypeInput,
  "name": FilterMatchTypeInput,
  "new": FilterEqualTypeInput,
  "pattern": FilterEqualTypeInput,
  "performance_fabric": FilterEqualTypeInput,
  "price": FilterRangeTypeInput,
  "purpose": FilterEqualTypeInput,
  "sale": FilterEqualTypeInput,
  "short_description": FilterMatchTypeInput,
  "size": FilterEqualTypeInput,
  "sku": FilterEqualTypeInput,
  "sleeve": FilterEqualTypeInput,
  "strap_bags": FilterEqualTypeInput,
  "style_bags": FilterEqualTypeInput,
  "style_bottom": FilterEqualTypeInput,
  "style_general": FilterEqualTypeInput,
  "url_key": FilterEqualTypeInput
}

back to top
Types
ProductAttributeSortInput
Description

Specifies the attribute to use for sorting search results and indicates whether the results are sorted in ascending or descending order. It's possible to sort products using searchable attributes with enabled 'Use in Filter Options' option
Fields
Input Field 	Description
name - SortEnum 	Attribute label: Product Name
position - SortEnum 	Sort by the position assigned to each product.
price - SortEnum 	Attribute label: Price
relevance - SortEnum 	Sort by the search relevance score (default).
Example

{"name": "ASC", "position": "ASC", "price": "ASC", "relevance": "ASC"}

back to top
Types
ProductCustomAttributes
Description

Product custom attributes
Fields
Field Name 	Description
errors - [AttributeMetadataError]! 	Errors when retrieving custom attributes metadata.
items - [AttributeValueInterface]! 	Requested custom attributes
Example

{
  "errors": [AttributeMetadataError],
  "items": [AttributeValueInterface]
}

back to top
Types
ProductDiscount
Description

Contains the discount applied to a product price.
Fields
Field Name 	Description
amount_off - Float 	The actual value of the discount.
percent_off - Float 	The discount expressed a percentage.
Example

{"amount_off": 987.65, "percent_off": 987.65}

back to top
Types
ProductFilterInput
Description

ProductFilterInput is deprecated, use @ProductAttributeFilterInput instead. ProductFilterInput defines the filters to be used in the search. A filter contains at least one attribute, a comparison operator, and the value that is being searched for.
Fields
Input Field 	Description
category_id - FilterTypeInput 	The category ID the product belongs to.
country_of_manufacture - FilterTypeInput 	The product's country of origin.
created_at - FilterTypeInput 	The timestamp indicating when the product was created.
custom_layout - FilterTypeInput 	The name of a custom layout.
custom_layout_update - FilterTypeInput 	XML code that is applied as a layout update to the product page.
description - FilterTypeInput 	Detailed information about the product. The value can include simple HTML tags.
gift_message_available - FilterTypeInput 	Indicates whether a gift message is available.
has_options - FilterTypeInput 	Indicates whether additional attributes have been created for the product.
image - FilterTypeInput 	The relative path to the main image on the product page.
image_label - FilterTypeInput 	The label assigned to a product image.
is_returnable - FilterTypeInput 	Indicates whether the product can be returned.
manufacturer - FilterTypeInput 	A number representing the product's manufacturer.
max_price - FilterTypeInput 	The numeric maximal price of the product. Do not include the currency code.
meta_description - FilterTypeInput 	A brief overview of the product for search results listings, maximum 255 characters.
meta_keyword - FilterTypeInput 	A comma-separated list of keywords that are visible only to search engines.
meta_title - FilterTypeInput 	A string that is displayed in the title bar and tab of the browser and in search results lists.
min_price - FilterTypeInput 	The numeric minimal price of the product. Do not include the currency code.
name - FilterTypeInput 	The product name. Customers use this name to identify the product.
news_from_date - FilterTypeInput 	The beginning date for new product listings, and determines if the product is featured as a new product.
news_to_date - FilterTypeInput 	The end date for new product listings.
options_container - FilterTypeInput 	If the product has multiple options, determines where they appear on the product page.
or - ProductFilterInput 	The keyword required to perform a logical OR comparison.
price - FilterTypeInput 	The price of an item.
required_options - FilterTypeInput 	Indicates whether the product has required options.
short_description - FilterTypeInput 	A short description of the product. Its use depends on the theme.
sku - FilterTypeInput 	A number or code assigned to a product to identify the product, options, price, and manufacturer.
small_image - FilterTypeInput 	The relative path to the small image, which is used on catalog pages.
small_image_label - FilterTypeInput 	The label assigned to a product's small image.
special_from_date - FilterTypeInput 	The beginning date that a product has a special price.
special_price - FilterTypeInput 	The discounted price of the product. Do not include the currency code.
special_to_date - FilterTypeInput 	The end date that a product has a special price.
swatch_image - FilterTypeInput 	The file name of a swatch image.
thumbnail - FilterTypeInput 	The relative path to the product's thumbnail image.
thumbnail_label - FilterTypeInput 	The label assigned to a product's thumbnail image.
tier_price - FilterTypeInput 	The price when tier pricing is in effect and the items purchased threshold has been reached.
updated_at - FilterTypeInput 	The timestamp indicating when the product was updated.
url_key - FilterTypeInput 	The part of the URL that identifies the product
url_path - FilterTypeInput
weight - FilterTypeInput 	The weight of the item, in units defined by the store.
Example

{
  "category_id": FilterTypeInput,
  "country_of_manufacture": FilterTypeInput,
  "created_at": FilterTypeInput,
  "custom_layout": FilterTypeInput,
  "custom_layout_update": FilterTypeInput,
  "description": FilterTypeInput,
  "gift_message_available": FilterTypeInput,
  "has_options": FilterTypeInput,
  "image": FilterTypeInput,
  "image_label": FilterTypeInput,
  "is_returnable": FilterTypeInput,
  "manufacturer": FilterTypeInput,
  "max_price": FilterTypeInput,
  "meta_description": FilterTypeInput,
  "meta_keyword": FilterTypeInput,
  "meta_title": FilterTypeInput,
  "min_price": FilterTypeInput,
  "name": FilterTypeInput,
  "news_from_date": FilterTypeInput,
  "news_to_date": FilterTypeInput,
  "options_container": FilterTypeInput,
  "or": ProductFilterInput,
  "price": FilterTypeInput,
  "required_options": FilterTypeInput,
  "short_description": FilterTypeInput,
  "sku": FilterTypeInput,
  "small_image": FilterTypeInput,
  "small_image_label": FilterTypeInput,
  "special_from_date": FilterTypeInput,
  "special_price": FilterTypeInput,
  "special_to_date": FilterTypeInput,
  "swatch_image": FilterTypeInput,
  "thumbnail": FilterTypeInput,
  "thumbnail_label": FilterTypeInput,
  "tier_price": FilterTypeInput,
  "updated_at": FilterTypeInput,
  "url_key": FilterTypeInput,
  "url_path": FilterTypeInput,
  "weight": FilterTypeInput
}

back to top
Types
ProductImage
Description

Contains product image information, including the image URL and label.
Fields
Field Name 	Description
disabled - Boolean 	Indicates whether the image is hidden from view.
label - String 	The label of the product image or video.
position - Int 	The media item's position after it has been sorted.
url - String 	The URL of the product image or video.
Example

{
  "disabled": true,
  "label": "abc123",
  "position": 123,
  "url": "abc123"
}

back to top
Types
ProductImageThumbnail
Values
Enum Value 	Description

ITSELF
	Use thumbnail of product as image.

PARENT
	Use thumbnail of product's parent as image.
Example

"ITSELF"

back to top
Types
ProductInfoInput
Description

Product Information used for Pickup Locations search.
Fields
Input Field 	Description
sku - String! 	Product SKU.
Example

{"sku": "xyz789"}

back to top
Types
ProductInterface
Description

Contains fields that are common to all types of products.
Fields
Field Name 	Description
activity - String 	Use the custom_attributes field instead. Deprecated
attribute_set_id - Int 	The attribute set assigned to the product. The field should not be used on the storefront. Deprecated
canonical_url - String 	The relative canonical URL. This value is returned only if the system setting 'Use Canonical Link Meta Tag For Products' is enabled.
categories - [CategoryInterface] 	The categories assigned to a product.
category_gear - String 	Use the custom_attributes field instead. Deprecated
climate - String 	Use the custom_attributes field instead. Deprecated
collar - String 	Use the custom_attributes field instead. Deprecated
color - Int 	Use the custom_attributes field instead. Deprecated
country_of_manufacture - String 	The product's country of origin.
created_at - String 	Timestamp indicating when the product was created. The field should not be used on the storefront. Deprecated
crosssell_products - [ProductInterface] 	An array of cross-sell products.
custom_attributesV2 - ProductCustomAttributes 	Product custom attributes.
description - ComplexTextValue 	Detailed information about the product. The value can include simple HTML tags.
eco_collection - Int 	Use the custom_attributes field instead. Deprecated
erin_recommends - Int 	Use the custom_attributes field instead. Deprecated
features_bags - String 	Use the custom_attributes field instead. Deprecated
format - Int 	Use the custom_attributes field instead. Deprecated
gender - String 	Use the custom_attributes field instead. Deprecated
gift_message_available - Boolean! 	Returns a value indicating gift message availability for the product.
gift_wrapping_available - Boolean! 	Returns a value indicating gift wrapping availability for the product.
gift_wrapping_price - Money 	Returns value and currency indicating gift wrapping price for the product.
id - Int 	The ID number assigned to the product. Use the uid field instead. Deprecated
image - ProductImage 	The relative path to the main image on the product page.
is_returnable - String 	Indicates whether the product can be returned.
manufacturer - Int 	A number representing the product's manufacturer. Use the custom_attributes field instead. Deprecated
material - String 	Use the custom_attributes field instead. Deprecated
max_sale_qty - Float 	Maximum Qty Allowed in Shopping Cart
media_gallery - [MediaGalleryInterface] 	An array of media gallery objects.
media_gallery_entries - [MediaGalleryEntry] 	An array of MediaGalleryEntry objects. Use media_gallery instead. Deprecated
meta_description - String 	A brief overview of the product for search results listings, maximum 255 characters.
meta_keyword - String 	A comma-separated list of keywords that are visible only to search engines.
meta_title - String 	A string that is displayed in the title bar and tab of the browser and in search results lists.
min_sale_qty - Float 	Minimum Qty Allowed in Shopping Cart
name - String 	The product name. Customers use this name to identify the product.
new - Int 	Use the custom_attributes field instead. Deprecated
new_from_date - String 	The beginning date for new product listings, and determines if the product is featured as a new product.
new_to_date - String 	The end date for new product listings.
only_x_left_in_stock - Float 	Product stock only x left count
options_container - String 	If the product has multiple options, determines where they appear on the product page.
pattern - String 	Use the custom_attributes field instead. Deprecated
performance_fabric - Int 	Use the custom_attributes field instead. Deprecated
price - ProductPrices 	Indicates the price of an item. Use price_range for product price information. Deprecated
price_range - PriceRange! 	The range of prices for the product
price_tiers - [TierPrice] 	An array of TierPrice objects.
product_links - [ProductLinksInterface] 	An array of ProductLinks objects.
purpose - Int 	Use the custom_attributes field instead. Deprecated
quantity - Float 	Amount of available stock
rating_summary - Float! 	The average of all the ratings given to the product.
related_products - [ProductInterface] 	An array of related products.
review_count - Int! 	The total count of all the reviews given to the product.
reviews - ProductReviews! 	The list of products reviews.
rules - [CatalogRule] 	Provides applied catalog rules in the current active cart
sale - Int 	Use the custom_attributes field instead. Deprecated
short_description - ComplexTextValue 	A short description of the product. Its use depends on the theme.
size - Int 	Use the custom_attributes field instead. Deprecated
sku - String 	A number or code assigned to a product to identify the product, options, price, and manufacturer.
sleeve - String 	Use the custom_attributes field instead. Deprecated
small_image - ProductImage 	The relative path to the small image, which is used on catalog pages.
special_from_date - String 	The beginning date that a product has a special price. The field should not be used on the storefront. Deprecated
special_price - Float 	The discounted price of the product.
special_to_date - String 	The end date for a product with a special price.
staged - Boolean! 	Indicates whether the product is staged for a future campaign.
stock_status - ProductStockStatus 	Stock status of the product
strap_bags - String 	Use the custom_attributes field instead. Deprecated
style_bags - String 	Use the custom_attributes field instead. Deprecated
style_bottom - String 	Use the custom_attributes field instead. Deprecated
style_general - String 	Use the custom_attributes field instead. Deprecated
swatch_image - String 	The file name of a swatch image.
thumbnail - ProductImage 	The relative path to the product's thumbnail image.
tier_price - Float 	The price when tier pricing is in effect and the items purchased threshold has been reached. Use price_tiers for product tier price information. Deprecated
tier_prices - [ProductTierPrices] 	An array of ProductTierPrices objects. Use price_tiers for product tier price information. Deprecated
type_id - String 	One of simple, virtual, bundle, downloadable, grouped, or configurable. Use __typename instead. Deprecated
uid - ID! 	The unique ID for a ProductInterface object.
updated_at - String 	Timestamp indicating when the product was updated. The field should not be used on the storefront. Deprecated
upsell_products - [ProductInterface] 	An array of up-sell products.
url_key - String 	The part of the URL that identifies the product
url_path - String 	Use product's canonical_url or url rewrites instead Deprecated
url_rewrites - [UrlRewrite] 	URL rewrites list
url_suffix - String 	The part of the product URL that is appended after the url key
websites - [Website] 	An array of websites in which the product is available. The field should not be used on the storefront. Deprecated
Possible Types
ProductInterface Types

VirtualProduct

SimpleProduct

ConfigurableProduct

BundleProduct

DownloadableProduct

GiftCardProduct

GroupedProduct
Example

{
  "activity": "xyz789",
  "attribute_set_id": 987,
  "canonical_url": "xyz789",
  "categories": [CategoryInterface],
  "category_gear": "abc123",
  "climate": "xyz789",
  "collar": "abc123",
  "color": 123,
  "country_of_manufacture": "xyz789",
  "created_at": "abc123",
  "crosssell_products": [ProductInterface],
  "custom_attributesV2": ProductCustomAttributes,
  "description": ComplexTextValue,
  "eco_collection": 123,
  "erin_recommends": 123,
  "features_bags": "abc123",
  "format": 987,
  "gender": "abc123",
  "gift_message_available": true,
  "gift_wrapping_available": false,
  "gift_wrapping_price": Money,
  "id": 987,
  "image": ProductImage,
  "is_returnable": "abc123",
  "manufacturer": 987,
  "material": "xyz789",
  "max_sale_qty": 987.65,
  "media_gallery": [MediaGalleryInterface],
  "media_gallery_entries": [MediaGalleryEntry],
  "meta_description": "abc123",
  "meta_keyword": "xyz789",
  "meta_title": "abc123",
  "min_sale_qty": 987.65,
  "name": "abc123",
  "new": 123,
  "new_from_date": "abc123",
  "new_to_date": "xyz789",
  "only_x_left_in_stock": 123.45,
  "options_container": "xyz789",
  "pattern": "xyz789",
  "performance_fabric": 987,
  "price": ProductPrices,
  "price_range": PriceRange,
  "price_tiers": [TierPrice],
  "product_links": [ProductLinksInterface],
  "purpose": 123,
  "quantity": 123.45,
  "rating_summary": 987.65,
  "related_products": [ProductInterface],
  "review_count": 123,
  "reviews": ProductReviews,
  "rules": [CatalogRule],
  "sale": 123,
  "short_description": ComplexTextValue,
  "size": 987,
  "sku": "xyz789",
  "sleeve": "abc123",
  "small_image": ProductImage,
  "special_from_date": "xyz789",
  "special_price": 987.65,
  "special_to_date": "xyz789",
  "staged": false,
  "stock_status": "IN_STOCK",
  "strap_bags": "xyz789",
  "style_bags": "xyz789",
  "style_bottom": "xyz789",
  "style_general": "xyz789",
  "swatch_image": "abc123",
  "thumbnail": ProductImage,
  "tier_price": 987.65,
  "tier_prices": [ProductTierPrices],
  "type_id": "abc123",
  "uid": 4,
  "updated_at": "xyz789",
  "upsell_products": [ProductInterface],
  "url_key": "xyz789",
  "url_path": "xyz789",
  "url_rewrites": [UrlRewrite],
  "url_suffix": "xyz789",
  "websites": [Website]
}

back to top
Types
ProductLinks
Description

An implementation of ProductLinksInterface.
Fields
Field Name 	Description
link_type - String 	One of related, associated, upsell, or crosssell.
linked_product_sku - String 	The SKU of the linked product.
linked_product_type - String 	The type of linked product (simple, virtual, bundle, downloadable, grouped, configurable).
position - Int 	The position within the list of product links.
sku - String 	The identifier of the linked product.
Example

{
  "link_type": "xyz789",
  "linked_product_sku": "xyz789",
  "linked_product_type": "xyz789",
  "position": 987,
  "sku": "abc123"
}

back to top
Types
ProductLinksInterface
Description

Contains information about linked products, including the link type and product type of each item.
Fields
Field Name 	Description
link_type - String 	One of related, associated, upsell, or crosssell.
linked_product_sku - String 	The SKU of the linked product.
linked_product_type - String 	The type of linked product (simple, virtual, bundle, downloadable, grouped, configurable).
position - Int 	The position within the list of product links.
sku - String 	The identifier of the linked product.
Possible Types
ProductLinksInterface Types

ProductLinks
Example

{
  "link_type": "xyz789",
  "linked_product_sku": "abc123",
  "linked_product_type": "xyz789",
  "position": 987,
  "sku": "abc123"
}

back to top
Types
ProductMediaGalleryEntriesContent
Description

Contains an image in base64 format and basic information about the image.
Fields
Field Name 	Description
base64_encoded_data - String 	The image in base64 format.
name - String 	The file name of the image.
type - String 	The MIME type of the file, such as image/png.
Example

{
  "base64_encoded_data": "abc123",
  "name": "xyz789",
  "type": "xyz789"
}

back to top
Types
ProductMediaGalleryEntriesVideoContent
Description

Contains a link to a video file and basic information about the video.
Fields
Field Name 	Description
media_type - String 	Must be external-video.
video_description - String 	A description of the video.
video_metadata - String 	Optional data about the video.
video_provider - String 	Describes the video source.
video_title - String 	The title of the video.
video_url - String 	The URL to the video.
Example

{
  "media_type": "xyz789",
  "video_description": "xyz789",
  "video_metadata": "xyz789",
  "video_provider": "abc123",
  "video_title": "abc123",
  "video_url": "xyz789"
}

back to top
Types
ProductPrice
Description

Represents a product price.
Fields
Field Name 	Description
discount - ProductDiscount 	The price discount. Represents the difference between the regular and final price.
final_price - Money! 	The final price of the product after applying discounts.
fixed_product_taxes - [FixedProductTax] 	An array of the multiple Fixed Product Taxes that can be applied to a product price.
regular_price - Money! 	The regular price of the product.
Example

{
  "discount": ProductDiscount,
  "final_price": Money,
  "fixed_product_taxes": [FixedProductTax],
  "regular_price": Money
}

back to top
Types
ProductPrices
Description

Deprecated. Use PriceRange instead. Contains the regular price of an item, as well as its minimum and maximum prices. Only composite products, which include bundle, configurable, and grouped products, can contain a minimum and maximum price.
Fields
Field Name 	Description
maximalPrice - Price 	The highest possible final price for all the options defined within a composite product. If you are specifying a price range, this would be the to value. Use PriceRange.maximum_price instead. Deprecated
minimalPrice - Price 	The lowest possible final price for all the options defined within a composite product. If you are specifying a price range, this would be the from value. Use PriceRange.minimum_price instead. Deprecated
regularPrice - Price 	The base price of a product. Use regular_price from PriceRange.minimum_price or PriceRange.maximum_price instead. Deprecated
Example

{
  "maximalPrice": Price,
  "minimalPrice": Price,
  "regularPrice": Price
}

back to top
Types
ProductReview
Description

Contains details of a product review.
Fields
Field Name 	Description
average_rating - Float! 	The average of all ratings for this product.
created_at - String! 	The date the review was created.
nickname - String! 	The customer's nickname. Defaults to the customer name, if logged in.
product - ProductInterface! 	The reviewed product.
ratings_breakdown - [ProductReviewRating]! 	An array of ratings by rating category, such as quality, price, and value.
summary - String! 	The summary (title) of the review.
text - String! 	The review text.
Example

{
  "average_rating": 123.45,
  "created_at": "abc123",
  "nickname": "xyz789",
  "product": ProductInterface,
  "ratings_breakdown": [ProductReviewRating],
  "summary": "xyz789",
  "text": "xyz789"
}

back to top
Types
ProductReviewRating
Description

Contains data about a single aspect of a product review.
Fields
Field Name 	Description
name - String! 	The label assigned to an aspect of a product that is being rated, such as quality or price.
value - String! 	The rating value given by customer. By default, possible values range from 1 to 5.
Example

{
  "name": "xyz789",
  "value": "abc123"
}

back to top
Types
ProductReviewRatingInput
Description

Contains the reviewer's rating for a single aspect of a review.
Fields
Input Field 	Description
id - String! 	An encoded rating ID.
value_id - String! 	An encoded rating value ID.
Example

{
  "id": "xyz789",
  "value_id": "xyz789"
}

back to top
Types
ProductReviewRatingMetadata
Description

Contains details about a single aspect of a product review.
Fields
Field Name 	Description
id - String! 	An encoded rating ID.
name - String! 	The label assigned to an aspect of a product that is being rated, such as quality or price.
values - [ProductReviewRatingValueMetadata]! 	List of product review ratings sorted by position.
Example

{
  "id": "abc123",
  "name": "xyz789",
  "values": [ProductReviewRatingValueMetadata]
}

back to top
Types
ProductReviewRatingValueMetadata
Description

Contains details about a single value in a product review.
Fields
Field Name 	Description
value - String! 	A ratings scale, such as the number of stars awarded.
value_id - String! 	An encoded rating value ID.
Example

{
  "value": "abc123",
  "value_id": "xyz789"
}

back to top
Types
ProductReviewRatingsMetadata
Description

Contains an array of metadata about each aspect of a product review.
Fields
Field Name 	Description
items - [ProductReviewRatingMetadata]! 	An array of product reviews sorted by position.
Example

{"items": [ProductReviewRatingMetadata]}

back to top
Types
ProductReviews
Description

Contains an array of product reviews.
Fields
Field Name 	Description
items - [ProductReview]! 	An array of product reviews.
page_info - SearchResultPageInfo! 	Metadata for pagination rendering.
Example

{
  "items": [ProductReview],
  "page_info": SearchResultPageInfo
}

back to top
Types
ProductStockStatus
Description

This enumeration states whether a product stock status is in stock or out of stock
Values
Enum Value 	Description

IN_STOCK


OUT_OF_STOCK

Example

"IN_STOCK"

back to top
Types
ProductTierPrices
Description

Deprecated. Use TierPrice instead. Defines a tier price, which is a quantity discount offered to a specific customer group.
Fields
Field Name 	Description
customer_group_id - String 	The ID of the customer group. Not relevant for the storefront. Deprecated
percentage_value - Float 	The percentage discount of the item. Use TierPrice.discount instead. Deprecated
qty - Float 	The number of items that must be purchased to qualify for tier pricing. Use TierPrice.quantity instead. Deprecated
value - Float 	The price of the fixed price item. Use TierPrice.final_price instead. Deprecated
website_id - Float 	The ID assigned to the website. Not relevant for the storefront. Deprecated
Example

{
  "customer_group_id": "xyz789",
  "percentage_value": 123.45,
  "qty": 123.45,
  "value": 987.65,
  "website_id": 987.65
}

back to top
Types
ProductVideo
Description

Contains information about a product video.
Fields
Field Name 	Description
disabled - Boolean 	Indicates whether the image is hidden from view.
label - String 	The label of the product image or video.
position - Int 	The media item's position after it has been sorted.
url - String 	The URL of the product image or video.
video_content - ProductMediaGalleryEntriesVideoContent 	Contains a ProductMediaGalleryEntriesVideoContent object.
Example

{
  "disabled": true,
  "label": "xyz789",
  "position": 987,
  "url": "xyz789",
  "video_content": ProductMediaGalleryEntriesVideoContent
}

back to top
Types
Products
Description

Contains the results of a products query.
Fields
Field Name 	Description
aggregations - [Aggregation] 	A bucket that contains the attribute code and label for each filterable option.
filters - [LayerFilter] 	Layered navigation filters array. Use aggregations instead. Deprecated
items - [ProductInterface] 	An array of products that match the specified search criteria.
page_info - SearchResultPageInfo 	An object that includes the page_info and currentPage values specified in the query.
sort_fields - SortFields 	An object that includes the default sort field and all available sort fields.
suggestions - [SearchSuggestion] 	An array of search suggestions for case when search query have no results.
total_count - Int 	The number of products that are marked as visible. By default, in complex products, parent products are visible, but their child products are not.
Example

{
  "aggregations": [Aggregation],
  "filters": [LayerFilter],
  "items": [ProductInterface],
  "page_info": SearchResultPageInfo,
  "sort_fields": SortFields,
  "suggestions": [SearchSuggestion],
  "total_count": 123
}

back to top
Types
PurchaseOrder
Description

Contains details about a purchase order.
Fields
Field Name 	Description
approval_flow - [PurchaseOrderRuleApprovalFlow]! 	The approval flows for each applied rules.
available_actions - [PurchaseOrderAction]! 	Purchase order actions available to the customer. Can be used to display action buttons on the client.
comments - [PurchaseOrderComment]! 	The set of comments applied to the purchase order.
created_at - String! 	The date the purchase order was created.
created_by - Customer 	The company user who created the purchase order.
history_log - [PurchaseOrderHistoryItem]! 	The log of the events related to the purchase order.
number - String! 	The purchase order number.
order - CustomerOrder 	The reference to the order placed based on the purchase order.
quote - Cart 	The quote related to the purchase order.
status - PurchaseOrderStatus! 	The current status of the purchase order.
uid - ID! 	A unique identifier for the purchase order.
updated_at - String! 	The date the purchase order was last updated.
Example

{
  "approval_flow": [PurchaseOrderRuleApprovalFlow],
  "available_actions": ["REJECT"],
  "comments": [PurchaseOrderComment],
  "created_at": "abc123",
  "created_by": Customer,
  "history_log": [PurchaseOrderHistoryItem],
  "number": "xyz789",
  "order": CustomerOrder,
  "quote": Cart,
  "status": "PENDING",
  "uid": 4,
  "updated_at": "abc123"
}

back to top
Types
PurchaseOrderAction
Values
Enum Value 	Description

REJECT


CANCEL


VALIDATE


APPROVE


PLACE_ORDER

Example

"REJECT"

back to top
Types
PurchaseOrderActionError
Description

Contains details about a failed action.
Fields
Field Name 	Description
message - String! 	The returned error message.
type - PurchaseOrderErrorType! 	The error type.
Example

{"message": "abc123", "type": "NOT_FOUND"}

back to top
Types
PurchaseOrderApprovalFlowEvent
Description

Contains details about a single event in the approval flow of the purchase order.
Fields
Field Name 	Description
message - String 	A formatted message.
name - String 	The approver name.
role - String 	The approver role.
status - PurchaseOrderApprovalFlowItemStatus 	The status related to the event.
updated_at - String 	The date and time the event was updated.
Example

{
  "message": "abc123",
  "name": "abc123",
  "role": "abc123",
  "status": "PENDING",
  "updated_at": "abc123"
}

back to top
Types
PurchaseOrderApprovalFlowItemStatus
Values
Enum Value 	Description

PENDING


APPROVED


REJECTED

Example

"PENDING"

back to top
Types
PurchaseOrderApprovalRule
Description

Contains details about a purchase order approval rule.
Fields
Field Name 	Description
applies_to_roles - [CompanyRole]! 	The name of the user(s) affected by the the purchase order approval rule.
approver_roles - [CompanyRole]! 	The name of the user who needs to approve purchase orders that trigger the approval rule.
condition - PurchaseOrderApprovalRuleConditionInterface 	Condition which triggers the approval rule.
created_at - String! 	The date the purchase order rule was created.
created_by - String! 	The name of the user who created the purchase order approval rule.
description - String 	Description of the purchase order approval rule.
name - String! 	The name of the purchase order approval rule.
status - PurchaseOrderApprovalRuleStatus! 	The status of the purchase order approval rule.
uid - ID! 	The unique identifier for the purchase order approval rule.
updated_at - String! 	The date the purchase order rule was last updated.
Example

{
  "applies_to_roles": [CompanyRole],
  "approver_roles": [CompanyRole],
  "condition": PurchaseOrderApprovalRuleConditionInterface,
  "created_at": "xyz789",
  "created_by": "abc123",
  "description": "xyz789",
  "name": "abc123",
  "status": "ENABLED",
  "uid": "4",
  "updated_at": "xyz789"
}

back to top
Types
PurchaseOrderApprovalRuleConditionAmount
Description

Contains approval rule condition details, including the amount to be evaluated.
Fields
Field Name 	Description
amount - Money! 	The amount to be be used for evaluation of the approval rule condition.
attribute - PurchaseOrderApprovalRuleType 	The type of purchase order approval rule.
operator - PurchaseOrderApprovalRuleConditionOperator 	The operator to be used for evaluating the approval rule condition.
Example

{
  "amount": Money,
  "attribute": "GRAND_TOTAL",
  "operator": "MORE_THAN"
}

back to top
Types
PurchaseOrderApprovalRuleConditionInterface
Description

Purchase order rule condition details.
Fields
Field Name 	Description
attribute - PurchaseOrderApprovalRuleType 	The type of purchase order approval rule.
operator - PurchaseOrderApprovalRuleConditionOperator 	The operator to be used for evaluating the approval rule condition.
Possible Types
PurchaseOrderApprovalRuleConditionInterface Types

PurchaseOrderApprovalRuleConditionAmount

PurchaseOrderApprovalRuleConditionQuantity
Example

{"attribute": "GRAND_TOTAL", "operator": "MORE_THAN"}

back to top
Types
PurchaseOrderApprovalRuleConditionOperator
Values
Enum Value 	Description

MORE_THAN


LESS_THAN


MORE_THAN_OR_EQUAL_TO


LESS_THAN_OR_EQUAL_TO

Example

"MORE_THAN"

back to top
Types
PurchaseOrderApprovalRuleConditionQuantity
Description

Contains approval rule condition details, including the quantity to be evaluated.
Fields
Field Name 	Description
attribute - PurchaseOrderApprovalRuleType 	The type of purchase order approval rule.
operator - PurchaseOrderApprovalRuleConditionOperator 	The operator to be used for evaluating the approval rule condition.
quantity - Int 	The quantity to be used for evaluation of the approval rule condition.
Example

{"attribute": "GRAND_TOTAL", "operator": "MORE_THAN", "quantity": 987}

back to top
Types
PurchaseOrderApprovalRuleInput
Description

Defines a new purchase order approval rule.
Fields
Input Field 	Description
applies_to - [ID]! 	A list of company user role IDs to which this purchase order approval rule should be applied. When an empty array is provided, the rule is applied to all user roles in the system, including those created in the future.
approvers - [ID]! 	A list of B2B user roles that can approve this purchase order approval rule.
condition - CreatePurchaseOrderApprovalRuleConditionInput! 	The condition of the purchase order approval rule.
description - String 	A summary of the purpose of the purchase order approval rule.
name - String! 	The purchase order approval rule name.
status - PurchaseOrderApprovalRuleStatus! 	The status of the purchase order approval rule.
Example

{
  "applies_to": [4],
  "approvers": [4],
  "condition": CreatePurchaseOrderApprovalRuleConditionInput,
  "description": "xyz789",
  "name": "abc123",
  "status": "ENABLED"
}

back to top
Types
PurchaseOrderApprovalRuleMetadata
Description

Contains metadata that can be used to render rule edit forms.
Fields
Field Name 	Description
available_applies_to - [CompanyRole]! 	A list of B2B user roles that the rule can be applied to.
available_condition_currencies - [AvailableCurrency]! 	A list of currencies that can be used to create approval rules based on amounts, for example shipping cost rules.
available_requires_approval_from - [CompanyRole]! 	A list of B2B user roles that can be specified as approvers for the approval rules.
Example

{
  "available_applies_to": [CompanyRole],
  "available_condition_currencies": [AvailableCurrency],
  "available_requires_approval_from": [CompanyRole]
}

back to top
Types
PurchaseOrderApprovalRuleStatus
Values
Enum Value 	Description

ENABLED


DISABLED

Example

"ENABLED"

back to top
Types
PurchaseOrderApprovalRuleType
Values
Enum Value 	Description

GRAND_TOTAL


SHIPPING_INCL_TAX


NUMBER_OF_SKUS

Example

"GRAND_TOTAL"

back to top
Types
PurchaseOrderApprovalRules
Description

Contains the approval rules that the customer can see.
Fields
Field Name 	Description
items - [PurchaseOrderApprovalRule]! 	A list of purchase order approval rules visible to the customer.
page_info - SearchResultPageInfo 	Result pagination details.
total_count - Int 	The total number of purchase order approval rules visible to the customer.
Example

{
  "items": [PurchaseOrderApprovalRule],
  "page_info": SearchResultPageInfo,
  "total_count": 987
}

back to top
Types
PurchaseOrderComment
Description

Contains details about a comment.
Fields
Field Name 	Description
author - Customer 	The user who left the comment.
created_at - String! 	The date and time when the comment was created.
text - String! 	The text of the comment.
uid - ID! 	A unique identifier of the comment.
Example

{
  "author": Customer,
  "created_at": "xyz789",
  "text": "xyz789",
  "uid": 4
}

back to top
Types
PurchaseOrderErrorType
Values
Enum Value 	Description

NOT_FOUND


OPERATION_NOT_APPLICABLE


COULD_NOT_SAVE


NOT_VALID_DATA


UNDEFINED

Example

"NOT_FOUND"

back to top
Types
PurchaseOrderHistoryItem
Description

Contains details about a status change.
Fields
Field Name 	Description
activity - String! 	The activity type of the event.
created_at - String! 	The date and time when the event happened.
message - String! 	The message representation of the event.
uid - ID! 	A unique identifier of the purchase order history item.
Example

{
  "activity": "abc123",
  "created_at": "abc123",
  "message": "abc123",
  "uid": "4"
}

back to top
Types
PurchaseOrderRuleApprovalFlow
Description

Contains details about approval roles applied to the purchase order and status changes.
Fields
Field Name 	Description
events - [PurchaseOrderApprovalFlowEvent]! 	The approval flow event related to the rule.
rule_name - String! 	The name of the applied rule.
Example

{
  "events": [PurchaseOrderApprovalFlowEvent],
  "rule_name": "abc123"
}

back to top
Types
PurchaseOrderStatus
Values
Enum Value 	Description

PENDING


APPROVAL_REQUIRED


APPROVED


ORDER_IN_PROGRESS


ORDER_PLACED


ORDER_FAILED


REJECTED


CANCELED


APPROVED_PENDING_PAYMENT

Example

"PENDING"

back to top
Types
PurchaseOrders
Description

Contains a list of purchase orders.
Fields
Field Name 	Description
items - [PurchaseOrder]! 	Purchase orders matching the search criteria.
page_info - SearchResultPageInfo 	Page information of search result's current page.
total_count - Int 	Total number of purchase orders found matching the search criteria.
Example

{
  "items": [PurchaseOrder],
  "page_info": SearchResultPageInfo,
  "total_count": 123
}

back to top
Types
PurchaseOrdersActionInput
Description

Defines which purchase orders to act on.
Fields
Input Field 	Description
purchase_order_uids - [ID]! 	An array of purchase order UIDs.
Example

{"purchase_order_uids": ["4"]}

back to top
Types
PurchaseOrdersActionOutput
Description

Returns a list of updated purchase orders and any error messages.
Fields
Field Name 	Description
errors - [PurchaseOrderActionError]! 	An array of error messages encountered while performing the operation.
purchase_orders - [PurchaseOrder]! 	A list of purchase orders.
Example

{
  "errors": [PurchaseOrderActionError],
  "purchase_orders": [PurchaseOrder]
}

back to top
Types
PurchaseOrdersFilterInput
Description

Defines the criteria to use to filter the list of purchase orders.
Fields
Input Field 	Description
company_purchase_orders - Boolean 	Include only purchase orders made by subordinate company users.
created_date - FilterRangeTypeInput 	Filter by the creation date of the purchase order.
require_my_approval - Boolean 	Include only purchase orders that are waiting for the customer’s approval.
status - PurchaseOrderStatus 	Filter by the status of the purchase order.
Example

{
  "company_purchase_orders": true,
  "created_date": FilterRangeTypeInput,
  "require_my_approval": false,
  "status": "PENDING"
}

back to top
Types
QuoteItemsSortInput
Description

Specifies the field to use for sorting quote items
Fields
Input Field 	Description
field - SortQuoteItemsEnum! 	Specifies the quote items field to sort by
order - SortEnum! 	Specifies the order of quote items' sorting
Example

{"field": "ITEM_ID", "order": "ASC"}

back to top
Types
QuoteTemplateLineItemNoteInput
Description

Sets quote item note.
Fields
Input Field 	Description
item_id - ID! 	The unique ID of a CartLineItem object.
note - String 	The note text to be added.
templateId - ID! 	The unique ID of a NegotiableQuoteTemplate object.
Example

{
  "item_id": "4",
  "note": "abc123",
  "templateId": 4
}

back to top
Types
QuoteTemplateNotificationMessage
Description

Contains a notification message for a negotiable quote template.
Fields
Field Name 	Description
message - String! 	The notification message.
type - String! 	The type of notification message.
Example

{
  "message": "xyz789",
  "type": "xyz789"
}

back to top
Types
ReCaptchaConfigOutput
Fields
Field Name 	Description
configurations - ReCaptchaConfiguration 	Configuration details for reCaptcha type
is_enabled - Boolean! 	Indicates whether reCaptcha type is enabled
Example

{
  "configurations": ReCaptchaConfiguration,
  "is_enabled": false
}

back to top
Types
ReCaptchaConfiguration
Description

Contains reCAPTCHA form configuration details.
Fields
Field Name 	Description
badge_position - String 	The position of the invisible reCAPTCHA badge on each page.
language_code - String 	A two-character code that specifies the language that is used for Google reCAPTCHA text and messaging.
minimum_score - Float 	The minimum score that identifies a user interaction as a potential risk.
re_captcha_type - ReCaptchaTypeEmum!
technical_failure_message - String! 	The message that appears when reCaptcha fails.
theme - String! 	Theme to be used to render reCaptcha.
validation_failure_message - String! 	The message that appears to the user if validation fails.
website_key - String! 	The website key generated when the Google reCAPTCHA account was registered.
Example

{
  "badge_position": "xyz789",
  "language_code": "abc123",
  "minimum_score": 987.65,
  "re_captcha_type": "INVISIBLE",
  "technical_failure_message": "xyz789",
  "theme": "abc123",
  "validation_failure_message": "abc123",
  "website_key": "abc123"
}

back to top
Types
ReCaptchaConfigurationV3
Description

Contains reCAPTCHA V3-Invisible configuration details.
Fields
Field Name 	Description
badge_position - String! 	The position of the invisible reCAPTCHA badge on each page.
failure_message - String! 	The message that appears to the user if validation fails.
forms - [ReCaptchaFormEnum]! 	A list of forms on the storefront that have been configured to use reCAPTCHA V3.
is_enabled - Boolean! 	Return whether recaptcha is enabled or not
language_code - String 	A two-character code that specifies the language that is used for Google reCAPTCHA text and messaging.
minimum_score - Float! 	The minimum score that identifies a user interaction as a potential risk.
theme - String! 	Theme to be used to render reCaptcha.
website_key - String! 	The website key generated when the Google reCAPTCHA account was registered.
Example

{
  "badge_position": "abc123",
  "failure_message": "abc123",
  "forms": ["PLACE_ORDER"],
  "is_enabled": false,
  "language_code": "abc123",
  "minimum_score": 123.45,
  "theme": "xyz789",
  "website_key": "abc123"
}

back to top
Types
ReCaptchaFormEnum
Values
Enum Value 	Description

PLACE_ORDER


CONTACT


CUSTOMER_LOGIN


CUSTOMER_FORGOT_PASSWORD


CUSTOMER_CREATE


CUSTOMER_EDIT


NEWSLETTER


PRODUCT_REVIEW


SENDFRIEND


BRAINTREE


RESEND_CONFIRMATION_EMAIL

Example

"PLACE_ORDER"

back to top
Types
ReCaptchaTypeEmum
Values
Enum Value 	Description

INVISIBLE


RECAPTCHA


RECAPTCHA_V3

Example

"INVISIBLE"

back to top
Types
Region
Fields
Field Name 	Description
code - String 	The two-letter code for the region, such as TX for Texas.
id - Int 	The unique ID for a Region object.
name - String 	The name of the region, such as Texas.
Example

{
  "code": "abc123",
  "id": 987,
  "name": "abc123"
}

back to top
Types
RemoveCouponFromCartInput
Description

Specifies the cart from which to remove a coupon.
Fields
Input Field 	Description
cart_id - String! 	The unique ID of a Cart object.
Example

{"cart_id": "xyz789"}

back to top
Types
RemoveCouponFromCartOutput
Description

Contains details about the cart after removing a coupon.
Fields
Field Name 	Description
cart - Cart 	The cart after removing a coupon.
Example

{"cart": Cart}

back to top
Types
RemoveCouponsFromCartInput
Description

Remove coupons from the cart.
Fields
Input Field 	Description
cart_id - String! 	The unique ID of a Cart object.
coupon_codes - [String]! 	An array of coupon codes to be removed from the quote. If coupon_codes is empty all coupons will be removed from the quote.
Example

{
  "cart_id": "abc123",
  "coupon_codes": ["abc123"]
}

back to top
Types
RemoveGiftCardFromCartInput
Description

Defines the input required to run the removeGiftCardFromCart mutation.
Fields
Input Field 	Description
cart_id - String! 	The unique ID that identifies the customer's cart.
gift_card_code - String! 	The gift card code to be removed to the cart.
Example

{
  "cart_id": "abc123",
  "gift_card_code": "xyz789"
}

back to top
Types
RemoveGiftCardFromCartOutput
Description

Defines the possible output for the removeGiftCardFromCart mutation.
Fields
Field Name 	Description
cart - Cart! 	The contents of the specified shopping cart.
Example

{"cart": Cart}

back to top
Types
RemoveGiftRegistryItemsOutput
Description

Contains the results of a request to remove an item from a gift registry.
Fields
Field Name 	Description
gift_registry - GiftRegistry 	The gift registry after removing items.
Example

{"gift_registry": GiftRegistry}

back to top
Types
RemoveGiftRegistryOutput
Description

Contains the results of a request to delete a gift registry.
Fields
Field Name 	Description
success - Boolean! 	Indicates whether the gift registry was successfully deleted.
Example

{"success": true}

back to top
Types
RemoveGiftRegistryRegistrantsOutput
Description

Contains the results of a request to delete a registrant.
Fields
Field Name 	Description
gift_registry - GiftRegistry 	The gift registry after deleting registrants.
Example

{"gift_registry": GiftRegistry}

back to top
Types
RemoveItemFromCartInput
Description

Specifies which items to remove from the cart.
Fields
Input Field 	Description
cart_id - String! 	The unique ID of a Cart object.
cart_item_id - Int 	Deprecated. Use cart_item_uid instead. Deprecated
cart_item_uid - ID 	Required field. The unique ID for a CartItemInterface object.
Example

{
  "cart_id": "abc123",
  "cart_item_id": 123,
  "cart_item_uid": "4"
}

back to top
Types
RemoveItemFromCartOutput
Description

Contains details about the cart after removing an item.
Fields
Field Name 	Description
cart - Cart! 	The cart after removing an item.
Example

{"cart": Cart}

back to top
Types
RemoveNegotiableQuoteItemsInput
Description

Defines the items to remove from the specified negotiable quote.
Fields
Input Field 	Description
quote_item_uids - [ID]! 	An array of IDs indicating which items to remove from the negotiable quote.
quote_uid - ID! 	The unique ID of a NegotiableQuote object.
Example

{"quote_item_uids": ["4"], "quote_uid": 4}

back to top
Types
RemoveNegotiableQuoteItemsOutput
Description

Contains the negotiable quote.
Fields
Field Name 	Description
quote - NegotiableQuote 	The negotiable quote after removing items.
Example

{"quote": NegotiableQuote}

back to top
Types
RemoveNegotiableQuoteTemplateItemsInput
Description

Defines the items to remove from the specified negotiable quote.
Fields
Input Field 	Description
item_uids - [ID]! 	An array of IDs indicating which items to remove from the negotiable quote.
template_id - ID! 	The unique ID of a NegotiableQuoteTemplate object.
Example

{"item_uids": ["4"], "template_id": 4}

back to top
Types
RemoveProductsFromCompareListInput
Description

Defines which products to remove from a compare list.
Fields
Input Field 	Description
products - [ID]! 	An array of product IDs to remove from the compare list.
uid - ID! 	The unique identifier of the compare list to modify.
Example

{"products": [4], "uid": "4"}

back to top
Types
RemoveProductsFromWishlistOutput
Description

Contains the customer's wish list and any errors encountered.
Fields
Field Name 	Description
user_errors - [WishListUserInputError]! 	An array of errors encountered while deleting products from a wish list.
wishlist - Wishlist! 	Contains the wish list with after items were successfully deleted.
Example

{
  "user_errors": [WishListUserInputError],
  "wishlist": Wishlist
}

back to top
Types
RemoveReturnTrackingInput
Description

Defines the tracking information to delete.
Fields
Input Field 	Description
return_shipping_tracking_uid - ID! 	The unique ID for a ReturnShippingTracking object.
Example

{"return_shipping_tracking_uid": 4}

back to top
Types
RemoveReturnTrackingOutput
Description

Contains the response after deleting tracking information.
Fields
Field Name 	Description
return - Return 	Contains details about the modified return.
Example

{"return": Return}

back to top
Types
RemoveRewardPointsFromCartOutput
Description

Contains the customer cart.
Fields
Field Name 	Description
cart - Cart! 	The customer cart after reward points are removed.
Example

{"cart": Cart}

back to top
Types
RemoveStoreCreditFromCartInput
Description

Defines the input required to run the removeStoreCreditFromCart mutation.
Fields
Input Field 	Description
cart_id - String! 	The unique ID that identifies the customer's cart.
Example

{"cart_id": "xyz789"}

back to top
Types
RemoveStoreCreditFromCartOutput
Description

Defines the possible output for the removeStoreCreditFromCart mutation.
Fields
Field Name 	Description
cart - Cart! 	The contents of the specified shopping cart.
Example

{"cart": Cart}

back to top
Types
RenameNegotiableQuoteInput
Description

Sets new name for a negotiable quote.
Fields
Input Field 	Description
quote_comment - String 	The reason for the quote name change specified by the buyer.
quote_name - String! 	The new quote name the buyer specified to the negotiable quote request.
quote_uid - ID! 	The cart ID of the buyer requesting a new negotiable quote.
Example

{
  "quote_comment": "xyz789",
  "quote_name": "xyz789",
  "quote_uid": 4
}

back to top
Types
RenameNegotiableQuoteOutput
Description

Contains the updated negotiable quote.
Fields
Field Name 	Description
quote - NegotiableQuote 	The negotiable quote after updating the name.
Example

{"quote": NegotiableQuote}

back to top
Types
ReorderItemsOutput
Description

Contains the cart and any errors after adding products.
Fields
Field Name 	Description
cart - Cart! 	Detailed information about the customer's cart.
userInputErrors - [CheckoutUserInputError]! 	An array of reordering errors.
Example

{
  "cart": Cart,
  "userInputErrors": [CheckoutUserInputError]
}

back to top
Types
RequestGuestReturnInput
Description

Contains information needed to start a return request.
Fields
Input Field 	Description
comment_text - String 	Text the buyer entered that describes the reason for the refund request.
contact_email - String 	The email address the buyer enters to receive notifications about the status of the return.
items - [RequestReturnItemInput]! 	An array of items to be returned.
token - String! 	Order token.
Example

{
  "comment_text": "abc123",
  "contact_email": "abc123",
  "items": [RequestReturnItemInput],
  "token": "abc123"
}

back to top
Types
RequestNegotiableQuoteInput
Description

Defines properties of a negotiable quote request.
Fields
Input Field 	Description
cart_id - ID! 	The cart ID of the buyer requesting a new negotiable quote.
comment - NegotiableQuoteCommentInput! 	Comments the buyer entered to describe the request.
is_draft - Boolean 	Flag indicating if quote is draft or not.
quote_name - String! 	The name the buyer assigned to the negotiable quote request.
Example

{
  "cart_id": 4,
  "comment": NegotiableQuoteCommentInput,
  "is_draft": true,
  "quote_name": "xyz789"
}

back to top
Types
RequestNegotiableQuoteOutput
Description

Contains the NegotiableQuote object generated when a buyer requests a negotiable quote.
Fields
Field Name 	Description
quote - NegotiableQuote 	Details about the negotiable quote.
Example

{"quote": NegotiableQuote}

back to top
Types
RequestNegotiableQuoteTemplateInput
Description

Defines properties of a negotiable quote template request.
Fields
Input Field 	Description
cart_id - ID! 	The cart ID of the quote to create the new negotiable quote template from.
Example

{"cart_id": "4"}

back to top
Types
RequestReturnInput
Description

Contains information needed to start a return request.
Fields
Input Field 	Description
comment_text - String 	Text the buyer entered that describes the reason for the refund request.
contact_email - String 	The email address the buyer enters to receive notifications about the status of the return.
items - [RequestReturnItemInput]! 	An array of items to be returned.
order_uid - ID! 	The unique ID for a Order object.
Example

{
  "comment_text": "xyz789",
  "contact_email": "abc123",
  "items": [RequestReturnItemInput],
  "order_uid": 4
}

back to top
Types
RequestReturnItemInput
Description

Contains details about an item to be returned.
Fields
Input Field 	Description
entered_custom_attributes - [EnteredCustomAttributeInput] 	Details about a custom attribute that was entered.
order_item_uid - ID! 	The unique ID for a OrderItemInterface object.
quantity_to_return - Float! 	The quantity of the item to be returned.
selected_custom_attributes - [SelectedCustomAttributeInput] 	An array of selected custom option IDs associated with the item to be returned. For example, the IDs for the selected color and size of a configurable product.
Example

{
  "entered_custom_attributes": [
    EnteredCustomAttributeInput
  ],
  "order_item_uid": "4",
  "quantity_to_return": 123.45,
  "selected_custom_attributes": [
    SelectedCustomAttributeInput
  ]
}

back to top
Types
RequestReturnOutput
Description

Contains the response to a return request.
Fields
Field Name 	Description
return - Return 	Details about a single return request.
returns - Returns 	An array of return requests.
Example

{
  "return": Return,
  "returns": Returns
}

back to top
Types
RequisitionList
Description

Defines the contents of a requisition list.
Fields
Field Name 	Description
description - String 	Optional text that describes the requisition list.
items - RequistionListItems 	An array of products added to the requisition list.
items_count - Int! 	The number of items in the list.
name - String! 	The requisition list name.
uid - ID! 	The unique requisition list ID.
updated_at - String 	The time of the last modification of the requisition list.
Example

{
  "description": "abc123",
  "items": RequistionListItems,
  "items_count": 123,
  "name": "xyz789",
  "uid": 4,
  "updated_at": "xyz789"
}

back to top
Types
RequisitionListFilterInput
Description

Defines requisition list filters.
Fields
Input Field 	Description
name - FilterMatchTypeInput 	Filter by the display name of the requisition list.
uids - FilterEqualTypeInput 	Filter requisition lists by one or more requisition list IDs.
Example

{
  "name": FilterMatchTypeInput,
  "uids": FilterEqualTypeInput
}

back to top
Types
RequisitionListItemInterface
Description

The interface for requisition list items.
Fields
Field Name 	Description
customizable_options - [SelectedCustomizableOption]! 	Selected custom options for an item in the requisition list.
product - ProductInterface! 	Details about a requisition list item.
quantity - Float! 	The amount added.
uid - ID! 	The unique ID for the requisition list item.
Possible Types
RequisitionListItemInterface Types

SimpleRequisitionListItem

VirtualRequisitionListItem

DownloadableRequisitionListItem

BundleRequisitionListItem

ConfigurableRequisitionListItem

GiftCardRequisitionListItem
Example

{
  "customizable_options": [SelectedCustomizableOption],
  "product": ProductInterface,
  "quantity": 987.65,
  "uid": "4"
}

back to top
Types
RequisitionListItemsInput
Description

Defines the items to add.
Fields
Input Field 	Description
entered_options - [EnteredOptionInput] 	Entered option IDs.
parent_sku - String 	For configurable products, the SKU of the parent product.
quantity - Float 	The quantity of the product to add.
selected_options - [String] 	Selected option IDs.
sku - String! 	The product SKU.
Example

{
  "entered_options": [EnteredOptionInput],
  "parent_sku": "xyz789",
  "quantity": 987.65,
  "selected_options": ["abc123"],
  "sku": "abc123"
}

back to top
Types
RequisitionLists
Description

Defines customer requisition lists.
Fields
Field Name 	Description
items - [RequisitionList] 	An array of requisition lists.
page_info - SearchResultPageInfo 	Pagination metadata.
total_count - Int 	The number of returned requisition lists.
Example

{
  "items": [RequisitionList],
  "page_info": SearchResultPageInfo,
  "total_count": 987
}

back to top
Types
RequistionListItems
Description

Contains an array of items added to a requisition list.
Fields
Field Name 	Description
items - [RequisitionListItemInterface]! 	An array of items in the requisition list.
page_info - SearchResultPageInfo 	Pagination metadata.
total_pages - Int! 	The number of pages returned.
Example

{
  "items": [RequisitionListItemInterface],
  "page_info": SearchResultPageInfo,
  "total_pages": 987
}

back to top
Types
Return
Description

Contains details about a return.
Fields
Field Name 	Description
available_shipping_carriers - [ReturnShippingCarrier] 	A list of shipping carriers available for returns.
comments - [ReturnComment] 	A list of comments posted for the return request.
created_at - String! 	The date the return was requested.
customer - ReturnCustomer! 	Data from the customer who created the return request.
items - [ReturnItem] 	A list of items being returned.
number - String! 	A human-readable return number.
order - CustomerOrder 	The order associated with the return.
shipping - ReturnShipping 	Shipping information for the return.
status - ReturnStatus 	The status of the return request.
uid - ID! 	The unique ID for a Return object.
Example

{
  "available_shipping_carriers": [ReturnShippingCarrier],
  "comments": [ReturnComment],
  "created_at": "xyz789",
  "customer": ReturnCustomer,
  "items": [ReturnItem],
  "number": "xyz789",
  "order": CustomerOrder,
  "shipping": ReturnShipping,
  "status": "PENDING",
  "uid": "4"
}

back to top
Types
ReturnComment
Description

Contains details about a return comment.
Fields
Field Name 	Description
author_name - String! 	The name or author who posted the comment.
created_at - String! 	The date and time the comment was posted.
text - String! 	The contents of the comment.
uid - ID! 	The unique ID for a ReturnComment object.
Example

{
  "author_name": "xyz789",
  "created_at": "xyz789",
  "text": "abc123",
  "uid": 4
}

back to top
Types
ReturnCustomAttribute
Description

Contains details about a ReturnCustomerAttribute object.
Fields
Field Name 	Description
label - String! 	A description of the attribute.
uid - ID! 	The unique ID for a ReturnCustomAttribute object.
value - String! 	A JSON-encoded value of the attribute.
Example

{
  "label": "xyz789",
  "uid": "4",
  "value": "xyz789"
}

back to top
Types
ReturnCustomer
Description

The customer information for the return.
Fields
Field Name 	Description
email - String! 	The email address of the customer.
firstname - String 	The first name of the customer.
lastname - String 	The last name of the customer.
Example

{
  "email": "abc123",
  "firstname": "abc123",
  "lastname": "xyz789"
}

back to top
Types
ReturnItem
Description

Contains details about a product being returned.
Fields
Field Name 	Description
custom_attributes - [ReturnCustomAttribute] 	Return item custom attributes that are visible on the storefront. Use custom_attributesV2 instead. Deprecated
custom_attributesV2 - [AttributeValueInterface] 	Custom attributes that are visible on the storefront.
order_item - OrderItemInterface! 	Provides access to the product being returned, including information about selected and entered options.
quantity - Float! 	The quantity of the item the merchant authorized to be returned.
request_quantity - Float! 	The quantity of the item requested to be returned.
status - ReturnItemStatus! 	The return status of the item.
uid - ID! 	The unique ID for a ReturnItem object.
Example

{
  "custom_attributes": [ReturnCustomAttribute],
  "custom_attributesV2": [AttributeValueInterface],
  "order_item": OrderItemInterface,
  "quantity": 123.45,
  "request_quantity": 987.65,
  "status": "PENDING",
  "uid": 4
}

back to top
Types
ReturnItemAttributeMetadata
Description

Return Item attribute metadata.
Fields
Field Name 	Description
code - ID! 	The unique identifier for an attribute code. This value should be in lowercase letters without spaces.
default_value - String 	Default attribute value.
entity_type - AttributeEntityTypeEnum! 	The type of entity that defines the attribute.
frontend_class - String 	The frontend class of the attribute.
frontend_input - AttributeFrontendInputEnum 	The frontend input type of the attribute.
input_filter - InputFilterEnum 	The template used for the input of the attribute (e.g., 'date').
is_required - Boolean! 	Whether the attribute value is required.
is_unique - Boolean! 	Whether the attribute value must be unique.
label - String 	The label assigned to the attribute.
multiline_count - Int 	The number of lines of the attribute value.
options - [CustomAttributeOptionInterface]! 	Attribute options.
sort_order - Int 	The position of the attribute in the form.
validate_rules - [ValidationRule] 	The validation rules of the attribute value.
Example

{
  "code": "4",
  "default_value": "abc123",
  "entity_type": "CATALOG_PRODUCT",
  "frontend_class": "abc123",
  "frontend_input": "BOOLEAN",
  "input_filter": "NONE",
  "is_required": false,
  "is_unique": true,
  "label": "abc123",
  "multiline_count": 987,
  "options": [CustomAttributeOptionInterface],
  "sort_order": 987,
  "validate_rules": [ValidationRule]
}

back to top
Types
ReturnItemStatus
Values
Enum Value 	Description

PENDING


AUTHORIZED


RECEIVED


APPROVED


REJECTED


DENIED

Example

"PENDING"

back to top
Types
ReturnShipping
Description

Contains details about the return shipping address.
Fields
Field Name 	Description
address - ReturnShippingAddress 	The merchant-defined return shipping address.
tracking - [ReturnShippingTracking] 	The unique ID for a ReturnShippingTracking object. If a single UID is specified, the array contains a single tracking record. Otherwise, array contains all tracking information.
Example

{
  "address": ReturnShippingAddress,
  "tracking": [ReturnShippingTracking]
}

back to top
Types
ReturnShippingAddress
Description

Contains details about the shipping address used for receiving returned items.
Fields
Field Name 	Description
city - String! 	The city for product returns.
contact_name - String 	The merchant's contact person.
country - Country! 	An object that defines the country for product returns.
postcode - String! 	The postal code for product returns.
region - Region! 	An object that defines the state or province for product returns.
street - [String]! 	The street address for product returns.
telephone - String 	The telephone number for product returns.
Example

{
  "city": "xyz789",
  "contact_name": "abc123",
  "country": Country,
  "postcode": "xyz789",
  "region": Region,
  "street": ["xyz789"],
  "telephone": "xyz789"
}

back to top
Types
ReturnShippingCarrier
Description

Contains details about the carrier on a return.
Fields
Field Name 	Description
label - String! 	A description of the shipping carrier.
uid - ID! 	The unique ID for a ReturnShippingCarrier object assigned to the shipping carrier.
Example

{"label": "abc123", "uid": 4}

back to top
Types
ReturnShippingTracking
Description

Contains shipping and tracking details.
Fields
Field Name 	Description
carrier - ReturnShippingCarrier! 	Contains details of a shipping carrier.
status - ReturnShippingTrackingStatus 	Details about the status of a shipment.
tracking_number - String! 	A tracking number assigned by the carrier.
uid - ID! 	The unique ID for a ReturnShippingTracking object assigned to the tracking item.
Example

{
  "carrier": ReturnShippingCarrier,
  "status": ReturnShippingTrackingStatus,
  "tracking_number": "abc123",
  "uid": 4
}

back to top
Types
ReturnShippingTrackingStatus
Description

Contains the status of a shipment.
Fields
Field Name 	Description
text - String! 	Text that describes the status.
type - ReturnShippingTrackingStatusType! 	Indicates whether the status type is informational or an error.
Example

{"text": "xyz789", "type": "INFORMATION"}

back to top
Types
ReturnShippingTrackingStatusType
Values
Enum Value 	Description

INFORMATION


ERROR

Example

"INFORMATION"

back to top
Types
ReturnStatus
Values
Enum Value 	Description

PENDING


UNCONFIRMED


AUTHORIZED


PARTIALLY_AUTHORIZED


RECEIVED


PARTIALLY_RECEIVED


APPROVED


PARTIALLY_APPROVED


REJECTED


PARTIALLY_REJECTED


DENIED


PROCESSED_AND_CLOSED


CLOSED

Example

"PENDING"

back to top
Types
Returns
Description

Contains a list of customer return requests.
Fields
Field Name 	Description
items - [Return] 	A list of return requests.
page_info - SearchResultPageInfo 	Pagination metadata.
total_count - Int 	The total number of return requests.
Example

{
  "items": [Return],
  "page_info": SearchResultPageInfo,
  "total_count": 987
}

back to top
Types
RevokeCustomerTokenOutput
Description

Contains the result of a request to revoke a customer token.
Fields
Field Name 	Description
result - Boolean! 	The result of a request to revoke a customer token.
Example

{"result": false}

back to top
Types
RewardPoints
Description

Contains details about a customer's reward points.
Fields
Field Name 	Description
balance - RewardPointsAmount 	The current balance of reward points.
balance_history - [RewardPointsBalanceHistoryItem] 	The balance history of reward points. If the ability for customers to view the balance history has been disabled in the Admin, this field will be set to null.
exchange_rates - RewardPointsExchangeRates 	The current exchange rates for reward points.
subscription_status - RewardPointsSubscriptionStatus 	The subscription status of emails related to reward points.
Example

{
  "balance": RewardPointsAmount,
  "balance_history": [RewardPointsBalanceHistoryItem],
  "exchange_rates": RewardPointsExchangeRates,
  "subscription_status": RewardPointsSubscriptionStatus
}

back to top
Types
RewardPointsAmount
Fields
Field Name 	Description
money - Money! 	The reward points amount in store currency.
points - Float! 	The reward points amount in points.
Example

{"money": Money, "points": 123.45}

back to top
Types
RewardPointsBalanceHistoryItem
Description

Contain details about the reward points transaction.
Fields
Field Name 	Description
balance - RewardPointsAmount 	The award points balance after the completion of the transaction.
change_reason - String! 	The reason the balance changed.
date - String! 	The date of the transaction.
points_change - Float! 	The number of points added or deducted in the transaction.
Example

{
  "balance": RewardPointsAmount,
  "change_reason": "xyz789",
  "date": "xyz789",
  "points_change": 987.65
}

back to top
Types
RewardPointsExchangeRates
Description

Lists the reward points exchange rates. The values depend on the customer group.
Fields
Field Name 	Description
earning - RewardPointsRate 	How many points are earned for a given amount spent.
redemption - RewardPointsRate 	How many points must be redeemed to get a given amount of currency discount at the checkout.
Example

{
  "earning": RewardPointsRate,
  "redemption": RewardPointsRate
}

back to top
Types
RewardPointsRate
Description

Contains details about customer's reward points rate.
Fields
Field Name 	Description
currency_amount - Float! 	The money value for the exchange rate. For earnings, this is the amount spent to earn the specified points. For redemption, this is the amount of money the number of points represents.
points - Float! 	The number of points for an exchange rate. For earnings, this is the number of points earned. For redemption, this is the number of points needed for redemption.
Example

{"currency_amount": 123.45, "points": 987.65}

back to top
Types
RewardPointsSubscriptionStatus
Description

Indicates whether the customer subscribes to reward points emails.
Fields
Field Name 	Description
balance_updates - RewardPointsSubscriptionStatusesEnum! 	Indicates whether the customer subscribes to 'Reward points balance updates' emails.
points_expiration_notifications - RewardPointsSubscriptionStatusesEnum! 	Indicates whether the customer subscribes to 'Reward points expiration notifications' emails.
Example

{
  "balance_updates": "SUBSCRIBED",
  "points_expiration_notifications": "SUBSCRIBED"
}

back to top
Types
RewardPointsSubscriptionStatusesEnum
Values
Enum Value 	Description

SUBSCRIBED


NOT_SUBSCRIBED

Example

"SUBSCRIBED"

back to top
Types
RoutableInterface
Description

Routable entities serve as the model for a rendered page.
Fields
Field Name 	Description
redirect_code - Int! 	Contains 0 when there is no redirect error. A value of 301 indicates the URL of the requested resource has been changed permanently, while a value of 302 indicates a temporary redirect.
relative_url - String 	The internal relative URL. If the specified URL is a redirect, the query returns the redirected URL, not the original.
type - UrlRewriteEntityTypeEnum 	One of PRODUCT, CATEGORY, or CMS_PAGE.
Possible Types
RoutableInterface Types

CmsPage

CategoryTree

VirtualProduct

SimpleProduct

ConfigurableProduct

BundleProduct

DownloadableProduct

GiftCardProduct

GroupedProduct

RoutableUrl
Example

{
  "redirect_code": 123,
  "relative_url": "xyz789",
  "type": "CMS_PAGE"
}

back to top
Types
RoutableUrl
Description

Default implementation of RoutableInterface. This type is returned when the URL is not linked to an entity.
Fields
Field Name 	Description
redirect_code - Int! 	Contains 0 when there is no redirect error. A value of 301 indicates the URL of the requested resource has been changed permanently, while a value of 302 indicates a temporary redirect.
relative_url - String 	The internal relative URL. If the specified URL is a redirect, the query returns the redirected URL, not the original.
type - UrlRewriteEntityTypeEnum 	One of PRODUCT, CATEGORY, or CMS_PAGE.
Example

{
  "redirect_code": 987,
  "relative_url": "xyz789",
  "type": "CMS_PAGE"
}

back to top
Types
SDKParams
Description

Defines the name and value of a SDK parameter
Fields
Field Name 	Description
name - String 	The name of the SDK parameter
value - String 	The value of the SDK parameter
Example

{
  "name": "abc123",
  "value": "abc123"
}

back to top
Types
SalesCommentItem
Description

Contains details about a comment.
Fields
Field Name 	Description
message - String! 	The text of the message.
timestamp - String! 	The timestamp of the comment.
Example

{
  "message": "abc123",
  "timestamp": "abc123"
}

back to top
Types
ScopeTypeEnum
Description

This enumeration defines the scope type for customer orders.
Values
Enum Value 	Description

GLOBAL


WEBSITE


STORE

Example

"GLOBAL"

back to top
Types
SearchResultPageInfo
Description

Provides navigation for the query response.
Fields
Field Name 	Description
current_page - Int 	The specific page to return.
page_size - Int 	The maximum number of items to return per page of results.
total_pages - Int 	The total number of pages in the response.
Example

{"current_page": 123, "page_size": 123, "total_pages": 123}

back to top
Types
SearchSuggestion
Description

A string that contains search suggestion
Fields
Field Name 	Description
search - String! 	The search suggestion of existing product.
Example

{"search": "xyz789"}

back to top
Types
SelectedBundleOption
Description

Contains details about a selected bundle option.
Fields
Field Name 	Description
id - Int! 	Use uid instead Deprecated
label - String! 	The display name of the selected bundle product option.
type - String! 	The type of selected bundle product option.
uid - ID! 	The unique ID for a SelectedBundleOption object
values - [SelectedBundleOptionValue]! 	An array of selected bundle option values.
Example

{
  "id": 987,
  "label": "abc123",
  "type": "xyz789",
  "uid": "4",
  "values": [SelectedBundleOptionValue]
}

back to top
Types
SelectedBundleOptionValue
Description

Contains details about a value for a selected bundle option.
Fields
Field Name 	Description
id - Int! 	Use uid instead
label - String! 	The display name of the value for the selected bundle product option.
original_price - Money! 	The original price of the value for the selected bundle product option.
price - Float! 	The price of the value for the selected bundle product option. Use priceV2 instead. Deprecated
priceV2 - Money! 	The price of the value for the selected bundle product option.
quantity - Float! 	The quantity of the value for the selected bundle product option.
uid - ID! 	The unique ID for a SelectedBundleOptionValue object
Example

{
  "id": 123,
  "label": "xyz789",
  "original_price": Money,
  "price": 987.65,
  "priceV2": Money,
  "quantity": 987.65,
  "uid": "4"
}

back to top
Types
SelectedConfigurableOption
Description

Contains details about a selected configurable option.
Fields
Field Name 	Description
configurable_product_option_uid - ID! 	The unique ID for a ConfigurableProductOptions object.
configurable_product_option_value_uid - ID! 	The unique ID for a ConfigurableProductOptionsValues object.
id - Int! 	Use SelectedConfigurableOption.configurable_product_option_uid instead. Deprecated
option_label - String! 	The display text for the option.
value_id - Int! 	Use SelectedConfigurableOption.configurable_product_option_value_uid instead. Deprecated
value_label - String! 	The display name of the selected configurable option.
Example

{
  "configurable_product_option_uid": 4,
  "configurable_product_option_value_uid": "4",
  "id": 987,
  "option_label": "abc123",
  "value_id": 987,
  "value_label": "abc123"
}

back to top
Types
SelectedCustomAttributeInput
Description

Contains details about an attribute the buyer selected.
Fields
Input Field 	Description
attribute_code - String! 	A string that identifies the selected attribute.
value - String! 	The unique ID for a selected custom attribute value.
Example

{
  "attribute_code": "abc123",
  "value": "xyz789"
}

back to top
Types
SelectedCustomizableOption
Description

Identifies a customized product that has been placed in a cart.
Fields
Field Name 	Description
customizable_option_uid - ID! 	The unique ID for a specific CustomizableOptionInterface object, such as a CustomizableFieldOption, CustomizableFileOption, or CustomizableAreaOption object.
id - Int! 	Use SelectedCustomizableOption.customizable_option_uid instead. Deprecated
is_required - Boolean! 	Indicates whether the customizable option is required.
label - String! 	The display name of the selected customizable option.
sort_order - Int! 	A value indicating the order to display this option.
type - String! 	The type of CustomizableOptionInterface object.
values - [SelectedCustomizableOptionValue]! 	An array of selectable values.
Example

{
  "customizable_option_uid": 4,
  "id": 123,
  "is_required": false,
  "label": "abc123",
  "sort_order": 123,
  "type": "xyz789",
  "values": [SelectedCustomizableOptionValue]
}

back to top
Types
SelectedCustomizableOptionValue
Description

Identifies the value of the selected customized option.
Fields
Field Name 	Description
customizable_option_value_uid - ID! 	The unique ID for a value object that corresponds to the object represented by the customizable_option_uid attribute.
id - Int! 	Use SelectedCustomizableOptionValue.customizable_option_value_uid instead. Deprecated
label - String! 	The display name of the selected value.
price - CartItemSelectedOptionValuePrice! 	The price of the selected customizable value.
value - String! 	The text identifying the selected value.
Example

{
  "customizable_option_value_uid": 4,
  "id": 987,
  "label": "abc123",
  "price": CartItemSelectedOptionValuePrice,
  "value": "xyz789"
}

back to top
Types
SelectedPaymentMethod
Description

Describes the payment method the shopper selected.
Fields
Field Name 	Description
code - String! 	The payment method code.
purchase_order_number - String 	The purchase order number.
title - String! 	The payment method title.
Example

{
  "code": "xyz789",
  "purchase_order_number": "xyz789",
  "title": "abc123"
}

back to top
Types
SelectedShippingMethod
Description

Contains details about the selected shipping method and carrier.
Fields
Field Name 	Description
amount - Money! 	The cost of shipping using this shipping method.
base_amount - Money 	The field should not be used on the storefront. Deprecated
carrier_code - String! 	A string that identifies a commercial carrier or an offline shipping method.
carrier_title - String! 	The label for the carrier code.
method_code - String! 	A shipping method code associated with a carrier.
method_title - String! 	The label for the method code.
price_excl_tax - Money! 	The cost of shipping using this shipping method, excluding tax.
price_incl_tax - Money! 	The cost of shipping using this shipping method, including tax.
Example

{
  "amount": Money,
  "base_amount": Money,
  "carrier_code": "abc123",
  "carrier_title": "xyz789",
  "method_code": "abc123",
  "method_title": "xyz789",
  "price_excl_tax": Money,
  "price_incl_tax": Money
}

back to top
Types
SendEmailToFriendInput
Description

Defines the referenced product and the email sender and recipients.
Fields
Input Field 	Description
product_id - Int! 	The ID of the product that the sender is referencing.
recipients - [SendEmailToFriendRecipientInput]! 	An array containing information about each recipient.
sender - SendEmailToFriendSenderInput! 	Information about the customer and the content of the message.
Example

{
  "product_id": 123,
  "recipients": [SendEmailToFriendRecipientInput],
  "sender": SendEmailToFriendSenderInput
}

back to top
Types
SendEmailToFriendOutput
Description

Contains information about the sender and recipients.
Fields
Field Name 	Description
recipients - [SendEmailToFriendRecipient] 	An array containing information about each recipient.
sender - SendEmailToFriendSender 	Information about the customer and the content of the message.
Example

{
  "recipients": [SendEmailToFriendRecipient],
  "sender": SendEmailToFriendSender
}

back to top
Types
SendEmailToFriendRecipient
Description

An output object that contains information about the recipient.
Fields
Field Name 	Description
email - String! 	The email address of the recipient.
name - String! 	The name of the recipient.
Example

{
  "email": "abc123",
  "name": "xyz789"
}

back to top
Types
SendEmailToFriendRecipientInput
Description

Contains details about a recipient.
Fields
Input Field 	Description
email - String! 	The email address of the recipient.
name - String! 	The name of the recipient.
Example

{
  "email": "abc123",
  "name": "abc123"
}

back to top
Types
SendEmailToFriendSender
Description

An output object that contains information about the sender.
Fields
Field Name 	Description
email - String! 	The email address of the sender.
message - String! 	The text of the message to be sent.
name - String! 	The name of the sender.
Example

{
  "email": "xyz789",
  "message": "xyz789",
  "name": "abc123"
}

back to top
Types
SendEmailToFriendSenderInput
Description

Contains details about the sender.
Fields
Input Field 	Description
email - String! 	The email address of the sender.
message - String! 	The text of the message to be sent.
name - String! 	The name of the sender.
Example

{
  "email": "xyz789",
  "message": "xyz789",
  "name": "xyz789"
}

back to top
Types
SendFriendConfiguration
Description

Contains details about the configuration of the Email to a Friend feature.
Fields
Field Name 	Description
enabled_for_customers - Boolean! 	Indicates whether the Email to a Friend feature is enabled.
enabled_for_guests - Boolean! 	Indicates whether the Email to a Friend feature is enabled for guests.
Example

{"enabled_for_customers": false, "enabled_for_guests": false}

back to top
Types
SendNegotiableQuoteForReviewInput
Description

Specifies which negotiable quote to send for review.
Fields
Input Field 	Description
comment - NegotiableQuoteCommentInput 	A comment for the seller to review.
quote_uid - ID! 	The unique ID of a NegotiableQuote object.
Example

{"comment": NegotiableQuoteCommentInput, "quote_uid": 4}

back to top
Types
SendNegotiableQuoteForReviewOutput
Description

Contains the negotiable quote.
Fields
Field Name 	Description
quote - NegotiableQuote 	The negotiable quote after sending for seller review.
Example

{"quote": NegotiableQuote}

back to top
Types
SetBillingAddressOnCartInput
Description

Sets the billing address.
Fields
Input Field 	Description
billing_address - BillingAddressInput! 	The billing address.
cart_id - String! 	The unique ID of a Cart object.
Example

{
  "billing_address": BillingAddressInput,
  "cart_id": "xyz789"
}

back to top
Types
SetBillingAddressOnCartOutput
Description

Contains details about the cart after setting the billing address.
Fields
Field Name 	Description
cart - Cart! 	The cart after setting the billing address.
Example

{"cart": Cart}

back to top
Types
SetGiftOptionsOnCartInput
Description

Defines the gift options applied to the cart.
Fields
Input Field 	Description
cart_id - String! 	The unique ID that identifies the shopper's cart.
gift_message - GiftMessageInput 	Gift message details for the cart.
gift_receipt_included - Boolean! 	Whether customer requested gift receipt for the cart.
gift_wrapping_id - ID 	The unique ID for a GiftWrapping object to be used for the cart.
printed_card_included - Boolean! 	Whether customer requested printed card for the cart.
Example

{
  "cart_id": "abc123",
  "gift_message": GiftMessageInput,
  "gift_receipt_included": true,
  "gift_wrapping_id": "4",
  "printed_card_included": true
}

back to top
Types
SetGiftOptionsOnCartOutput
Description

Contains the cart after gift options have been applied.
Fields
Field Name 	Description
cart - Cart! 	The modified cart object.
Example

{"cart": Cart}

back to top
Types
SetGuestEmailOnCartInput
Description

Defines the guest email and cart.
Fields
Input Field 	Description
cart_id - String! 	The unique ID of a Cart object.
email - String! 	The email address of the guest.
Example

{
  "cart_id": "abc123",
  "email": "abc123"
}

back to top
Types
SetGuestEmailOnCartOutput
Description

Contains details about the cart after setting the email of a guest.
Fields
Field Name 	Description
cart - Cart! 	The cart after setting the guest email.
Example

{"cart": Cart}

back to top
Types
SetLineItemNoteOutput
Description

Contains the updated negotiable quote.
Fields
Field Name 	Description
quote - NegotiableQuote 	The negotiable quote after sending for seller review.
Example

{"quote": NegotiableQuote}

back to top
Types
SetNegotiableQuoteBillingAddressInput
Description

Sets the billing address.
Fields
Input Field 	Description
billing_address - NegotiableQuoteBillingAddressInput! 	The billing address to be added.
quote_uid - ID! 	The unique ID of a NegotiableQuote object.
Example

{
  "billing_address": NegotiableQuoteBillingAddressInput,
  "quote_uid": "4"
}

back to top
Types
SetNegotiableQuoteBillingAddressOutput
Description

Contains the negotiable quote.
Fields
Field Name 	Description
quote - NegotiableQuote 	The negotiable quote after assigning a billing address.
Example

{"quote": NegotiableQuote}

back to top
Types
SetNegotiableQuotePaymentMethodInput
Description

Defines the payment method of the specified negotiable quote.
Fields
Input Field 	Description
payment_method - NegotiableQuotePaymentMethodInput! 	The payment method to be assigned to the negotiable quote.
quote_uid - ID! 	The unique ID of a NegotiableQuote object.
Example

{
  "payment_method": NegotiableQuotePaymentMethodInput,
  "quote_uid": "4"
}

back to top
Types
SetNegotiableQuotePaymentMethodOutput
Description

Contains details about the negotiable quote after setting the payment method.
Fields
Field Name 	Description
quote - NegotiableQuote 	The updated negotiable quote.
Example

{"quote": NegotiableQuote}

back to top
Types
SetNegotiableQuoteShippingAddressInput
Description

Defines the shipping address to assign to the negotiable quote.
Fields
Input Field 	Description
customer_address_id - ID 	The unique ID of a CustomerAddress object.
quote_uid - ID! 	The unique ID of a NegotiableQuote object.
shipping_addresses - [NegotiableQuoteShippingAddressInput] 	An array of shipping addresses to apply to the negotiable quote.
Example

{
  "customer_address_id": "4",
  "quote_uid": 4,
  "shipping_addresses": [
    NegotiableQuoteShippingAddressInput
  ]
}

back to top
Types
SetNegotiableQuoteShippingAddressOutput
Description

Contains the negotiable quote.
Fields
Field Name 	Description
quote - NegotiableQuote 	The negotiable quote after assigning a shipping address.
Example

{"quote": NegotiableQuote}

back to top
Types
SetNegotiableQuoteShippingMethodsInput
Description

Defines the shipping method to apply to the negotiable quote.
Fields
Input Field 	Description
quote_uid - ID! 	The unique ID of a NegotiableQuote object.
shipping_methods - [ShippingMethodInput]! 	An array of shipping methods to apply to the negotiable quote.
Example

{
  "quote_uid": 4,
  "shipping_methods": [ShippingMethodInput]
}

back to top
Types
SetNegotiableQuoteShippingMethodsOutput
Description

Contains the negotiable quote.
Fields
Field Name 	Description
quote - NegotiableQuote 	The negotiable quote after applying shipping methods.
Example

{"quote": NegotiableQuote}

back to top
Types
SetNegotiableQuoteTemplateShippingAddressInput
Description

Defines the shipping address to assign to the negotiable quote template.
Fields
Input Field 	Description
shipping_address - NegotiableQuoteTemplateShippingAddressInput! 	A shipping adadress to apply to the negotiable quote template.
template_id - ID! 	The unique ID of a NegotiableQuote object.
Example

{
  "shipping_address": NegotiableQuoteTemplateShippingAddressInput,
  "template_id": "4"
}

back to top
Types
SetPaymentMethodAndPlaceOrderInput
Description

Applies a payment method to the quote.
Fields
Input Field 	Description
cart_id - String! 	The unique ID of a Cart object.
payment_method - PaymentMethodInput! 	The payment method data to apply to the cart.
Example

{
  "cart_id": "abc123",
  "payment_method": PaymentMethodInput
}

back to top
Types
SetPaymentMethodOnCartInput
Description

Applies a payment method to the cart.
Fields
Input Field 	Description
cart_id - String! 	The unique ID of a Cart object.
payment_method - PaymentMethodInput! 	The payment method data to apply to the cart.
Example

{
  "cart_id": "abc123",
  "payment_method": PaymentMethodInput
}

back to top
Types
SetPaymentMethodOnCartOutput
Description

Contains details about the cart after setting the payment method.
Fields
Field Name 	Description
cart - Cart! 	The cart after setting the payment method.
Example

{"cart": Cart}

back to top
Types
SetShippingAddressesOnCartInput
Description

Specifies an array of addresses to use for shipping.
Fields
Input Field 	Description
cart_id - String! 	The unique ID of a Cart object.
shipping_addresses - [ShippingAddressInput]! 	An array of shipping addresses.
Example

{
  "cart_id": "xyz789",
  "shipping_addresses": [ShippingAddressInput]
}

back to top
Types
SetShippingAddressesOnCartOutput
Description

Contains details about the cart after setting the shipping addresses.
Fields
Field Name 	Description
cart - Cart! 	The cart after setting the shipping addresses.
Example

{"cart": Cart}

back to top
Types
SetShippingMethodsOnCartInput
Description

Applies one or shipping methods to the cart.
Fields
Input Field 	Description
cart_id - String! 	The unique ID of a Cart object.
shipping_methods - [ShippingMethodInput]! 	An array of shipping methods.
Example

{
  "cart_id": "xyz789",
  "shipping_methods": [ShippingMethodInput]
}

back to top
Types
SetShippingMethodsOnCartOutput
Description

Contains details about the cart after setting the shipping methods.
Fields
Field Name 	Description
cart - Cart! 	The cart after setting the shipping methods.
Example

{"cart": Cart}

back to top
Types
ShareGiftRegistryInviteeInput
Description

Defines a gift registry invitee.
Fields
Input Field 	Description
email - String! 	The email address of the gift registry invitee.
name - String! 	The name of the gift registry invitee.
Example

{
  "email": "abc123",
  "name": "xyz789"
}

back to top
Types
ShareGiftRegistryOutput
Description

Contains the results of a request to share a gift registry.
Fields
Field Name 	Description
is_shared - Boolean! 	Indicates whether the gift registry was successfully shared.
Example

{"is_shared": false}

back to top
Types
ShareGiftRegistrySenderInput
Description

Defines the sender of an invitation to view a gift registry.
Fields
Input Field 	Description
message - String! 	A brief message from the sender.
name - String! 	The sender of the gift registry invitation.
Example

{
  "message": "xyz789",
  "name": "abc123"
}

back to top
Types
ShipBundleItemsEnum
Description

Defines whether bundle items must be shipped together.
Values
Enum Value 	Description

TOGETHER


SEPARATELY

Example

"TOGETHER"

back to top
Types
ShipmentItem
Fields
Field Name 	Description
id - ID! 	The unique ID for a ShipmentItemInterface object.
order_item - OrderItemInterface 	The order item associated with the shipment item.
product_name - String 	The name of the base product.
product_sale_price - Money! 	The sale price for the base product.
product_sku - String! 	The SKU of the base product.
quantity_shipped - Float! 	The number of shipped items.
Example

{
  "id": "4",
  "order_item": OrderItemInterface,
  "product_name": "abc123",
  "product_sale_price": Money,
  "product_sku": "xyz789",
  "quantity_shipped": 987.65
}

back to top
Types
ShipmentItemInterface
Description

Order shipment item details.
Fields
Field Name 	Description
id - ID! 	The unique ID for a ShipmentItemInterface object.
order_item - OrderItemInterface 	The order item associated with the shipment item.
product_name - String 	The name of the base product.
product_sale_price - Money! 	The sale price for the base product.
product_sku - String! 	The SKU of the base product.
quantity_shipped - Float! 	The number of shipped items.
Possible Types
ShipmentItemInterface Types

BundleShipmentItem

GiftCardShipmentItem

ShipmentItem
Example

{
  "id": "4",
  "order_item": OrderItemInterface,
  "product_name": "abc123",
  "product_sale_price": Money,
  "product_sku": "xyz789",
  "quantity_shipped": 123.45
}

back to top
Types
ShipmentTracking
Description

Contains order shipment tracking details.
Fields
Field Name 	Description
carrier - String! 	The shipping carrier for the order delivery.
number - String 	The tracking number of the order shipment.
title - String! 	The shipment tracking title.
Example

{
  "carrier": "abc123",
  "number": "abc123",
  "title": "xyz789"
}

back to top
Types
ShippingAddressInput
Description

Defines a single shipping address.
Fields
Input Field 	Description
address - CartAddressInput 	Defines a shipping address.
customer_address_id - Int 	An ID from the customer's address book that uniquely identifies the address to be used for shipping.
customer_notes - String 	Text provided by the shopper.
pickup_location_code - String 	The code of Pickup Location which will be used for In-Store Pickup.
Example

{
  "address": CartAddressInput,
  "customer_address_id": 123,
  "customer_notes": "xyz789",
  "pickup_location_code": "xyz789"
}

back to top
Types
ShippingCartAddress
Description

Contains shipping addresses and methods.
Fields
Field Name 	Description
available_shipping_methods - [AvailableShippingMethod] 	An array that lists the shipping methods that can be applied to the cart.
cart_items - [CartItemQuantity] 	Use cart_items_v2 instead. Deprecated
cart_items_v2 - [CartItemInterface] 	An array that lists the items in the cart.
city - String! 	The city specified for the billing or shipping address.
company - String 	The company specified for the billing or shipping address.
country - CartAddressCountry! 	An object containing the country label and code.
custom_attributes - [AttributeValueInterface]! 	The custom attribute values of the billing or shipping address.
customer_notes - String 	Text provided by the shopper.
fax - String 	The customer's fax number.
firstname - String! 	The first name of the customer or guest.
id - Int 	Id of the customer address.
items_weight - Float 	This information should not be exposed on the frontend. Deprecated
lastname - String! 	The last name of the customer or guest.
middlename - String 	The middle name of the person associated with the billing/shipping address.
pickup_location_code - String
postcode - String 	The ZIP or postal code of the billing or shipping address.
prefix - String 	An honorific, such as Dr., Mr., or Mrs.
region - CartAddressRegion 	An object containing the region label and code.
same_as_billing - Boolean! 	Indicates whether the shipping address is same as billing address.
selected_shipping_method - SelectedShippingMethod 	An object that describes the selected shipping method.
street - [String]! 	An array containing the street for the billing or shipping address.
suffix - String 	A value such as Sr., Jr., or III.
telephone - String 	The telephone number for the billing or shipping address.
uid - String! 	The unique id of the customer address.
vat_id - String 	The VAT company number for billing or shipping address.
Example

{
  "available_shipping_methods": [AvailableShippingMethod],
  "cart_items": [CartItemQuantity],
  "cart_items_v2": [CartItemInterface],
  "city": "abc123",
  "company": "abc123",
  "country": CartAddressCountry,
  "custom_attributes": [AttributeValueInterface],
  "customer_notes": "abc123",
  "fax": "abc123",
  "firstname": "xyz789",
  "id": 987,
  "items_weight": 123.45,
  "lastname": "abc123",
  "middlename": "abc123",
  "pickup_location_code": "xyz789",
  "postcode": "abc123",
  "prefix": "abc123",
  "region": CartAddressRegion,
  "same_as_billing": true,
  "selected_shipping_method": SelectedShippingMethod,
  "street": ["xyz789"],
  "suffix": "abc123",
  "telephone": "abc123",
  "uid": "xyz789",
  "vat_id": "xyz789"
}

back to top
Types
ShippingDiscount
Description

Defines an individual shipping discount. This discount can be applied to shipping.
Fields
Field Name 	Description
amount - Money! 	The amount of the discount.
Example

{"amount": Money}

back to top
Types
ShippingHandling
Description

Contains details about shipping and handling costs.
Fields
Field Name 	Description
amount_excluding_tax - Money 	The shipping amount, excluding tax.
amount_including_tax - Money 	The shipping amount, including tax.
discounts - [ShippingDiscount] 	The applied discounts to the shipping.
taxes - [TaxItem] 	Details about taxes applied for shipping.
total_amount - Money! 	The total amount for shipping.
Example

{
  "amount_excluding_tax": Money,
  "amount_including_tax": Money,
  "discounts": [ShippingDiscount],
  "taxes": [TaxItem],
  "total_amount": Money
}

back to top
Types
ShippingMethodInput
Description

Defines the shipping carrier and method.
Fields
Input Field 	Description
carrier_code - String! 	A string that identifies a commercial carrier or an offline delivery method.
method_code - String! 	A string that indicates which service a commercial carrier will use to ship items. For offline delivery methods, this value is similar to the label displayed on the checkout page.
Example

{
  "carrier_code": "abc123",
  "method_code": "xyz789"
}

back to top
Types
SimpleCartItem
Description

An implementation for simple product cart items.
Fields
Field Name 	Description
available_gift_wrapping - [GiftWrapping]! 	The list of available gift wrapping options for the cart item.
customizable_options - [SelectedCustomizableOption]! 	An array containing the customizable options the shopper selected.
discount - [Discount] 	Contains discount for quote line item.
errors - [CartItemError] 	An array of errors encountered while loading the cart item
gift_message - GiftMessage 	The entered gift message for the cart item
gift_wrapping - GiftWrapping 	The selected gift wrapping for the cart item.
id - String! 	Use uid instead. Deprecated
is_available - Boolean! 	True if requested quantity is less than available stock, false otherwise.
max_qty - Float 	Line item max qty in quote template
min_qty - Float 	Line item min qty in quote template
not_available_message - String 	Message to display when the product is not available with this selected option.
note_from_buyer - [ItemNote] 	The buyer's quote line item note.
note_from_seller - [ItemNote] 	The seller's quote line item note.
prices - CartItemPrices 	Contains details about the price of the item, including taxes and discounts.
product - ProductInterface! 	Details about an item in the cart.
quantity - Float! 	The quantity of this item in the cart.
uid - ID! 	The unique ID for a CartItemInterface object.
Example

{
  "available_gift_wrapping": [GiftWrapping],
  "customizable_options": [SelectedCustomizableOption],
  "discount": [Discount],
  "errors": [CartItemError],
  "gift_message": GiftMessage,
  "gift_wrapping": GiftWrapping,
  "id": "xyz789",
  "is_available": true,
  "max_qty": 987.65,
  "min_qty": 987.65,
  "not_available_message": "xyz789",
  "note_from_buyer": [ItemNote],
  "note_from_seller": [ItemNote],
  "prices": CartItemPrices,
  "product": ProductInterface,
  "quantity": 987.65,
  "uid": 4
}

back to top
Types
SimpleProduct
Description

Defines a simple product, which is tangible and is usually sold in single units or in fixed quantities.
Fields
Field Name 	Description
activity - String 	Use the custom_attributes field instead. Deprecated
attribute_set_id - Int 	The attribute set assigned to the product. The field should not be used on the storefront. Deprecated
canonical_url - String 	The relative canonical URL. This value is returned only if the system setting 'Use Canonical Link Meta Tag For Products' is enabled.
categories - [CategoryInterface] 	The categories assigned to a product.
category_gear - String 	Use the custom_attributes field instead. Deprecated
climate - String 	Use the custom_attributes field instead. Deprecated
collar - String 	Use the custom_attributes field instead. Deprecated
color - Int 	Use the custom_attributes field instead. Deprecated
country_of_manufacture - String 	The product's country of origin.
created_at - String 	Timestamp indicating when the product was created. The field should not be used on the storefront. Deprecated
crosssell_products - [ProductInterface] 	An array of cross-sell products.
custom_attributesV2 - ProductCustomAttributes 	Product custom attributes.
description - ComplexTextValue 	Detailed information about the product. The value can include simple HTML tags.
eco_collection - Int 	Use the custom_attributes field instead. Deprecated
erin_recommends - Int 	Use the custom_attributes field instead. Deprecated
features_bags - String 	Use the custom_attributes field instead. Deprecated
format - Int 	Use the custom_attributes field instead. Deprecated
gender - String 	Use the custom_attributes field instead. Deprecated
gift_message_available - Boolean! 	Returns a value indicating gift message availability for the product.
gift_wrapping_available - Boolean! 	Returns a value indicating gift wrapping availability for the product.
gift_wrapping_price - Money 	Returns value and currency indicating gift wrapping price for the product.
id - Int 	The ID number assigned to the product. Use the uid field instead. Deprecated
image - ProductImage 	The relative path to the main image on the product page.
is_returnable - String 	Indicates whether the product can be returned.
manufacturer - Int 	A number representing the product's manufacturer. Use the custom_attributes field instead. Deprecated
material - String 	Use the custom_attributes field instead. Deprecated
max_sale_qty - Float 	Maximum Qty Allowed in Shopping Cart
media_gallery - [MediaGalleryInterface] 	An array of media gallery objects.
media_gallery_entries - [MediaGalleryEntry] 	An array of MediaGalleryEntry objects. Use media_gallery instead. Deprecated
meta_description - String 	A brief overview of the product for search results listings, maximum 255 characters.
meta_keyword - String 	A comma-separated list of keywords that are visible only to search engines.
meta_title - String 	A string that is displayed in the title bar and tab of the browser and in search results lists.
min_sale_qty - Float 	Minimum Qty Allowed in Shopping Cart
name - String 	The product name. Customers use this name to identify the product.
new - Int 	Use the custom_attributes field instead. Deprecated
new_from_date - String 	The beginning date for new product listings, and determines if the product is featured as a new product.
new_to_date - String 	The end date for new product listings.
only_x_left_in_stock - Float 	Product stock only x left count
options - [CustomizableOptionInterface] 	An array of options for a customizable product.
options_container - String 	If the product has multiple options, determines where they appear on the product page.
pattern - String 	Use the custom_attributes field instead. Deprecated
performance_fabric - Int 	Use the custom_attributes field instead. Deprecated
price - ProductPrices 	Indicates the price of an item. Use price_range for product price information. Deprecated
price_range - PriceRange! 	The range of prices for the product
price_tiers - [TierPrice] 	An array of TierPrice objects.
product_links - [ProductLinksInterface] 	An array of ProductLinks objects.
purpose - Int 	Use the custom_attributes field instead. Deprecated
quantity - Float 	Amount of available stock
rating_summary - Float! 	The average of all the ratings given to the product.
redirect_code - Int! 	Contains 0 when there is no redirect error. A value of 301 indicates the URL of the requested resource has been changed permanently, while a value of 302 indicates a temporary redirect.
related_products - [ProductInterface] 	An array of related products.
relative_url - String 	The internal relative URL. If the specified URL is a redirect, the query returns the redirected URL, not the original.
review_count - Int! 	The total count of all the reviews given to the product.
reviews - ProductReviews! 	The list of products reviews.
rules - [CatalogRule] 	Provides applied catalog rules in the current active cart
sale - Int 	Use the custom_attributes field instead. Deprecated
short_description - ComplexTextValue 	A short description of the product. Its use depends on the theme.
size - Int 	Use the custom_attributes field instead. Deprecated
sku - String 	A number or code assigned to a product to identify the product, options, price, and manufacturer.
sleeve - String 	Use the custom_attributes field instead. Deprecated
small_image - ProductImage 	The relative path to the small image, which is used on catalog pages.
special_from_date - String 	The beginning date that a product has a special price. The field should not be used on the storefront. Deprecated
special_price - Float 	The discounted price of the product.
special_to_date - String 	The end date for a product with a special price.
staged - Boolean! 	Indicates whether the product is staged for a future campaign.
stock_status - ProductStockStatus 	Stock status of the product
strap_bags - String 	Use the custom_attributes field instead. Deprecated
style_bags - String 	Use the custom_attributes field instead. Deprecated
style_bottom - String 	Use the custom_attributes field instead. Deprecated
style_general - String 	Use the custom_attributes field instead. Deprecated
swatch_image - String 	The file name of a swatch image.
thumbnail - ProductImage 	The relative path to the product's thumbnail image.
tier_price - Float 	The price when tier pricing is in effect and the items purchased threshold has been reached. Use price_tiers for product tier price information. Deprecated
tier_prices - [ProductTierPrices] 	An array of ProductTierPrices objects. Use price_tiers for product tier price information. Deprecated
type - UrlRewriteEntityTypeEnum 	One of PRODUCT, CATEGORY, or CMS_PAGE.
type_id - String 	One of simple, virtual, bundle, downloadable, grouped, or configurable. Use __typename instead. Deprecated
uid - ID! 	The unique ID for a ProductInterface object.
updated_at - String 	Timestamp indicating when the product was updated. The field should not be used on the storefront. Deprecated
upsell_products - [ProductInterface] 	An array of up-sell products.
url_key - String 	The part of the URL that identifies the product
url_path - String 	Use product's canonical_url or url rewrites instead Deprecated
url_rewrites - [UrlRewrite] 	URL rewrites list
url_suffix - String 	The part of the product URL that is appended after the url key
websites - [Website] 	An array of websites in which the product is available. The field should not be used on the storefront. Deprecated
weight - Float 	The weight of the item, in units defined by the store.
Example

{
  "activity": "abc123",
  "attribute_set_id": 987,
  "canonical_url": "abc123",
  "categories": [CategoryInterface],
  "category_gear": "abc123",
  "climate": "xyz789",
  "collar": "abc123",
  "color": 987,
  "country_of_manufacture": "abc123",
  "created_at": "xyz789",
  "crosssell_products": [ProductInterface],
  "custom_attributesV2": ProductCustomAttributes,
  "description": ComplexTextValue,
  "eco_collection": 987,
  "erin_recommends": 123,
  "features_bags": "xyz789",
  "format": 987,
  "gender": "xyz789",
  "gift_message_available": false,
  "gift_wrapping_available": false,
  "gift_wrapping_price": Money,
  "id": 987,
  "image": ProductImage,
  "is_returnable": "xyz789",
  "manufacturer": 987,
  "material": "xyz789",
  "max_sale_qty": 123.45,
  "media_gallery": [MediaGalleryInterface],
  "media_gallery_entries": [MediaGalleryEntry],
  "meta_description": "xyz789",
  "meta_keyword": "abc123",
  "meta_title": "abc123",
  "min_sale_qty": 987.65,
  "name": "xyz789",
  "new": 123,
  "new_from_date": "xyz789",
  "new_to_date": "xyz789",
  "only_x_left_in_stock": 987.65,
  "options": [CustomizableOptionInterface],
  "options_container": "abc123",
  "pattern": "xyz789",
  "performance_fabric": 123,
  "price": ProductPrices,
  "price_range": PriceRange,
  "price_tiers": [TierPrice],
  "product_links": [ProductLinksInterface],
  "purpose": 987,
  "quantity": 987.65,
  "rating_summary": 123.45,
  "redirect_code": 123,
  "related_products": [ProductInterface],
  "relative_url": "abc123",
  "review_count": 123,
  "reviews": ProductReviews,
  "rules": [CatalogRule],
  "sale": 987,
  "short_description": ComplexTextValue,
  "size": 987,
  "sku": "abc123",
  "sleeve": "xyz789",
  "small_image": ProductImage,
  "special_from_date": "xyz789",
  "special_price": 123.45,
  "special_to_date": "abc123",
  "staged": true,
  "stock_status": "IN_STOCK",
  "strap_bags": "xyz789",
  "style_bags": "xyz789",
  "style_bottom": "xyz789",
  "style_general": "xyz789",
  "swatch_image": "xyz789",
  "thumbnail": ProductImage,
  "tier_price": 123.45,
  "tier_prices": [ProductTierPrices],
  "type": "CMS_PAGE",
  "type_id": "xyz789",
  "uid": "4",
  "updated_at": "xyz789",
  "upsell_products": [ProductInterface],
  "url_key": "xyz789",
  "url_path": "xyz789",
  "url_rewrites": [UrlRewrite],
  "url_suffix": "xyz789",
  "websites": [Website],
  "weight": 987.65
}

back to top
Types
SimpleProductCartItemInput
Description

Defines a single product to add to the cart.
Fields
Input Field 	Description
customizable_options - [CustomizableOptionInput] 	An array that defines customizable options for the product.
data - CartItemInput! 	An object containing the sku, quantity, and other relevant information about the product.
Example

{
  "customizable_options": [CustomizableOptionInput],
  "data": CartItemInput
}

back to top
Types
SimpleRequisitionListItem
Description

Contains details about simple products added to a requisition list.
Fields
Field Name 	Description
customizable_options - [SelectedCustomizableOption]! 	Selected custom options for an item in the requisition list.
product - ProductInterface! 	Details about a requisition list item.
quantity - Float! 	The amount added.
uid - ID! 	The unique ID for the requisition list item.
Example

{
  "customizable_options": [SelectedCustomizableOption],
  "product": ProductInterface,
  "quantity": 123.45,
  "uid": 4
}

back to top
Types
SimpleWishlistItem
Description

Contains a simple product wish list item.
Fields
Field Name 	Description
added_at - String! 	The date and time the item was added to the wish list.
customizable_options - [SelectedCustomizableOption]! 	Custom options selected for the wish list item.
description - String 	The description of the item.
id - ID! 	The unique ID for a WishlistItemInterface object.
product - ProductInterface 	Product details of the wish list item.
quantity - Float! 	The quantity of this wish list item.
Example

{
  "added_at": "xyz789",
  "customizable_options": [SelectedCustomizableOption],
  "description": "abc123",
  "id": "4",
  "product": ProductInterface,
  "quantity": 987.65
}

back to top
Types
SmartButtonMethodInput
Description

Smart button payment inputs
Fields
Input Field 	Description
payment_source - String 	The payment source for the payment method
payments_order_id - String 	The payment services order ID
paypal_order_id - String 	PayPal order ID
Example

{
  "payment_source": "abc123",
  "payments_order_id": "abc123",
  "paypal_order_id": "abc123"
}

back to top
Types
SmartButtonsConfig
Fields
Field Name 	Description
button_styles - ButtonStyles 	The styles for the PayPal Smart Button configuration
code - String 	The payment method code as defined in the payment gateway
display_message - Boolean 	Indicates whether to display the PayPal Pay Later message
display_venmo - Boolean 	Indicates whether to display Venmo
is_visible - Boolean 	Indicates whether the payment method is displayed
message_styles - MessageStyles 	Contains details about the styles for the PayPal Pay Later message
payment_intent - String 	Defines the payment intent (Authorize or Capture
sdk_params - [SDKParams] 	The PayPal parameters required to load the JS SDK
sort_order - String 	The relative order the payment method is displayed on the checkout page
title - String 	The name displayed for the payment method
Example

{
  "button_styles": ButtonStyles,
  "code": "xyz789",
  "display_message": true,
  "display_venmo": true,
  "is_visible": false,
  "message_styles": MessageStyles,
  "payment_intent": "xyz789",
  "sdk_params": [SDKParams],
  "sort_order": "xyz789",
  "title": "abc123"
}

back to top
Types
SortEnum
Description

Indicates whether to return results in ascending or descending order.
Values
Enum Value 	Description

ASC


DESC

Example

"ASC"

back to top
Types
SortField
Description

Defines a possible sort field.
Fields
Field Name 	Description
label - String 	The label of the sort field.
value - String 	The attribute code of the sort field.
Example

{
  "label": "abc123",
  "value": "abc123"
}

back to top
Types
SortFields
Description

Contains a default value for sort fields and all available sort fields.
Fields
Field Name 	Description
default - String 	The default sort field value.
options - [SortField] 	An array of possible sort fields.
Example

{
  "default": "abc123",
  "options": [SortField]
}

back to top
Types
SortQuoteItemsEnum
Description

Specifies the field to use for sorting quote items
Values
Enum Value 	Description

ITEM_ID


CREATED_AT


UPDATED_AT


PRODUCT_ID


SKU


NAME


DESCRIPTION


WEIGHT


QTY


PRICE


BASE_PRICE


CUSTOM_PRICE


DISCOUNT_PERCENT


DISCOUNT_AMOUNT


BASE_DISCOUNT_AMOUNT


TAX_PERCENT


TAX_AMOUNT


BASE_TAX_AMOUNT


ROW_TOTAL


BASE_ROW_TOTAL


ROW_TOTAL_WITH_DISCOUNT


ROW_WEIGHT


PRODUCT_TYPE


BASE_TAX_BEFORE_DISCOUNT


TAX_BEFORE_DISCOUNT


ORIGINAL_CUSTOM_PRICE


PRICE_INC_TAX


BASE_PRICE_INC_TAX


ROW_TOTAL_INC_TAX


BASE_ROW_TOTAL_INC_TAX


DISCOUNT_TAX_COMPENSATION_AMOUNT


BASE_DISCOUNT_TAX_COMPENSATION_AMOUNT


FREE_SHIPPING

Example

"ITEM_ID"

back to top
Types
StoreConfig
Description

Contains information about a store's configuration.
Fields
Field Name 	Description
absolute_footer - String 	Contains scripts that must be included in the HTML before the closing <body> tag.
allow_gift_receipt - String 	Indicates if the gift sender has the option to send a gift receipt. Possible values: 1 (Yes) and 0 (No).
allow_gift_wrapping_on_order - String 	Indicates whether gift wrapping can be added for the entire order. Possible values: 1 (Yes) and 0 (No).
allow_gift_wrapping_on_order_items - String 	Indicates whether gift wrapping can be added for individual order items. Possible values: 1 (Yes) and 0 (No).
allow_guests_to_write_product_reviews - String 	Indicates whether guest users can write product reviews. Possible values: 1 (Yes) and 0 (No).
allow_items - String 	The value of the Allow Gift Messages for Order Items option
allow_order - String 	The value of the Allow Gift Messages on Order Level option
allow_printed_card - String 	Indicates if a printed card can accompany an order. Possible values: 1 (Yes) and 0 (No).
autocomplete_on_storefront - Boolean 	Indicates whether to enable autocomplete on login and forgot password forms.
base_currency_code - String 	The base currency code.
base_link_url - String 	A fully-qualified URL that is used to create relative links to the base_url.
base_media_url - String 	The fully-qualified URL that specifies the location of media files.
base_static_url - String 	The fully-qualified URL that specifies the location of static view files.
base_url - String 	The store’s fully-qualified base URL.
braintree_3dsecure_allowspecific - Boolean 	Braintree 3D Secure, should 3D Secure be used for specific countries.
braintree_3dsecure_always_request_3ds - Boolean 	Braintree 3D Secure, always request 3D Secure flag.
braintree_3dsecure_specificcountry - String 	Braintree 3D Secure, the specific countries to use 3D Secure in, to be used if allow specific is status is enabled.
braintree_3dsecure_threshold_amount - String 	Braintree 3D Secure, threshold above which 3D Secure should be requested.
braintree_3dsecure_verify_3dsecure - Boolean 	Braintree 3D Secure enabled/active status.
braintree_ach_direct_debit_vault_active - Boolean 	Braintree ACH vault status.
braintree_applepay_merchant_name - String 	Braintree Apple Pay merchant name.
braintree_applepay_vault_active - Boolean 	Braintree Apple Pay vault status.
braintree_cc_vault_active - String 	Braintree cc vault status.
braintree_cc_vault_cvv - Boolean 	Braintree cc vault CVV re-verification enabled status.
braintree_environment - String 	Braintree environment.
braintree_googlepay_btn_color - String 	Braintree Google Pay button color.
braintree_googlepay_cctypes - String 	Braintree Google Pay Card types supported.
braintree_googlepay_merchant_id - String 	Braintree Google Pay merchant ID.
braintree_googlepay_vault_active - Boolean 	Braintree Google Pay vault status.
braintree_local_payment_allowed_methods - String 	Braintree Local Payment Methods allowed payment methods.
braintree_local_payment_fallback_button_text - String 	Braintree Local Payment Methods fallback button text.
braintree_local_payment_redirect_on_fail - String 	Braintree Local Payment Methods redirect URL on failed payment.
braintree_merchant_account_id - String 	Braintree Merchant Account ID.
braintree_paypal_button_location_cart_type_credit_color - String 	Braintree PayPal Credit mini-cart & cart button style color.
braintree_paypal_button_location_cart_type_credit_label - String 	Braintree PayPal Credit mini-cart & cart button style label.
braintree_paypal_button_location_cart_type_credit_shape - String 	Braintree PayPal Credit mini-cart & cart button style shape.
braintree_paypal_button_location_cart_type_credit_show - Boolean 	Braintree PayPal Credit mini-cart & cart button show status.
braintree_paypal_button_location_cart_type_messaging_layout - String 	Braintree PayPal Pay Later messaging mini-cart & cart style layout.
braintree_paypal_button_location_cart_type_messaging_logo - String 	Braintree PayPal Pay Later messaging mini-cart & cart style logo.
braintree_paypal_button_location_cart_type_messaging_logo_position - String 	Braintree PayPal Pay Later messaging mini-cart & cart style logo position.
braintree_paypal_button_location_cart_type_messaging_show - Boolean 	Braintree PayPal Pay Later messaging mini-cart & cart show status.
braintree_paypal_button_location_cart_type_messaging_text_color - String 	Braintree PayPal Pay Later messaging checkout style text color.
braintree_paypal_button_location_cart_type_paylater_color - String 	Braintree PayPal Pay Later mini-cart & cart button style color.
braintree_paypal_button_location_cart_type_paylater_label - String 	Braintree PayPal Pay Later mini-cart & cart button style label.
braintree_paypal_button_location_cart_type_paylater_shape - String 	Braintree PayPal Pay Later mini-cart & cart button style shape.
braintree_paypal_button_location_cart_type_paylater_show - Boolean 	Braintree PayPal Pay Later mini-cart & cart button show status.
braintree_paypal_button_location_cart_type_paypal_color - String 	Braintree PayPal mini-cart & cart button style color.
braintree_paypal_button_location_cart_type_paypal_label - String 	Braintree PayPal mini-cart & cart button style label.
braintree_paypal_button_location_cart_type_paypal_shape - String 	Braintree PayPal mini-cart & cart button style shape.
braintree_paypal_button_location_cart_type_paypal_show - Boolean 	Braintree PayPal mini-cart & cart button show.
braintree_paypal_button_location_checkout_type_credit_color - String 	Braintree PayPal Credit checkout button style color.
braintree_paypal_button_location_checkout_type_credit_label - String 	Braintree PayPal Credit checkout button style label.
braintree_paypal_button_location_checkout_type_credit_shape - String 	Braintree PayPal Credit checkout button style shape.
braintree_paypal_button_location_checkout_type_credit_show - Boolean 	Braintree PayPal Credit checkout button show status.
braintree_paypal_button_location_checkout_type_messaging_layout - String 	Braintree PayPal Pay Later messaging checkout style layout.
braintree_paypal_button_location_checkout_type_messaging_logo - String 	Braintree PayPal Pay Later messaging checkout style logo.
braintree_paypal_button_location_checkout_type_messaging_logo_position - String 	Braintree PayPal Pay Later messaging checkout style logo position.
braintree_paypal_button_location_checkout_type_messaging_show - Boolean 	Braintree PayPal Pay Later messaging checkout show status.
braintree_paypal_button_location_checkout_type_messaging_text_color - String 	Braintree PayPal Pay Later messaging checkout style text color.
braintree_paypal_button_location_checkout_type_paylater_color - String 	Braintree PayPal Pay Later checkout button style color.
braintree_paypal_button_location_checkout_type_paylater_label - String 	Braintree PayPal Pay Later checkout button style label.
braintree_paypal_button_location_checkout_type_paylater_shape - String 	Braintree PayPal Pay Later checkout button style shape.
braintree_paypal_button_location_checkout_type_paylater_show - Boolean 	Braintree PayPal Pay Later checkout button show status.
braintree_paypal_button_location_checkout_type_paypal_color - String 	Braintree PayPal checkout button style color.
braintree_paypal_button_location_checkout_type_paypal_label - String 	Braintree PayPal checkout button style label.
braintree_paypal_button_location_checkout_type_paypal_shape - String 	Braintree PayPal checkout button style shape.
braintree_paypal_button_location_checkout_type_paypal_show - Boolean 	Braintree PayPal checkout button show.
braintree_paypal_button_location_productpage_type_credit_color - String 	Braintree PayPal Credit PDP button style color.
braintree_paypal_button_location_productpage_type_credit_label - String 	Braintree PayPal Credit PDP button style label.
braintree_paypal_button_location_productpage_type_credit_shape - String 	Braintree PayPal Credit PDP button style shape.
braintree_paypal_button_location_productpage_type_credit_show - Boolean 	Braintree PayPal Credit PDP button show status.
braintree_paypal_button_location_productpage_type_messaging_layout - String 	Braintree PayPal Pay Later messaging PDP style layout.
braintree_paypal_button_location_productpage_type_messaging_logo - String 	Braintree PayPal Pay Later messaging PDP style logo.
braintree_paypal_button_location_productpage_type_messaging_logo_position - String 	Braintree PayPal Pay Later messaging PDP style logo position.
braintree_paypal_button_location_productpage_type_messaging_show - Boolean 	Braintree PayPal Pay Later messaging PDP show status.
braintree_paypal_button_location_productpage_type_messaging_text_color - String 	Braintree PayPal Pay Later messaging PDP style text color.
braintree_paypal_button_location_productpage_type_paylater_color - String 	Braintree PayPal Pay Later PDP button style color.
braintree_paypal_button_location_productpage_type_paylater_label - String 	Braintree PayPal Pay Later PDP button style label.
braintree_paypal_button_location_productpage_type_paylater_shape - String 	Braintree PayPal Pay Later PDP button style shape.
braintree_paypal_button_location_productpage_type_paylater_show - Boolean 	Braintree PayPal Pay Later PDP button show status.
braintree_paypal_button_location_productpage_type_paypal_color - String 	Braintree PayPal PDP button style color.
braintree_paypal_button_location_productpage_type_paypal_label - String 	Braintree PayPal PDP button style label.
braintree_paypal_button_location_productpage_type_paypal_shape - String 	Braintree PayPal PDP button style shape.
braintree_paypal_button_location_productpage_type_paypal_show - Boolean 	Braintree PayPal PDP button show.
braintree_paypal_credit_uk_merchant_name - String 	Braintree PayPal Credit Merchant Name on the FCA Register.
braintree_paypal_display_on_shopping_cart - Boolean 	Should display Braintree PayPal in mini-cart & cart?
braintree_paypal_merchant_country - String 	Braintree PayPal merchant's country.
braintree_paypal_merchant_name_override - String 	Braintree PayPal override for Merchant Name.
braintree_paypal_require_billing_address - Boolean 	Does Braintree PayPal require the customer's billing address?
braintree_paypal_send_cart_line_items - Boolean 	Does Braintree PayPal require the order line items?
braintree_paypal_vault_active - Boolean 	Braintree PayPal vault status.
cart_expires_in_days - Int 	checkout/cart/delete_quote_after: quote lifetime in days.
cart_gift_wrapping - String 	Indicates if gift wrapping prices are displayed on the Shopping Cart page. Possible values: 1 (Yes) and 0 (No).
cart_printed_card - String 	Indicates if printed card prices are displayed on the Shopping Cart page. Possible values: 1 (Yes) and 0 (No).
cart_summary_display_quantity - Int 	checkout/cart_link/use_qty: what to show in the display cart summary, number of items or item quantities.
catalog_default_sort_by - String 	The default sort order of the search results list.
category_fixed_product_tax_display_setting - FixedProductTaxDisplaySettings 	Corresponds to the 'Display Prices In Product Lists' field in the Admin. It indicates how FPT information is displayed on category pages.
category_url_suffix - String 	The suffix applied to category pages, such as .htm or .html.
check_money_order_enable_for_specific_countries - Boolean 	Indicates whether only specific countries can use this payment method.
check_money_order_enabled - Boolean 	Indicates whether the Check/Money Order payment method is enabled.
check_money_order_make_check_payable_to - String 	The name of the party to whom the check must be payable.
check_money_order_max_order_total - String 	The maximum order amount required to qualify for the Check/Money Order payment method.
check_money_order_min_order_total - String 	The minimum order amount required to qualify for the Check/Money Order payment method.
check_money_order_new_order_status - String 	The status of new orders placed using the Check/Money Order payment method.
check_money_order_payment_from_specific_countries - String 	A comma-separated list of specific countries allowed to use the Check/Money Order payment method.
check_money_order_send_check_to - String 	The full street address or PO Box where the checks are mailed.
check_money_order_sort_order - Int 	A number indicating the position of the Check/Money Order payment method in the list of available payment methods during checkout.
check_money_order_title - String 	The title of the Check/Money Order payment method displayed on the storefront.
cms_home_page - String 	The name of the CMS page that identifies the home page for the store.
cms_no_cookies - String 	A specific CMS page that displays when cookies are not enabled for the browser.
cms_no_route - String 	A specific CMS page that displays when a 404 'Page Not Found' error occurs.
code - String 	A code assigned to the store to identify it. Use store_code instead. Deprecated
configurable_product_image - ProductImageThumbnail! 	checkout/cart/configurable_product_image: which image to use for configurable products.
configurable_thumbnail_source - String 	Indicates whether the parent or child (itself) thumbnail should be used in the cart for configurable products.
contact_enabled - Boolean! 	Indicates whether the Contact Us form in enabled.
copyright - String 	The copyright statement that appears at the bottom of each page.
countries_with_required_region - String 	Extended Config Data - general/region/state_required
create_account_confirmation - Boolean 	Indicates if the new accounts need confirmation.
customer_access_token_lifetime - Float 	Customer access token lifetime.
default_country - String 	Extended Config Data - general/country/default
default_description - String 	The description that provides a summary of your site for search engine listings. It should not be more than 160 characters in length.
default_display_currency_code - String 	The default display currency code.
default_keywords - String 	A series of keywords that describe your store, each separated by a comma.
default_title - String 	The title that appears at the title bar of each page when viewed in a browser.
demonotice - Int 	Controls the display of the demo store notice at the top of the page. Options: 0 (No) or 1 (Yes).
display_product_prices_in_catalog - Int! 	Configuration data from tax/display/type
display_shipping_prices - Int! 	Configuration data from tax/display/shipping
display_state_if_optional - Boolean 	Extended Config Data - general/region/display_all
enable_multiple_wishlists - String 	Indicates whether customers can have multiple wish lists. Possible values: 1 (Yes) and 0 (No).
fixed_product_taxes_apply_tax_to_fpt - Boolean! 	Configuration data from tax/weee/apply_vat
fixed_product_taxes_display_prices_in_emails - Int! 	Configuration data from tax/weee/display_email
fixed_product_taxes_display_prices_in_product_lists - Int! 	Configuration data from tax/weee/display_list
fixed_product_taxes_display_prices_in_sales_modules - Int! 	Configuration data from tax/weee/display_sales
fixed_product_taxes_display_prices_on_product_view_page - Int! 	Configuration data from tax/weee/display
fixed_product_taxes_enable - Boolean! 	Configuration data from tax/weee/enable
fixed_product_taxes_include_fpt_in_subtotal - Boolean! 	Configuration data from tax/weee/include_in_subtotal
front - String 	The landing page that is associated with the base URL.
graphql_share_all_customer_groups - Boolean! 	Configuration data from customer/account_information/graphql_share_all_customer_groups
graphql_share_customer_group - Boolean! 	Configuration data from customer/account_information/graphql_share_customer_group
grid_per_page - Int 	The default number of products per page in Grid View.
grid_per_page_values - String 	A list of numbers that define how many products can be displayed in Grid View.
grouped_product_image - ProductImageThumbnail! 	checkout/cart/grouped_product_image: which image to use for grouped products.
head_includes - String 	Scripts that must be included in the HTML before the closing <head> tag.
head_shortcut_icon - String 	The small graphic image (favicon) that appears in the address bar and tab of the browser.
header_logo_src - String 	The path to the logo that appears in the header.
id - Int 	The ID number assigned to the store. Use store_code instead. Deprecated
is_checkout_agreements_enabled - Boolean! 	Configuration data from checkout/options/enable_agreements
is_default_store - Boolean 	Indicates whether the store view has been designated as the default within the store group.
is_default_store_group - Boolean 	Indicates whether the store group has been designated as the default within the website.
is_guest_checkout_enabled - Boolean 	checkout/options/guest_checkout: whether the guest checkout is enabled or not.
is_negotiable_quote_active - Boolean 	Indicates whether negotiable quote functionality is enabled.
is_one_page_checkout_enabled - Boolean 	checkout/options/onepage_checkout_enabled: whether the one page checkout is enabled or not
is_requisition_list_active - String 	Indicates whether requisition lists are enabled. Possible values: 1 (Yes) and 0 (No).
list_mode - String 	The format of the search results list.
list_per_page - Int 	The default number of products per page in List View.
list_per_page_values - String 	A list of numbers that define how many products can be displayed in List View.
locale - String 	The store locale.
logo_alt - String 	The Alt text that is associated with the logo.
logo_height - Int 	The height of the logo image, in pixels.
logo_width - Int 	The width of the logo image, in pixels.
magento_reward_general_is_enabled - String 	Indicates whether reward points functionality is enabled. Possible values: 1 (Enabled) and 0 (Disabled).
magento_reward_general_is_enabled_on_front - String 	Indicates whether reward points functionality is enabled on the storefront. Possible values: 1 (Enabled) and 0 (Disabled).
magento_reward_general_min_points_balance - String 	The minimum point balance customers must have before they can redeem them. A null value indicates no minimum.
magento_reward_general_publish_history - String 	When enabled, customers can see a detailed history of their reward points. Possible values: 1 (Enabled) and 0 (Disabled).
magento_reward_points_invitation_customer - String 	The number of points for a referral when an invitee registers on the site.
magento_reward_points_invitation_customer_limit - String 	The maximum number of registration referrals that will qualify for rewards. A null value indicates no limit.
magento_reward_points_invitation_order - String 	The number of points for a referral, when an invitee places their first order on the site.
magento_reward_points_invitation_order_limit - String 	The number of order conversions that can earn points for the customer who sends the invitation. A null value indicates no limit.
magento_reward_points_newsletter - String 	The number of points earned by registered customers who subscribe to a newsletter.
magento_reward_points_order - String 	Indicates customers earn points for shopping according to the reward point exchange rate. In Luma, this also controls whether to show a message in the shopping cart about the rewards points earned for the purchase, as well as the customer’s current reward point balance.
magento_reward_points_register - String 	The number of points customer gets for registering.
magento_reward_points_review - String 	The number of points for writing a review.
magento_reward_points_review_limit - String 	The maximum number of reviews that will qualify for the rewards. A null value indicates no limit.
magento_wishlist_general_is_enabled - String 	Indicates whether wishlists are enabled (1) or disabled (0).
max_items_in_order_summary - Int 	checkout/options/max_items_display_count: maximum number of items to display in order summary.
maximum_number_of_wishlists - String 	If multiple wish lists are enabled, the maximum number of wish lists the customer can have.
minicart_display - Boolean 	checkout/sidebar/display: whether to display the minicart or not.
minicart_max_items - Int 	checkout/sidebar/count: maximum number of items to show in minicart.
minimum_password_length - String 	The minimum number of characters required for a valid password.
newsletter_enabled - Boolean! 	Indicates whether newsletters are enabled.
no_route - String 	The default page that displays when a 404 'Page not Found' error occurs.
optional_zip_countries - String 	Extended Config Data - general/country/optional_zip_countries
order_cancellation_enabled - Boolean! 	Indicates whether orders can be cancelled by customers or not.
order_cancellation_reasons - [CancellationReason]! 	An array containing available cancellation reasons.
orders_invoices_credit_memos_display_full_summary - Boolean! 	Configuration data from tax/sales_display/full_summary
orders_invoices_credit_memos_display_grandtotal - Boolean! 	Configuration data from tax/sales_display/grandtotal
orders_invoices_credit_memos_display_price - Int! 	Configuration data from tax/sales_display/price
orders_invoices_credit_memos_display_shipping_amount - Int! 	Configuration data from tax/sales_display/shipping
orders_invoices_credit_memos_display_subtotal - Int! 	Configuration data from tax/sales_display/subtotal
orders_invoices_credit_memos_display_zero_tax - Boolean! 	Configuration data from tax/sales_display/zero_tax
payment_payflowpro_cc_vault_active - String 	Payflow Pro vault status.
printed_card_price - String 	The default price of a printed card that accompanies an order. Use printed_card_priceV2 instead Deprecated
printed_card_priceV2 - Money 	The default price of a printed card that accompanies an order.
product_fixed_product_tax_display_setting - FixedProductTaxDisplaySettings 	Corresponds to the 'Display Prices On Product View Page' field in the Admin. It indicates how FPT information is displayed on product pages.
product_reviews_enabled - String 	Indicates whether product reviews are enabled. Possible values: 1 (Yes) and 0 (No).
product_url_suffix - String 	The suffix applied to product pages, such as .htm or .html.
quickorder_active - Boolean! 	Indicates whether quick order functionality is enabled.
required_character_classes_number - String 	The number of different character classes (lowercase, uppercase, digits, special characters) required in a password.
returns_enabled - String! 	Indicates whether RMA is enabled on the storefront. Possible values: enabled/disabled.
root_category_id - Int 	The ID of the root category. Use root_category_uid instead. Deprecated
root_category_uid - ID 	The unique ID for a CategoryInterface object.
sales_fixed_product_tax_display_setting - FixedProductTaxDisplaySettings 	Corresponds to the 'Display Prices In Sales Modules' field in the Admin. It indicates how FPT information is displayed on cart, checkout, and order pages.
sales_gift_wrapping - String 	Indicates if gift wrapping prices are displayed on the Orders page. Possible values: 1 (Yes) and 0 (No).
sales_printed_card - String 	Indicates if printed card prices are displayed on the Orders page. Possible values: 1 (Yes) and 0 (No).
secure_base_link_url - String 	A secure fully-qualified URL that is used to create relative links to the base_url.
secure_base_media_url - String 	The secure fully-qualified URL that specifies the location of media files.
secure_base_static_url - String 	The secure fully-qualified URL that specifies the location of static view files.
secure_base_url - String 	The store’s fully-qualified secure base URL.
send_friend - SendFriendConfiguration 	Email to a Friend configuration.
share_all_catalog_rules - Boolean! 	Configuration data from catalog/rule/share_all_catalog_rules
share_all_sales_rule - Boolean! 	Configuration data from promo/graphql/share_all_sales_rule
share_applied_catalog_rules - Boolean! 	Configuration data from catalog/rule/share_applied_catalog_rules
share_applied_sales_rule - Boolean! 	Configuration data from promo/graphql/share_applied_sales_rule
shopping_cart_display_full_summary - Boolean 	Extended Config Data - tax/cart_display/full_summary
shopping_cart_display_grand_total - Boolean 	Extended Config Data - tax/cart_display/grandtotal
shopping_cart_display_price - Int 	Extended Config Data - tax/cart_display/price
shopping_cart_display_shipping - Int 	Extended Config Data - tax/cart_display/shipping
shopping_cart_display_subtotal - Int 	Extended Config Data - tax/cart_display/subtotal
shopping_cart_display_tax_gift_wrapping - TaxWrappingEnum 	Extended Config Data - tax/cart_display/gift_wrapping
shopping_cart_display_zero_tax - Boolean 	Extended Config Data - tax/cart_display/zero_tax
show_cms_breadcrumbs - Int 	Indicates whether a breadcrumb trail appears on all CMS pages in the catalog. 0 (No) or 1 (Yes).
store_code - ID 	The unique ID of the store view. In the Admin, this is called the Store View Code. When making a GraphQL call, assign this value to the Store header to provide the scope.
store_group_code - ID 	The unique ID assigned to the store group. In the Admin, this is called the Store Name.
store_group_name - String 	The label assigned to the store group.
store_name - String 	The label assigned to the store view.
store_sort_order - Int 	The store view sort order.
timezone - String 	The time zone of the store.
title_prefix - String 	A prefix that appears before the title to create a two- or three-part title.
title_separator - String 	The character that separates the category name and subcategory in the browser title bar.
title_suffix - String 	A suffix that appears after the title to create a two- or three-part title.
use_store_in_url - Boolean 	Indicates whether the store code should be used in the URL.
website_code - ID 	The unique ID for the website.
website_id - Int 	The ID number assigned to the website store. The field should not be used on the storefront. Deprecated
website_name - String 	The label assigned to the website.
weight_unit - String 	The unit of weight.
welcome - String 	Text that appears in the header of the page and includes the name of the logged in customer.
zero_subtotal_enable_for_specific_countries - Boolean 	Indicates whether only specific countries can use this payment method.
zero_subtotal_enabled - Boolean 	Indicates whether the Zero Subtotal payment method is enabled.
zero_subtotal_new_order_status - String 	The status of new orders placed using the Zero Subtotal payment method.
zero_subtotal_payment_action - String 	When the new order status is 'Processing', this can be set to authorize_capture to automatically invoice all items that have a zero balance.
zero_subtotal_payment_from_specific_countries - String 	A comma-separated list of specific countries allowed to use the Zero Subtotal payment method.
zero_subtotal_sort_order - Int 	A number indicating the position of the Zero Subtotal payment method in the list of available payment methods during checkout.
zero_subtotal_title - String 	The title of the Zero Subtotal payment method displayed on the storefront.
Example

{
  "absolute_footer": "abc123",
  "allow_gift_receipt": "abc123",
  "allow_gift_wrapping_on_order": "abc123",
  "allow_gift_wrapping_on_order_items": "abc123",
  "allow_guests_to_write_product_reviews": "abc123",
  "allow_items": "xyz789",
  "allow_order": "xyz789",
  "allow_printed_card": "abc123",
  "autocomplete_on_storefront": true,
  "base_currency_code": "abc123",
  "base_link_url": "abc123",
  "base_media_url": "xyz789",
  "base_static_url": "xyz789",
  "base_url": "xyz789",
  "braintree_3dsecure_allowspecific": false,
  "braintree_3dsecure_always_request_3ds": false,
  "braintree_3dsecure_specificcountry": "abc123",
  "braintree_3dsecure_threshold_amount": "xyz789",
  "braintree_3dsecure_verify_3dsecure": true,
  "braintree_ach_direct_debit_vault_active": true,
  "braintree_applepay_merchant_name": "xyz789",
  "braintree_applepay_vault_active": true,
  "braintree_cc_vault_active": "xyz789",
  "braintree_cc_vault_cvv": true,
  "braintree_environment": "xyz789",
  "braintree_googlepay_btn_color": "xyz789",
  "braintree_googlepay_cctypes": "xyz789",
  "braintree_googlepay_merchant_id": "xyz789",
  "braintree_googlepay_vault_active": false,
  "braintree_local_payment_allowed_methods": "abc123",
  "braintree_local_payment_fallback_button_text": "abc123",
  "braintree_local_payment_redirect_on_fail": "xyz789",
  "braintree_merchant_account_id": "abc123",
  "braintree_paypal_button_location_cart_type_credit_color": "abc123",
  "braintree_paypal_button_location_cart_type_credit_label": "xyz789",
  "braintree_paypal_button_location_cart_type_credit_shape": "abc123",
  "braintree_paypal_button_location_cart_type_credit_show": false,
  "braintree_paypal_button_location_cart_type_messaging_layout": "abc123",
  "braintree_paypal_button_location_cart_type_messaging_logo": "abc123",
  "braintree_paypal_button_location_cart_type_messaging_logo_position": "xyz789",
  "braintree_paypal_button_location_cart_type_messaging_show": true,
  "braintree_paypal_button_location_cart_type_messaging_text_color": "xyz789",
  "braintree_paypal_button_location_cart_type_paylater_color": "abc123",
  "braintree_paypal_button_location_cart_type_paylater_label": "abc123",
  "braintree_paypal_button_location_cart_type_paylater_shape": "xyz789",
  "braintree_paypal_button_location_cart_type_paylater_show": false,
  "braintree_paypal_button_location_cart_type_paypal_color": "xyz789",
  "braintree_paypal_button_location_cart_type_paypal_label": "xyz789",
  "braintree_paypal_button_location_cart_type_paypal_shape": "abc123",
  "braintree_paypal_button_location_cart_type_paypal_show": false,
  "braintree_paypal_button_location_checkout_type_credit_color": "xyz789",
  "braintree_paypal_button_location_checkout_type_credit_label": "abc123",
  "braintree_paypal_button_location_checkout_type_credit_shape": "xyz789",
  "braintree_paypal_button_location_checkout_type_credit_show": false,
  "braintree_paypal_button_location_checkout_type_messaging_layout": "xyz789",
  "braintree_paypal_button_location_checkout_type_messaging_logo": "abc123",
  "braintree_paypal_button_location_checkout_type_messaging_logo_position": "xyz789",
  "braintree_paypal_button_location_checkout_type_messaging_show": true,
  "braintree_paypal_button_location_checkout_type_messaging_text_color": "xyz789",
  "braintree_paypal_button_location_checkout_type_paylater_color": "abc123",
  "braintree_paypal_button_location_checkout_type_paylater_label": "xyz789",
  "braintree_paypal_button_location_checkout_type_paylater_shape": "abc123",
  "braintree_paypal_button_location_checkout_type_paylater_show": true,
  "braintree_paypal_button_location_checkout_type_paypal_color": "abc123",
  "braintree_paypal_button_location_checkout_type_paypal_label": "xyz789",
  "braintree_paypal_button_location_checkout_type_paypal_shape": "xyz789",
  "braintree_paypal_button_location_checkout_type_paypal_show": true,
  "braintree_paypal_button_location_productpage_type_credit_color": "xyz789",
  "braintree_paypal_button_location_productpage_type_credit_label": "xyz789",
  "braintree_paypal_button_location_productpage_type_credit_shape": "abc123",
  "braintree_paypal_button_location_productpage_type_credit_show": false,
  "braintree_paypal_button_location_productpage_type_messaging_layout": "xyz789",
  "braintree_paypal_button_location_productpage_type_messaging_logo": "abc123",
  "braintree_paypal_button_location_productpage_type_messaging_logo_position": "xyz789",
  "braintree_paypal_button_location_productpage_type_messaging_show": false,
  "braintree_paypal_button_location_productpage_type_messaging_text_color": "abc123",
  "braintree_paypal_button_location_productpage_type_paylater_color": "abc123",
  "braintree_paypal_button_location_productpage_type_paylater_label": "abc123",
  "braintree_paypal_button_location_productpage_type_paylater_shape": "abc123",
  "braintree_paypal_button_location_productpage_type_paylater_show": true,
  "braintree_paypal_button_location_productpage_type_paypal_color": "xyz789",
  "braintree_paypal_button_location_productpage_type_paypal_label": "xyz789",
  "braintree_paypal_button_location_productpage_type_paypal_shape": "abc123",
  "braintree_paypal_button_location_productpage_type_paypal_show": true,
  "braintree_paypal_credit_uk_merchant_name": "xyz789",
  "braintree_paypal_display_on_shopping_cart": false,
  "braintree_paypal_merchant_country": "abc123",
  "braintree_paypal_merchant_name_override": "abc123",
  "braintree_paypal_require_billing_address": true,
  "braintree_paypal_send_cart_line_items": true,
  "braintree_paypal_vault_active": false,
  "cart_expires_in_days": 987,
  "cart_gift_wrapping": "xyz789",
  "cart_printed_card": "xyz789",
  "cart_summary_display_quantity": 123,
  "catalog_default_sort_by": "abc123",
  "category_fixed_product_tax_display_setting": "INCLUDE_FPT_WITHOUT_DETAILS",
  "category_url_suffix": "xyz789",
  "check_money_order_enable_for_specific_countries": false,
  "check_money_order_enabled": true,
  "check_money_order_make_check_payable_to": "abc123",
  "check_money_order_max_order_total": "abc123",
  "check_money_order_min_order_total": "abc123",
  "check_money_order_new_order_status": "abc123",
  "check_money_order_payment_from_specific_countries": "xyz789",
  "check_money_order_send_check_to": "xyz789",
  "check_money_order_sort_order": 123,
  "check_money_order_title": "xyz789",
  "cms_home_page": "xyz789",
  "cms_no_cookies": "xyz789",
  "cms_no_route": "xyz789",
  "code": "xyz789",
  "configurable_product_image": "ITSELF",
  "configurable_thumbnail_source": "xyz789",
  "contact_enabled": true,
  "copyright": "abc123",
  "countries_with_required_region": "xyz789",
  "create_account_confirmation": false,
  "customer_access_token_lifetime": 987.65,
  "default_country": "abc123",
  "default_description": "xyz789",
  "default_display_currency_code": "abc123",
  "default_keywords": "xyz789",
  "default_title": "abc123",
  "demonotice": 123,
  "display_product_prices_in_catalog": 987,
  "display_shipping_prices": 987,
  "display_state_if_optional": true,
  "enable_multiple_wishlists": "xyz789",
  "fixed_product_taxes_apply_tax_to_fpt": true,
  "fixed_product_taxes_display_prices_in_emails": 987,
  "fixed_product_taxes_display_prices_in_product_lists": 123,
  "fixed_product_taxes_display_prices_in_sales_modules": 987,
  "fixed_product_taxes_display_prices_on_product_view_page": 123,
  "fixed_product_taxes_enable": true,
  "fixed_product_taxes_include_fpt_in_subtotal": true,
  "front": "xyz789",
  "graphql_share_all_customer_groups": true,
  "graphql_share_customer_group": true,
  "grid_per_page": 123,
  "grid_per_page_values": "xyz789",
  "grouped_product_image": "ITSELF",
  "head_includes": "abc123",
  "head_shortcut_icon": "xyz789",
  "header_logo_src": "xyz789",
  "id": 987,
  "is_checkout_agreements_enabled": true,
  "is_default_store": false,
  "is_default_store_group": true,
  "is_guest_checkout_enabled": true,
  "is_negotiable_quote_active": false,
  "is_one_page_checkout_enabled": true,
  "is_requisition_list_active": "abc123",
  "list_mode": "abc123",
  "list_per_page": 987,
  "list_per_page_values": "abc123",
  "locale": "abc123",
  "logo_alt": "xyz789",
  "logo_height": 123,
  "logo_width": 123,
  "magento_reward_general_is_enabled": "abc123",
  "magento_reward_general_is_enabled_on_front": "xyz789",
  "magento_reward_general_min_points_balance": "xyz789",
  "magento_reward_general_publish_history": "xyz789",
  "magento_reward_points_invitation_customer": "abc123",
  "magento_reward_points_invitation_customer_limit": "xyz789",
  "magento_reward_points_invitation_order": "abc123",
  "magento_reward_points_invitation_order_limit": "xyz789",
  "magento_reward_points_newsletter": "xyz789",
  "magento_reward_points_order": "xyz789",
  "magento_reward_points_register": "xyz789",
  "magento_reward_points_review": "xyz789",
  "magento_reward_points_review_limit": "xyz789",
  "magento_wishlist_general_is_enabled": "xyz789",
  "max_items_in_order_summary": 123,
  "maximum_number_of_wishlists": "xyz789",
  "minicart_display": false,
  "minicart_max_items": 987,
  "minimum_password_length": "xyz789",
  "newsletter_enabled": true,
  "no_route": "abc123",
  "optional_zip_countries": "abc123",
  "order_cancellation_enabled": true,
  "order_cancellation_reasons": [CancellationReason],
  "orders_invoices_credit_memos_display_full_summary": true,
  "orders_invoices_credit_memos_display_grandtotal": true,
  "orders_invoices_credit_memos_display_price": 123,
  "orders_invoices_credit_memos_display_shipping_amount": 123,
  "orders_invoices_credit_memos_display_subtotal": 987,
  "orders_invoices_credit_memos_display_zero_tax": true,
  "payment_payflowpro_cc_vault_active": "abc123",
  "printed_card_price": "abc123",
  "printed_card_priceV2": Money,
  "product_fixed_product_tax_display_setting": "INCLUDE_FPT_WITHOUT_DETAILS",
  "product_reviews_enabled": "xyz789",
  "product_url_suffix": "abc123",
  "quickorder_active": false,
  "required_character_classes_number": "abc123",
  "returns_enabled": "xyz789",
  "root_category_id": 123,
  "root_category_uid": 4,
  "sales_fixed_product_tax_display_setting": "INCLUDE_FPT_WITHOUT_DETAILS",
  "sales_gift_wrapping": "abc123",
  "sales_printed_card": "xyz789",
  "secure_base_link_url": "xyz789",
  "secure_base_media_url": "xyz789",
  "secure_base_static_url": "xyz789",
  "secure_base_url": "abc123",
  "send_friend": SendFriendConfiguration,
  "share_all_catalog_rules": true,
  "share_all_sales_rule": false,
  "share_applied_catalog_rules": true,
  "share_applied_sales_rule": false,
  "shopping_cart_display_full_summary": true,
  "shopping_cart_display_grand_total": false,
  "shopping_cart_display_price": 123,
  "shopping_cart_display_shipping": 987,
  "shopping_cart_display_subtotal": 987,
  "shopping_cart_display_tax_gift_wrapping": "DISPLAY_EXCLUDING_TAX",
  "shopping_cart_display_zero_tax": false,
  "show_cms_breadcrumbs": 123,
  "store_code": 4,
  "store_group_code": "4",
  "store_group_name": "abc123",
  "store_name": "abc123",
  "store_sort_order": 123,
  "timezone": "xyz789",
  "title_prefix": "xyz789",
  "title_separator": "abc123",
  "title_suffix": "xyz789",
  "use_store_in_url": true,
  "website_code": "4",
  "website_id": 123,
  "website_name": "xyz789",
  "weight_unit": "xyz789",
  "welcome": "abc123",
  "zero_subtotal_enable_for_specific_countries": true,
  "zero_subtotal_enabled": false,
  "zero_subtotal_new_order_status": "abc123",
  "zero_subtotal_payment_action": "abc123",
  "zero_subtotal_payment_from_specific_countries": "abc123",
  "zero_subtotal_sort_order": 123,
  "zero_subtotal_title": "xyz789"
}

back to top
Types
StorefrontProperties
Description

Indicates where an attribute can be displayed.
Fields
Field Name 	Description
position - Int 	The relative position of the attribute in the layered navigation block.
use_in_layered_navigation - UseInLayeredNavigationOptions 	Indicates whether the attribute is filterable with results, without results, or not at all.
use_in_product_listing - Boolean 	Indicates whether the attribute is displayed in product listings.
use_in_search_results_layered_navigation - Boolean 	Indicates whether the attribute can be used in layered navigation on search results pages.
visible_on_catalog_pages - Boolean 	Indicates whether the attribute is displayed on product pages.
Example

{
  "position": 123,
  "use_in_layered_navigation": "NO",
  "use_in_product_listing": true,
  "use_in_search_results_layered_navigation": true,
  "visible_on_catalog_pages": true
}

back to top
Types
String
Description

The String scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text.
Example

"abc123"

back to top
Types
SubmitNegotiableQuoteTemplateForReviewInput
Description

Specifies the quote template properties to update.
Fields
Input Field 	Description
comment - String 	A comment for the seller to review.
max_order_commitment - Int 	Commitment for maximum orders
min_order_commitment - Int 	Commitment for minimum orders
name - String 	The title assigned to the negotiable quote template.
reference_document_links - [NegotiableQuoteTemplateReferenceDocumentLinkInput] 	An array of reference document links to add to the negotiable quote template.
template_id - ID! 	The unique ID of a NegotiableQuoteTemplate object.
Example

{
  "comment": "abc123",
  "max_order_commitment": 123,
  "min_order_commitment": 123,
  "name": "xyz789",
  "reference_document_links": [
    NegotiableQuoteTemplateReferenceDocumentLinkInput
  ],
  "template_id": 4
}

back to top
Types
SubscribeEmailToNewsletterOutput
Description

Contains the result of the subscribeEmailToNewsletter operation.
Fields
Field Name 	Description
status - SubscriptionStatusesEnum 	The status of the subscription request.
Example

{"status": "NOT_ACTIVE"}

back to top
Types
SubscriptionStatusesEnum
Description

Indicates the status of the request.
Values
Enum Value 	Description

NOT_ACTIVE


SUBSCRIBED


UNSUBSCRIBED


UNCONFIRMED

Example

"NOT_ACTIVE"

back to top
Types
SwatchData
Description

Describes the swatch type and a value.
Fields
Field Name 	Description
type - String 	The type of swatch filter item: 1 - text; 2 - image.
value - String 	The value for the swatch item. It could be text or an image link.
Example

{
  "type": "abc123",
  "value": "xyz789"
}

back to top
Types
SwatchDataInterface
Fields
Field Name 	Description
value - String 	The value can be represented as color (HEX code), image link, or text.
Possible Types
SwatchDataInterface Types

ImageSwatchData

TextSwatchData

ColorSwatchData
Example

{"value": "xyz789"}

back to top
Types
SwatchInputTypeEnum
Description

Swatch attribute metadata input types.
Values
Enum Value 	Description

BOOLEAN


DATE


DATETIME


DROPDOWN


FILE


GALLERY


HIDDEN


IMAGE


MEDIA_IMAGE


MULTILINE


MULTISELECT


PRICE


SELECT


TEXT


TEXTAREA


UNDEFINED


VISUAL


WEIGHT

Example

"BOOLEAN"

back to top
Types
SwatchLayerFilterItem
Fields
Field Name 	Description
items_count - Int 	The count of items per filter. Use AggregationOption.count instead. Deprecated
label - String 	The label for a filter. Use AggregationOption.label instead. Deprecated
swatch_data - SwatchData 	Data required to render a swatch filter item.
value_string - String 	The value of a filter request variable to be used in query. Use AggregationOption.value instead. Deprecated
Example

{
  "items_count": 987,
  "label": "abc123",
  "swatch_data": SwatchData,
  "value_string": "xyz789"
}

back to top
Types
SwatchLayerFilterItemInterface
Fields
Field Name 	Description
swatch_data - SwatchData 	Data required to render a swatch filter item.
Possible Types
SwatchLayerFilterItemInterface Types

SwatchLayerFilterItem
Example

{"swatch_data": SwatchData}

back to top
Types
SyncPaymentOrderInput
Description

Synchronizes the payment order details
Fields
Input Field 	Description
cartId - String! 	The customer cart ID
id - String! 	PayPal order ID
Example

{
  "cartId": "abc123",
  "id": "xyz789"
}

back to top
Types
TaxItem
Description

Contains tax item details.
Fields
Field Name 	Description
amount - Money! 	The amount of tax applied to the item.
rate - Float! 	The rate used to calculate the tax.
title - String! 	A title that describes the tax.
Example

{
  "amount": Money,
  "rate": 987.65,
  "title": "xyz789"
}

back to top
Types
TaxWrappingEnum
Values
Enum Value 	Description

DISPLAY_EXCLUDING_TAX


DISPLAY_INCLUDING_TAX


DISPLAY_TYPE_BOTH

Example

"DISPLAY_EXCLUDING_TAX"

back to top
Types
TextSwatchData
Fields
Field Name 	Description
value - String 	The value can be represented as color (HEX code), image link, or text.
Example

{"value": "xyz789"}

back to top
Types
ThreeDSMode
Description

3D Secure mode.
Values
Enum Value 	Description

OFF


SCA_WHEN_REQUIRED


SCA_ALWAYS

Example

"OFF"

back to top
Types
TierPrice
Description

Defines a price based on the quantity purchased.
Fields
Field Name 	Description
discount - ProductDiscount 	The price discount that this tier represents.
final_price - Money 	The price of the product at this tier.
quantity - Float 	The minimum number of items that must be purchased to qualify for this price tier.
Example

{
  "discount": ProductDiscount,
  "final_price": Money,
  "quantity": 987.65
}

back to top
Types
UpdateCartItemsInput
Description

Modifies the specified items in the cart.
Fields
Input Field 	Description
cart_id - String! 	The unique ID of a Cart object.
cart_items - [CartItemUpdateInput]! 	An array of items to be updated.
Example

{
  "cart_id": "abc123",
  "cart_items": [CartItemUpdateInput]
}

back to top
Types
UpdateCartItemsOutput
Description

Contains details about the cart after updating items.
Fields
Field Name 	Description
cart - Cart! 	The cart after updating products.
errors - [CartUserInputError]! 	Contains errors encountered while updating an item to the cart.
Example

{
  "cart": Cart,
  "errors": [CartUserInputError]
}

back to top
Types
UpdateCompanyOutput
Description

Contains the response to the request to update the company.
Fields
Field Name 	Description
company - Company! 	The updated company instance.
Example

{"company": Company}

back to top
Types
UpdateCompanyRoleOutput
Description

Contains the response to the request to update the company role.
Fields
Field Name 	Description
role - CompanyRole! 	The updated company role instance.
Example

{"role": CompanyRole}

back to top
Types
UpdateCompanyStructureOutput
Description

Contains the response to the request to update the company structure.
Fields
Field Name 	Description
company - Company! 	The updated company instance.
Example

{"company": Company}

back to top
Types
UpdateCompanyTeamOutput
Description

Contains the response to the request to update a company team.
Fields
Field Name 	Description
team - CompanyTeam! 	The updated company team instance.
Example

{"team": CompanyTeam}

back to top
Types
UpdateCompanyUserOutput
Description

Contains the response to the request to update the company user.
Fields
Field Name 	Description
user - Customer! 	The updated company user instance.
Example

{"user": Customer}

back to top
Types
UpdateGiftRegistryInput
Description

Defines updates to a GiftRegistry object.
Fields
Input Field 	Description
dynamic_attributes - [GiftRegistryDynamicAttributeInput] 	Additional attributes specified as a code-value pair. Unspecified dynamic attributes are not changed.
event_name - String 	The updated name of the event.
message - String 	The updated message describing the event.
privacy_settings - GiftRegistryPrivacySettings 	Indicates whether the gift registry is PRIVATE or PUBLIC.
shipping_address - GiftRegistryShippingAddressInput 	The updated shipping address for all gift registry items.
status - GiftRegistryStatus 	Indicates whether the gift registry is ACTIVE or INACTIVE.
Example

{
  "dynamic_attributes": [
    GiftRegistryDynamicAttributeInput
  ],
  "event_name": "xyz789",
  "message": "abc123",
  "privacy_settings": "PRIVATE",
  "shipping_address": GiftRegistryShippingAddressInput,
  "status": "ACTIVE"
}

back to top
Types
UpdateGiftRegistryItemInput
Description

Defines updates to an item in a gift registry.
Fields
Input Field 	Description
gift_registry_item_uid - ID! 	The unique ID of a giftRegistryItem object.
note - String 	The updated description of the item.
quantity - Float! 	The updated quantity of the gift registry item.
Example

{
  "gift_registry_item_uid": "4",
  "note": "abc123",
  "quantity": 123.45
}

back to top
Types
UpdateGiftRegistryItemsOutput
Description

Contains the results of a request to update gift registry items.
Fields
Field Name 	Description
gift_registry - GiftRegistry 	The gift registry after updating updating items.
Example

{"gift_registry": GiftRegistry}

back to top
Types
UpdateGiftRegistryOutput
Description

Contains the results of a request to update a gift registry.
Fields
Field Name 	Description
gift_registry - GiftRegistry 	The updated gift registry.
Example

{"gift_registry": GiftRegistry}

back to top
Types
UpdateGiftRegistryRegistrantInput
Description

Defines updates to an existing registrant.
Fields
Input Field 	Description
dynamic_attributes - [GiftRegistryDynamicAttributeInput] 	As a result of the update, only the values of provided attributes will be affected. If the attribute is missing in the request, its value will not be changed.
email - String 	The updated email address of the registrant.
firstname - String 	The updated first name of the registrant.
gift_registry_registrant_uid - ID! 	The unique ID of a giftRegistryRegistrant object.
lastname - String 	The updated last name of the registrant.
Example

{
  "dynamic_attributes": [
    GiftRegistryDynamicAttributeInput
  ],
  "email": "xyz789",
  "firstname": "xyz789",
  "gift_registry_registrant_uid": "4",
  "lastname": "xyz789"
}

back to top
Types
UpdateGiftRegistryRegistrantsOutput
Description

Contains the results a request to update registrants.
Fields
Field Name 	Description
gift_registry - GiftRegistry 	The gift registry after updating registrants.
Example

{"gift_registry": GiftRegistry}

back to top
Types
UpdateNegotiableQuoteItemsQuantityOutput
Description

Contains the updated negotiable quote.
Fields
Field Name 	Description
quote - NegotiableQuote 	The updated negotiable quote.
Example

{"quote": NegotiableQuote}

back to top
Types
UpdateNegotiableQuoteQuantitiesInput
Description

Specifies the items to update.
Fields
Input Field 	Description
items - [NegotiableQuoteItemQuantityInput]! 	An array of items to update.
quote_uid - ID! 	The unique ID of a NegotiableQuote object.
Example

{
  "items": [NegotiableQuoteItemQuantityInput],
  "quote_uid": "4"
}

back to top
Types
UpdateNegotiableQuoteTemplateItemsQuantityOutput
Description

Contains the updated negotiable quote template.
Fields
Field Name 	Description
quote_template - NegotiableQuoteTemplate 	The updated negotiable quote template.
Example

{"quote_template": NegotiableQuoteTemplate}

back to top
Types
UpdateNegotiableQuoteTemplateQuantitiesInput
Description

Specifies the items to update.
Fields
Input Field 	Description
items - [NegotiableQuoteTemplateItemQuantityInput]! 	An array of items to update.
template_id - ID! 	The unique ID of a NegotiableQuoteTemplate object.
Example

{
  "items": [NegotiableQuoteTemplateItemQuantityInput],
  "template_id": "4"
}

back to top
Types
UpdateProductsInWishlistOutput
Description

Contains the customer's wish list and any errors encountered.
Fields
Field Name 	Description
user_errors - [WishListUserInputError]! 	An array of errors encountered while updating products in a wish list.
wishlist - Wishlist! 	Contains the wish list with all items that were successfully updated.
Example

{
  "user_errors": [WishListUserInputError],
  "wishlist": Wishlist
}

back to top
Types
UpdatePurchaseOrderApprovalRuleInput
Description

Defines the changes to be made to an approval rule.
Fields
Input Field 	Description
applies_to - [ID] 	An updated list of company user role IDs to which this purchase order approval rule should be applied. When an empty array is provided, the rule is applied to all user roles in the system, including those created in the future.
approvers - [ID] 	An updated list of B2B user roles that can approve this purchase order approval rule.
condition - CreatePurchaseOrderApprovalRuleConditionInput 	The updated condition of the purchase order approval rule.
description - String 	The updated approval rule description.
name - String 	The updated approval rule name.
status - PurchaseOrderApprovalRuleStatus 	The updated status of the purchase order approval rule.
uid - ID! 	Unique identifier for the purchase order approval rule.
Example

{
  "applies_to": [4],
  "approvers": [4],
  "condition": CreatePurchaseOrderApprovalRuleConditionInput,
  "description": "abc123",
  "name": "abc123",
  "status": "ENABLED",
  "uid": "4"
}

back to top
Types
UpdateRequisitionListInput
Description

An input object that defines which requistion list characteristics to update.
Fields
Input Field 	Description
description - String 	The updated description of the requisition list.
name - String! 	The new name of the requisition list.
Example

{
  "description": "xyz789",
  "name": "abc123"
}

back to top
Types
UpdateRequisitionListItemsInput
Description

Defines which items in a requisition list to update.
Fields
Input Field 	Description
entered_options - [EnteredOptionInput] 	An array of customer-entered options.
item_id - ID! 	The ID of the requisition list item to update.
quantity - Float 	The new quantity of the item.
selected_options - [String] 	An array of selected option IDs.
Example

{
  "entered_options": [EnteredOptionInput],
  "item_id": "4",
  "quantity": 987.65,
  "selected_options": ["xyz789"]
}

back to top
Types
UpdateRequisitionListItemsOutput
Description

Output of the request to update items in the specified requisition list.
Fields
Field Name 	Description
requisition_list - RequisitionList 	The requisition list after updating items.
Example

{"requisition_list": RequisitionList}

back to top
Types
UpdateRequisitionListOutput
Description

Output of the request to rename the requisition list.
Fields
Field Name 	Description
requisition_list - RequisitionList 	The renamed requisition list.
Example

{"requisition_list": RequisitionList}

back to top
Types
UpdateWishlistOutput
Description

Contains the name and visibility of an updated wish list.
Fields
Field Name 	Description
name - String! 	The wish list name.
uid - ID! 	The unique ID of a Wishlist object.
visibility - WishlistVisibilityEnum! 	Indicates whether the wish list is public or private.
Example

{
  "name": "abc123",
  "uid": "4",
  "visibility": "PUBLIC"
}

back to top
Types
UrlRewrite
Description

Contains URL rewrite details.
Fields
Field Name 	Description
parameters - [HttpQueryParameter] 	An array of request parameters.
url - String 	The request URL.
Example

{
  "parameters": [HttpQueryParameter],
  "url": "abc123"
}

back to top
Types
UrlRewriteEntityTypeEnum
Description

This enumeration defines the entity type.
Values
Enum Value 	Description

CMS_PAGE


PRODUCT


CATEGORY

Example

"CMS_PAGE"

back to top
Types
UseInLayeredNavigationOptions
Description

Defines whether the attribute is filterable in layered navigation.
Values
Enum Value 	Description

NO


FILTERABLE_WITH_RESULTS


FILTERABLE_NO_RESULT

Example

"NO"

back to top
Types
UserCompaniesInput
Description

Defines the input for returning matching companies the customer is assigned to.
Fields
Input Field 	Description
currentPage - Int 	Specifies which page of results to return. The default value is 1.
pageSize - Int 	Specifies the maximum number of results to return at once. This attribute is optional.
sort - [CompaniesSortInput] 	Defines the sorting of the results.
Example

{
  "currentPage": 123,
  "pageSize": 123,
  "sort": [CompaniesSortInput]
}

back to top
Types
UserCompaniesOutput
Description

An object that contains a list of companies customer is assigned to.
Fields
Field Name 	Description
items - [CompanyBasicInfo]! 	An array of companies customer is assigned to.
page_info - SearchResultPageInfo! 	Provides navigation for the query response.
Example

{
  "items": [CompanyBasicInfo],
  "page_info": SearchResultPageInfo
}

back to top
Types
ValidatePurchaseOrderError
Description

Contains details about a failed validation attempt.
Fields
Field Name 	Description
message - String! 	The returned error message.
type - ValidatePurchaseOrderErrorType! 	Error type.
Example

{"message": "abc123", "type": "NOT_FOUND"}

back to top
Types
ValidatePurchaseOrderErrorType
Values
Enum Value 	Description

NOT_FOUND


OPERATION_NOT_APPLICABLE


COULD_NOT_SAVE


NOT_VALID_DATA


UNDEFINED

Example

"NOT_FOUND"

back to top
Types
ValidatePurchaseOrdersInput
Description

Defines the purchase orders to be validated.
Fields
Input Field 	Description
purchase_order_uids - [ID]! 	An array of the purchase order IDs.
Example

{"purchase_order_uids": ["4"]}

back to top
Types
ValidatePurchaseOrdersOutput
Description

Contains the results of validation attempts.
Fields
Field Name 	Description
errors - [ValidatePurchaseOrderError]! 	An array of error messages encountered while performing the operation.
purchase_orders - [PurchaseOrder]! 	An array of the purchase orders in the request.
Example

{
  "errors": [ValidatePurchaseOrderError],
  "purchase_orders": [PurchaseOrder]
}

back to top
Types
ValidationRule
Description

Defines a customer attribute validation rule.
Fields
Field Name 	Description
name - ValidationRuleEnum 	Validation rule name applied to a customer attribute.
value - String 	Validation rule value.
Example

{
  "name": "DATE_RANGE_MAX",
  "value": "abc123"
}

back to top
Types
ValidationRuleEnum
Description

List of validation rule names applied to a customer attribute.
Values
Enum Value 	Description

DATE_RANGE_MAX


DATE_RANGE_MIN


FILE_EXTENSIONS


INPUT_VALIDATION


MAX_TEXT_LENGTH


MIN_TEXT_LENGTH


MAX_FILE_SIZE


MAX_IMAGE_HEIGHT


MAX_IMAGE_WIDTH

Example

"DATE_RANGE_MAX"

back to top
Types
VaultConfigOutput
Description

Retrieves the vault configuration
Fields
Field Name 	Description
credit_card - VaultCreditCardConfig 	Credit card vault method configuration
Example

{"credit_card": VaultCreditCardConfig}

back to top
Types
VaultCreditCardConfig
Fields
Field Name 	Description
is_vault_enabled - Boolean 	Is vault enabled
sdk_params - [SDKParams] 	The parameters required to load the Paypal JS SDK
three_ds_mode - ThreeDSMode 	3DS mode
Example

{
  "is_vault_enabled": true,
  "sdk_params": [SDKParams],
  "three_ds_mode": "OFF"
}

back to top
Types
VaultMethodInput
Description

Vault payment inputs
Fields
Input Field 	Description
payment_source - String 	The payment source for the payment method
payments_order_id - String 	The payment services order ID
paypal_order_id - String 	PayPal order ID
public_hash - String 	The public hash of the token.
Example

{
  "payment_source": "xyz789",
  "payments_order_id": "xyz789",
  "paypal_order_id": "xyz789",
  "public_hash": "xyz789"
}

back to top
Types
VaultSetupTokenInput
Description

The payment source information
Fields
Input Field 	Description
payment_source - PaymentSourceInput! 	The payment source information
Example

{"payment_source": PaymentSourceInput}

back to top
Types
VaultTokenInput
Description

Contains required input for payment methods with Vault support.
Fields
Input Field 	Description
public_hash - String! 	The public hash of the payment token.
Example

{"public_hash": "xyz789"}

back to top
Types
VirtualCartItem
Description

An implementation for virtual product cart items.
Fields
Field Name 	Description
customizable_options - [SelectedCustomizableOption]! 	An array containing customizable options the shopper selected.
discount - [Discount] 	Contains discount for quote line item.
errors - [CartItemError] 	An array of errors encountered while loading the cart item
id - String! 	Use uid instead. Deprecated
is_available - Boolean! 	True if requested quantity is less than available stock, false otherwise.
max_qty - Float 	Line item max qty in quote template
min_qty - Float 	Line item min qty in quote template
not_available_message - String 	Message to display when the product is not available with this selected option.
note_from_buyer - [ItemNote] 	The buyer's quote line item note.
note_from_seller - [ItemNote] 	The seller's quote line item note.
prices - CartItemPrices 	Contains details about the price of the item, including taxes and discounts.
product - ProductInterface! 	Details about an item in the cart.
quantity - Float! 	The quantity of this item in the cart.
uid - ID! 	The unique ID for a CartItemInterface object.
Example

{
  "customizable_options": [SelectedCustomizableOption],
  "discount": [Discount],
  "errors": [CartItemError],
  "id": "xyz789",
  "is_available": true,
  "max_qty": 987.65,
  "min_qty": 987.65,
  "not_available_message": "abc123",
  "note_from_buyer": [ItemNote],
  "note_from_seller": [ItemNote],
  "prices": CartItemPrices,
  "product": ProductInterface,
  "quantity": 123.45,
  "uid": 4
}

back to top
Types
VirtualProduct
Description

Defines a virtual product, which is a non-tangible product that does not require shipping and is not kept in inventory.
Fields
Field Name 	Description
activity - String 	Use the custom_attributes field instead. Deprecated
attribute_set_id - Int 	The attribute set assigned to the product. The field should not be used on the storefront. Deprecated
canonical_url - String 	The relative canonical URL. This value is returned only if the system setting 'Use Canonical Link Meta Tag For Products' is enabled.
categories - [CategoryInterface] 	The categories assigned to a product.
category_gear - String 	Use the custom_attributes field instead. Deprecated
climate - String 	Use the custom_attributes field instead. Deprecated
collar - String 	Use the custom_attributes field instead. Deprecated
color - Int 	Use the custom_attributes field instead. Deprecated
country_of_manufacture - String 	The product's country of origin.
created_at - String 	Timestamp indicating when the product was created. The field should not be used on the storefront. Deprecated
crosssell_products - [ProductInterface] 	An array of cross-sell products.
custom_attributesV2 - ProductCustomAttributes 	Product custom attributes.
description - ComplexTextValue 	Detailed information about the product. The value can include simple HTML tags.
eco_collection - Int 	Use the custom_attributes field instead. Deprecated
erin_recommends - Int 	Use the custom_attributes field instead. Deprecated
features_bags - String 	Use the custom_attributes field instead. Deprecated
format - Int 	Use the custom_attributes field instead. Deprecated
gender - String 	Use the custom_attributes field instead. Deprecated
gift_message_available - Boolean! 	Returns a value indicating gift message availability for the product.
gift_wrapping_available - Boolean! 	Returns a value indicating gift wrapping availability for the product.
gift_wrapping_price - Money 	Returns value and currency indicating gift wrapping price for the product.
id - Int 	The ID number assigned to the product. Use the uid field instead. Deprecated
image - ProductImage 	The relative path to the main image on the product page.
is_returnable - String 	Indicates whether the product can be returned.
manufacturer - Int 	A number representing the product's manufacturer. Use the custom_attributes field instead. Deprecated
material - String 	Use the custom_attributes field instead. Deprecated
max_sale_qty - Float 	Maximum Qty Allowed in Shopping Cart
media_gallery - [MediaGalleryInterface] 	An array of media gallery objects.
media_gallery_entries - [MediaGalleryEntry] 	An array of MediaGalleryEntry objects. Use media_gallery instead. Deprecated
meta_description - String 	A brief overview of the product for search results listings, maximum 255 characters.
meta_keyword - String 	A comma-separated list of keywords that are visible only to search engines.
meta_title - String 	A string that is displayed in the title bar and tab of the browser and in search results lists.
min_sale_qty - Float 	Minimum Qty Allowed in Shopping Cart
name - String 	The product name. Customers use this name to identify the product.
new - Int 	Use the custom_attributes field instead. Deprecated
new_from_date - String 	The beginning date for new product listings, and determines if the product is featured as a new product.
new_to_date - String 	The end date for new product listings.
only_x_left_in_stock - Float 	Product stock only x left count
options - [CustomizableOptionInterface] 	An array of options for a customizable product.
options_container - String 	If the product has multiple options, determines where they appear on the product page.
pattern - String 	Use the custom_attributes field instead. Deprecated
performance_fabric - Int 	Use the custom_attributes field instead. Deprecated
price - ProductPrices 	Indicates the price of an item. Use price_range for product price information. Deprecated
price_range - PriceRange! 	The range of prices for the product
price_tiers - [TierPrice] 	An array of TierPrice objects.
product_links - [ProductLinksInterface] 	An array of ProductLinks objects.
purpose - Int 	Use the custom_attributes field instead. Deprecated
quantity - Float 	Amount of available stock
rating_summary - Float! 	The average of all the ratings given to the product.
redirect_code - Int! 	Contains 0 when there is no redirect error. A value of 301 indicates the URL of the requested resource has been changed permanently, while a value of 302 indicates a temporary redirect.
related_products - [ProductInterface] 	An array of related products.
relative_url - String 	The internal relative URL. If the specified URL is a redirect, the query returns the redirected URL, not the original.
review_count - Int! 	The total count of all the reviews given to the product.
reviews - ProductReviews! 	The list of products reviews.
rules - [CatalogRule] 	Provides applied catalog rules in the current active cart
sale - Int 	Use the custom_attributes field instead. Deprecated
short_description - ComplexTextValue 	A short description of the product. Its use depends on the theme.
size - Int 	Use the custom_attributes field instead. Deprecated
sku - String 	A number or code assigned to a product to identify the product, options, price, and manufacturer.
sleeve - String 	Use the custom_attributes field instead. Deprecated
small_image - ProductImage 	The relative path to the small image, which is used on catalog pages.
special_from_date - String 	The beginning date that a product has a special price. The field should not be used on the storefront. Deprecated
special_price - Float 	The discounted price of the product.
special_to_date - String 	The end date for a product with a special price.
staged - Boolean! 	Indicates whether the product is staged for a future campaign.
stock_status - ProductStockStatus 	Stock status of the product
strap_bags - String 	Use the custom_attributes field instead. Deprecated
style_bags - String 	Use the custom_attributes field instead. Deprecated
style_bottom - String 	Use the custom_attributes field instead. Deprecated
style_general - String 	Use the custom_attributes field instead. Deprecated
swatch_image - String 	The file name of a swatch image.
thumbnail - ProductImage 	The relative path to the product's thumbnail image.
tier_price - Float 	The price when tier pricing is in effect and the items purchased threshold has been reached. Use price_tiers for product tier price information. Deprecated
tier_prices - [ProductTierPrices] 	An array of ProductTierPrices objects. Use price_tiers for product tier price information. Deprecated
type - UrlRewriteEntityTypeEnum 	One of PRODUCT, CATEGORY, or CMS_PAGE.
type_id - String 	One of simple, virtual, bundle, downloadable, grouped, or configurable. Use __typename instead. Deprecated
uid - ID! 	The unique ID for a ProductInterface object.
updated_at - String 	Timestamp indicating when the product was updated. The field should not be used on the storefront. Deprecated
upsell_products - [ProductInterface] 	An array of up-sell products.
url_key - String 	The part of the URL that identifies the product
url_path - String 	Use product's canonical_url or url rewrites instead Deprecated
url_rewrites - [UrlRewrite] 	URL rewrites list
url_suffix - String 	The part of the product URL that is appended after the url key
websites - [Website] 	An array of websites in which the product is available. The field should not be used on the storefront. Deprecated
Example

{
  "activity": "xyz789",
  "attribute_set_id": 123,
  "canonical_url": "abc123",
  "categories": [CategoryInterface],
  "category_gear": "abc123",
  "climate": "xyz789",
  "collar": "abc123",
  "color": 123,
  "country_of_manufacture": "xyz789",
  "created_at": "xyz789",
  "crosssell_products": [ProductInterface],
  "custom_attributesV2": ProductCustomAttributes,
  "description": ComplexTextValue,
  "eco_collection": 987,
  "erin_recommends": 123,
  "features_bags": "xyz789",
  "format": 123,
  "gender": "xyz789",
  "gift_message_available": true,
  "gift_wrapping_available": false,
  "gift_wrapping_price": Money,
  "id": 123,
  "image": ProductImage,
  "is_returnable": "xyz789",
  "manufacturer": 987,
  "material": "xyz789",
  "max_sale_qty": 987.65,
  "media_gallery": [MediaGalleryInterface],
  "media_gallery_entries": [MediaGalleryEntry],
  "meta_description": "abc123",
  "meta_keyword": "xyz789",
  "meta_title": "abc123",
  "min_sale_qty": 123.45,
  "name": "abc123",
  "new": 123,
  "new_from_date": "abc123",
  "new_to_date": "xyz789",
  "only_x_left_in_stock": 123.45,
  "options": [CustomizableOptionInterface],
  "options_container": "abc123",
  "pattern": "abc123",
  "performance_fabric": 123,
  "price": ProductPrices,
  "price_range": PriceRange,
  "price_tiers": [TierPrice],
  "product_links": [ProductLinksInterface],
  "purpose": 987,
  "quantity": 123.45,
  "rating_summary": 123.45,
  "redirect_code": 123,
  "related_products": [ProductInterface],
  "relative_url": "xyz789",
  "review_count": 987,
  "reviews": ProductReviews,
  "rules": [CatalogRule],
  "sale": 123,
  "short_description": ComplexTextValue,
  "size": 987,
  "sku": "abc123",
  "sleeve": "abc123",
  "small_image": ProductImage,
  "special_from_date": "abc123",
  "special_price": 987.65,
  "special_to_date": "abc123",
  "staged": false,
  "stock_status": "IN_STOCK",
  "strap_bags": "xyz789",
  "style_bags": "abc123",
  "style_bottom": "abc123",
  "style_general": "xyz789",
  "swatch_image": "xyz789",
  "thumbnail": ProductImage,
  "tier_price": 987.65,
  "tier_prices": [ProductTierPrices],
  "type": "CMS_PAGE",
  "type_id": "abc123",
  "uid": 4,
  "updated_at": "abc123",
  "upsell_products": [ProductInterface],
  "url_key": "xyz789",
  "url_path": "xyz789",
  "url_rewrites": [UrlRewrite],
  "url_suffix": "abc123",
  "websites": [Website]
}

back to top
Types
VirtualProductCartItemInput
Description

Defines a single product to add to the cart.
Fields
Input Field 	Description
customizable_options - [CustomizableOptionInput] 	An array that defines customizable options for the product.
data - CartItemInput! 	An object containing the sku, quantity, and other relevant information about the product.
Example

{
  "customizable_options": [CustomizableOptionInput],
  "data": CartItemInput
}

back to top
Types
VirtualRequisitionListItem
Description

Contains details about virtual products added to a requisition list.
Fields
Field Name 	Description
customizable_options - [SelectedCustomizableOption]! 	Selected custom options for an item in the requisition list.
product - ProductInterface! 	Details about a requisition list item.
quantity - Float! 	The amount added.
uid - ID! 	The unique ID for the requisition list item.
Example

{
  "customizable_options": [SelectedCustomizableOption],
  "product": ProductInterface,
  "quantity": 123.45,
  "uid": 4
}

back to top
Types
VirtualWishlistItem
Description

Contains a virtual product wish list item.
Fields
Field Name 	Description
added_at - String! 	The date and time the item was added to the wish list.
customizable_options - [SelectedCustomizableOption]! 	Custom options selected for the wish list item.
description - String 	The description of the item.
id - ID! 	The unique ID for a WishlistItemInterface object.
product - ProductInterface 	Product details of the wish list item.
quantity - Float! 	The quantity of this wish list item.
Example

{
  "added_at": "xyz789",
  "customizable_options": [SelectedCustomizableOption],
  "description": "abc123",
  "id": "4",
  "product": ProductInterface,
  "quantity": 987.65
}

back to top
Types
Website
Description

Deprecated. It should not be used on the storefront. Contains information about a website.
Fields
Field Name 	Description
code - String 	A code assigned to the website to identify it. The field should not be used on the storefront. Deprecated
default_group_id - String 	The default group ID of the website. The field should not be used on the storefront. Deprecated
id - Int 	The ID number assigned to the website. The field should not be used on the storefront. Deprecated
is_default - Boolean 	Indicates whether this is the default website. The field should not be used on the storefront. Deprecated
name - String 	The website name. Websites use this name to identify it easier. The field should not be used on the storefront. Deprecated
sort_order - Int 	The attribute to use for sorting websites. The field should not be used on the storefront. Deprecated
Example

{
  "code": "abc123",
  "default_group_id": "xyz789",
  "id": 987,
  "is_default": true,
  "name": "xyz789",
  "sort_order": 123
}

back to top
Types
WishListUserInputError
Description

An error encountered while performing operations with WishList.
Fields
Field Name 	Description
code - WishListUserInputErrorType! 	A wish list-specific error code.
message - String! 	A localized error message.
Example

{
  "code": "PRODUCT_NOT_FOUND",
  "message": "xyz789"
}

back to top
Types
WishListUserInputErrorType
Description

A list of possible error types.
Values
Enum Value 	Description

PRODUCT_NOT_FOUND


UNDEFINED

Example

"PRODUCT_NOT_FOUND"

back to top
Types
Wishlist
Description

Contains a customer wish list.
Fields
Field Name 	Description
id - ID 	The unique ID for a Wishlist object.
items - [WishlistItem] 	Use the items_v2 field instead. Deprecated
items_count - Int 	The number of items in the wish list.
items_v2 - WishlistItems 	An array of items in the customer's wish list.
name - String 	The name of the wish list.
sharing_code - String 	An encrypted code that Magento uses to link to the wish list.
updated_at - String 	The time of the last modification to the wish list.
visibility - WishlistVisibilityEnum! 	Indicates whether the wish list is public or private.
Example

{
  "id": "4",
  "items": [WishlistItem],
  "items_count": 987,
  "items_v2": WishlistItems,
  "name": "xyz789",
  "sharing_code": "abc123",
  "updated_at": "abc123",
  "visibility": "PUBLIC"
}

back to top
Types
WishlistCartUserInputError
Description

Contains details about errors encountered when a customer added wish list items to the cart.
Fields
Field Name 	Description
code - WishlistCartUserInputErrorType! 	An error code that describes the error encountered.
message - String! 	A localized error message.
wishlistId - ID! 	The unique ID of the Wishlist object containing an error.
wishlistItemId - ID! 	The unique ID of the wish list item containing an error.
Example

{
  "code": "PRODUCT_NOT_FOUND",
  "message": "abc123",
  "wishlistId": "4",
  "wishlistItemId": "4"
}

back to top
Types
WishlistCartUserInputErrorType
Description

A list of possible error types.
Values
Enum Value 	Description

PRODUCT_NOT_FOUND


NOT_SALABLE


INSUFFICIENT_STOCK


UNDEFINED

Example

"PRODUCT_NOT_FOUND"

back to top
Types
WishlistItem
Description

Contains details about a wish list item.
Fields
Field Name 	Description
added_at - String 	The time when the customer added the item to the wish list.
description - String 	The customer's comment about this item.
id - Int 	The unique ID for a WishlistItem object.
product - ProductInterface 	Details about the wish list item.
qty - Float 	The quantity of this wish list item
Example

{
  "added_at": "abc123",
  "description": "xyz789",
  "id": 123,
  "product": ProductInterface,
  "qty": 987.65
}

back to top
Types
WishlistItemCopyInput
Description

Specifies the IDs of items to copy and their quantities.
Fields
Input Field 	Description
quantity - Float 	The quantity of this item to copy to the destination wish list. This value can't be greater than the quantity in the source wish list.
wishlist_item_id - ID! 	The unique ID of the WishlistItemInterface object to be copied.
Example

{
  "quantity": 123.45,
  "wishlist_item_id": "4"
}

back to top
Types
WishlistItemInput
Description

Defines the items to add to a wish list.
Fields
Input Field 	Description
entered_options - [EnteredOptionInput] 	An array of options that the customer entered.
parent_sku - String 	For complex product types, the SKU of the parent product.
quantity - Float! 	The amount or number of items to add.
selected_options - [ID] 	An array of strings corresponding to options the customer selected.
sku - String! 	The SKU of the product to add. For complex product types, specify the child product SKU.
Example

{
  "entered_options": [EnteredOptionInput],
  "parent_sku": "abc123",
  "quantity": 123.45,
  "selected_options": ["4"],
  "sku": "xyz789"
}

back to top
Types
WishlistItemInterface
Description

The interface for wish list items.
Fields
Field Name 	Description
added_at - String! 	The date and time the item was added to the wish list.
customizable_options - [SelectedCustomizableOption]! 	Custom options selected for the wish list item.
description - String 	The description of the item.
id - ID! 	The unique ID for a WishlistItemInterface object.
product - ProductInterface 	Product details of the wish list item.
quantity - Float! 	The quantity of this wish list item.
Possible Types
WishlistItemInterface Types

SimpleWishlistItem

VirtualWishlistItem

ConfigurableWishlistItem

BundleWishlistItem

DownloadableWishlistItem

GiftCardWishlistItem

GroupedProductWishlistItem
Example

{
  "added_at": "abc123",
  "customizable_options": [SelectedCustomizableOption],
  "description": "xyz789",
  "id": "4",
  "product": ProductInterface,
  "quantity": 123.45
}

back to top
Types
WishlistItemMoveInput
Description

Specifies the IDs of the items to move and their quantities.
Fields
Input Field 	Description
quantity - Float 	The quantity of this item to move to the destination wish list. This value can't be greater than the quantity in the source wish list.
wishlist_item_id - ID! 	The unique ID of the WishlistItemInterface object to be moved.
Example

{
  "quantity": 987.65,
  "wishlist_item_id": "4"
}

back to top
Types
WishlistItemUpdateInput
Description

Defines updates to items in a wish list.
Fields
Input Field 	Description
description - String 	Customer-entered comments about the item.
entered_options - [EnteredOptionInput] 	An array of options that the customer entered.
quantity - Float 	The new amount or number of this item.
selected_options - [ID] 	An array of strings corresponding to options the customer selected.
wishlist_item_id - ID! 	The unique ID for a WishlistItemInterface object.
Example

{
  "description": "abc123",
  "entered_options": [EnteredOptionInput],
  "quantity": 987.65,
  "selected_options": [4],
  "wishlist_item_id": 4
}

back to top
Types
WishlistItems
Description

Contains an array of items in a wish list.
Fields
Field Name 	Description
items - [WishlistItemInterface]! 	A list of items in the wish list.
page_info - SearchResultPageInfo 	Contains pagination metadata.
Example

{
  "items": [WishlistItemInterface],
  "page_info": SearchResultPageInfo
}

back to top
Types
WishlistOutput
Description

Deprecated: Use the Wishlist type instead.
Fields
Field Name 	Description
items - [WishlistItem] 	An array of items in the customer's wish list Use the Wishlist.items field instead. Deprecated
items_count - Int 	The number of items in the wish list. Use the Wishlist.items_count field instead. Deprecated
name - String 	When multiple wish lists are enabled, the name the customer assigns to the wishlist. This field is related to Commerce functionality and is always null in Open Source. Deprecated
sharing_code - String 	An encrypted code that links to the wish list. Use the Wishlist.sharing_code field instead. Deprecated
updated_at - String 	The time of the last modification to the wish list. Use the Wishlist.updated_at field instead. Deprecated
Example

{
  "items": [WishlistItem],
  "items_count": 123,
  "name": "abc123",
  "sharing_code": "abc123",
  "updated_at": "xyz789"
}

back to top
Types
WishlistVisibilityEnum
Description

Defines the wish list visibility types.
Values
Enum Value 	Description

PUBLIC


PRIVATE

Example

"PUBLIC"

back to top
Types
createEmptyCartInput
Description

Assigns a specific cart_id to the empty cart.
Fields
Input Field 	Description
cart_id - String 	The ID to assign to the cart.
Example

{"cart_id": "abc123"}

back to top